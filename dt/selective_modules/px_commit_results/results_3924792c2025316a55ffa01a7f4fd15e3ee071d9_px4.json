{"sha":"3924792c2025316a55ffa01a7f4fd15e3ee071d9","node_id":"MDY6Q29tbWl0NTI5ODc5MDozOTI0NzkyYzIwMjUzMTZhNTVmZmEwMWE3ZjRmZDE1ZTNlZTA3MWQ5","commit":{"author":{"name":"Daniel Agar","email":"daniel@agar.ca","date":"2020-11-11T03:45:50Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2020-11-11T03:45:50Z"},"message":"Jenkins: HIL improve run_tests.py and run_nsh_cmd.py helper\n\n - switch to python3\r\n - run_nsh_cmd.py return error if command fails\r\n - decrease timeout in checking for output\r\n - Jenkins hardware tests tolerate certain command failures that aren't available on all boards (flash constrained, etc)","tree":{"sha":"8d6089a5a92942eb464d2702f315905bf93318ea","url":"https://api.github.com/repos/PX4/PX4-Autopilot/git/trees/8d6089a5a92942eb464d2702f315905bf93318ea"},"url":"https://api.github.com/repos/PX4/PX4-Autopilot/git/commits/3924792c2025316a55ffa01a7f4fd15e3ee071d9","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfq15uCRBK7hj4Ov3rIwAAdHIIABIbTVrSJAlkHOgeCrJijafE\nS8XIDdVg2fdDVjzD/wja7tBpfNOq8m7k8LN97PX1yFJtBIgcu3TVMohydsiLYJHC\nE3vTvETbvTl44my4zH1AQ9N3I+lzvaccTNvFQIDczWHh3Gp/WMXmHCQdpXtuKcYB\nxyk6N+m6Zza81apUoE59LSZoqJAe17luAKCOJIfz1lgO4PJ3NbC3mBDzNlm2UEpU\nKv2qCFHyEmaSFhzPGDFxRoeCYe+RzhvqcnTpN8kEa0sFICpEW8uoHT6+FZSGM2fz\n7c/ENpPxSVGMEQrBoBER1kzNnXIJdQCGCbht0pZo0FC2uKLYzOE5NK7Na4vZgB0=\n=FVIr\n-----END PGP SIGNATURE-----\n","payload":"tree 8d6089a5a92942eb464d2702f315905bf93318ea\nparent ea09d9ebbf0f219b6f8e445d2045d985c111410f\nauthor Daniel Agar <daniel@agar.ca> 1605066350 -0500\ncommitter GitHub <noreply@github.com> 1605066350 -0500\n\nJenkins: HIL improve run_tests.py and run_nsh_cmd.py helper\n\n - switch to python3\r\n - run_nsh_cmd.py return error if command fails\r\n - decrease timeout in checking for output\r\n - Jenkins hardware tests tolerate certain command failures that aren't available on all boards (flash constrained, etc)"}},"url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/3924792c2025316a55ffa01a7f4fd15e3ee071d9","html_url":"https://github.com/PX4/PX4-Autopilot/commit/3924792c2025316a55ffa01a7f4fd15e3ee071d9","comments_url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/3924792c2025316a55ffa01a7f4fd15e3ee071d9/comments","author":{"login":"dagar","id":84712,"node_id":"MDQ6VXNlcjg0NzEy","avatar_url":"https://avatars.githubusercontent.com/u/84712?v=4","gravatar_id":"","url":"https://api.github.com/users/dagar","html_url":"https://github.com/dagar","followers_url":"https://api.github.com/users/dagar/followers","following_url":"https://api.github.com/users/dagar/following{/other_user}","gists_url":"https://api.github.com/users/dagar/gists{/gist_id}","starred_url":"https://api.github.com/users/dagar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dagar/subscriptions","organizations_url":"https://api.github.com/users/dagar/orgs","repos_url":"https://api.github.com/users/dagar/repos","events_url":"https://api.github.com/users/dagar/events{/privacy}","received_events_url":"https://api.github.com/users/dagar/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"ea09d9ebbf0f219b6f8e445d2045d985c111410f","url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/ea09d9ebbf0f219b6f8e445d2045d985c111410f","html_url":"https://github.com/PX4/PX4-Autopilot/commit/ea09d9ebbf0f219b6f8e445d2045d985c111410f"}],"stats":{"total":321,"additions":151,"deletions":170},"files":[{"sha":"644b989ed6dbf0ca204f5b10ea07bcc806f07e0e","filename":".ci/Jenkinsfile-hardware","status":"modified","additions":77,"deletions":101,"changes":178,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/3924792c2025316a55ffa01a7f4fd15e3ee071d9/.ci%2FJenkinsfile-hardware","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/3924792c2025316a55ffa01a7f4fd15e3ee071d9/.ci%2FJenkinsfile-hardware","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/.ci%2FJenkinsfile-hardware?ref=3924792c2025316a55ffa01a7f4fd15e3ee071d9","patch":"@@ -43,23 +43,7 @@ pipeline {\n                     sh 'find /dev/serial'\n                     unstash 'px4_fmu-v2_test'\n                     // flash board and watch bootup\n-                    sh './platforms/nuttx/Debug/upload_jlink_gdb.sh build/px4_fmu-v2_test/px4_fmu-v2_test.elf'\n-                    sh './Tools/HIL/monitor_firmware_upload.py --device `find /dev/serial -name *usb-FTDI_*` --baudrate 57600'\n-                  }\n-                }\n-                stage(\"configure\") {\n-                  steps {\n-                    // configure\n-                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param set CBRK_BUZZER 782097\"'  // disable buzzer\n-                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param set SYS_AUTOSTART 0\"'     // no airframe\n-                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param save\"'\n-                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"px4io forceupdate 14662 /etc/extras/px4_io-v2_default.bin\"' // force px4io update\n-                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"reboot\"'                        // reboot to apply\n-                  }\n-                }\n-                stage(\"status\") {\n-                  steps {\n-                    statusFTDI()\n+                    sh './platforms/nuttx/Debug/upload_jlink_gdb.sh build/px4_fmu-v2_test/px4_fmu-v2_test.elf && ./Tools/HIL/monitor_firmware_upload.py --device `find /dev/serial -name *usb-FTDI_*` --baudrate 57600'\n                   }\n                 }\n                 stage(\"reset\") {\n@@ -111,8 +95,7 @@ pipeline {\n                     sh 'find /dev/serial'\n                     unstash 'px4_fmu-v3_default'\n                     // flash board and watch bootup\n-                    sh './platforms/nuttx/Debug/upload_jlink_gdb.sh build/px4_fmu-v3_default/px4_fmu-v3_default.elf'\n-                    sh './Tools/HIL/monitor_firmware_upload.py --device `find /dev/serial -name *usb-FTDI_*` --baudrate 57600'\n+                    sh './platforms/nuttx/Debug/upload_jlink_gdb.sh build/px4_fmu-v3_default/px4_fmu-v3_default.elf && ./Tools/HIL/monitor_firmware_upload.py --device `find /dev/serial -name *usb-FTDI_*` --baudrate 57600'\n                   }\n                 }\n                 stage(\"configure\") {\n@@ -121,8 +104,8 @@ pipeline {\n                     sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param set CBRK_BUZZER 782097\"'  // disable buzzer\n                     sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param set SYS_AUTOSTART 13000\"' // generic vtol standard\n                     sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param save\"'\n-                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"px4io forceupdate 14662 /etc/extras/px4_io-v2_default.bin\"' // force px4io update\n-                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"reboot\"'                        // reboot to apply\n+                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"px4io forceupdate 14662 /etc/extras/px4_io-v2_default.bin\" || true' // force px4io update\n+                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"reboot\" || true'                // reboot to apply\n                   }\n                 }\n                 stage(\"status\") {\n@@ -185,8 +168,7 @@ pipeline {\n                     sh 'find /dev/serial'\n                     unstash 'px4_fmu-v4_default'\n                     // flash board and watch bootup\n-                    sh './platforms/nuttx/Debug/upload_jlink_gdb.sh build/px4_fmu-v4_default/px4_fmu-v4_default.elf'\n-                    sh './Tools/HIL/monitor_firmware_upload.py --device `find /dev/serial -name *usb-FTDI_*` --baudrate 57600'\n+                    sh './platforms/nuttx/Debug/upload_jlink_gdb.sh build/px4_fmu-v4_default/px4_fmu-v4_default.elf && ./Tools/HIL/monitor_firmware_upload.py --device `find /dev/serial -name *usb-FTDI_*` --baudrate 57600'\n                   }\n                 }\n                 stage(\"configure\") {\n@@ -195,7 +177,7 @@ pipeline {\n                     sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param set CBRK_BUZZER 782097\"'  // disable buzzer\n                     sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param set SYS_AUTOSTART 4001\"'  // generic multicopter\n                     sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param save\"'\n-                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"reboot\"'                        // reboot to apply\n+                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"reboot\" || true'                // reboot to apply\n                   }\n                 }\n                 stage(\"status\") {\n@@ -258,8 +240,7 @@ pipeline {\n                     sh 'find /dev/serial'\n                     unstash 'px4_fmu-v4pro_default'\n                     // flash board and watch bootup\n-                    sh './platforms/nuttx/Debug/upload_jlink_gdb.sh build/px4_fmu-v4pro_default/px4_fmu-v4pro_default.elf'\n-                    sh './Tools/HIL/monitor_firmware_upload.py --device `find /dev/serial -name *usb-FTDI_*` --baudrate 57600'\n+                    sh './platforms/nuttx/Debug/upload_jlink_gdb.sh build/px4_fmu-v4pro_default/px4_fmu-v4pro_default.elf && ./Tools/HIL/monitor_firmware_upload.py --device `find /dev/serial -name *usb-FTDI_*` --baudrate 57600'\n                   }\n                 }\n                 stage(\"configure\") {\n@@ -268,8 +249,8 @@ pipeline {\n                     sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param set CBRK_BUZZER 782097\"'  // disable buzzer\n                     sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param set SYS_AUTOSTART 13000\"' // generic vtol standard\n                     sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param save\"'\n-                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"px4io forceupdate 14662 /etc/extras/px4_io-v2_default.bin\"' // force px4io update\n-                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"reboot\"'                        // reboot to apply\n+                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"px4io forceupdate 14662 /etc/extras/px4_io-v2_default.bin\" || true' // force px4io update\n+                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"reboot\" || true'                // reboot to apply\n                   }\n                 }\n                 stage(\"status\") {\n@@ -332,8 +313,7 @@ pipeline {\n                     sh 'find /dev/serial'\n                     unstash 'px4_fmu-v5_default'\n                     // flash board and watch bootup\n-                    sh './platforms/nuttx/Debug/upload_jlink_gdb.sh build/px4_fmu-v5_default/px4_fmu-v5_default.elf'\n-                    sh './Tools/HIL/monitor_firmware_upload.py --device `find /dev/serial -name *usb-FTDI_*` --baudrate 57600'\n+                    sh './platforms/nuttx/Debug/upload_jlink_gdb.sh build/px4_fmu-v5_default/px4_fmu-v5_default.elf && ./Tools/HIL/monitor_firmware_upload.py --device `find /dev/serial -name *usb-FTDI_*` --baudrate 57600'\n                   }\n                 }\n                 stage(\"configure\") {\n@@ -343,8 +323,8 @@ pipeline {\n                     sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param set SYS_AUTOSTART 13000\"' // generic vtol standard\n                     sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param set IMU_GYRO_RATEMAX 2000\"'\n                     sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param save\"'\n-                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"px4io forceupdate 14662 /etc/extras/px4_io-v2_default.bin\"' // force px4io update\n-                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"reboot\"'                        // reboot to apply\n+                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"px4io forceupdate 14662 /etc/extras/px4_io-v2_default.bin\" || true' // force px4io update\n+                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"reboot\" || true'                // reboot to apply\n                   }\n                 }\n                 stage(\"status\") {\n@@ -407,19 +387,18 @@ pipeline {\n                     sh 'find /dev/serial'\n                     unstash 'px4_fmu-v5_debug'\n                     // flash board and watch bootup\n-                    sh './platforms/nuttx/Debug/upload_jlink_gdb.sh build/px4_fmu-v5_debug/px4_fmu-v5_debug.elf'\n-                    sh './Tools/HIL/monitor_firmware_upload.py --device `find /dev/serial -name *usb-FTDI_*` --baudrate 57600'\n+                    sh './platforms/nuttx/Debug/upload_jlink_gdb.sh build/px4_fmu-v5_debug/px4_fmu-v5_debug.elf && ./Tools/HIL/monitor_firmware_upload.py --device `find /dev/serial -name *usb-FTDI_*` --baudrate 57600'\n                   }\n                 }\n                 stage(\"configure\") {\n                   steps {\n                     // configure\n-                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param set CBRK_BUZZER 782097\"'  // disable buzzer\n+                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param set CBRK_BUZZER 782097\"'   // disable buzzer\n                     sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param set IMU_GYRO_RATEMAX 250\"' // limit cpu usage\n-                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param set SYS_AUTOSTART 4001\"' // generic multicopter\n+                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param set SYS_AUTOSTART 4001\"'   // generic multicopter\n                     sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param save\"'\n-                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"px4io forceupdate 14662 /etc/extras/px4_io-v2_default.bin\"' // force px4io update\n-                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"reboot\"'                        // reboot to apply\n+                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"px4io forceupdate 14662 /etc/extras/px4_io-v2_default.bin\" || true' // force px4io update\n+                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"reboot\" || true'                 // reboot to apply\n                   }\n                 }\n                 stage(\"status\") {\n@@ -482,8 +461,7 @@ pipeline {\n                     sh 'find /dev/serial'\n                     unstash 'px4_fmu-v5_optimized'\n                     // flash board and watch bootup\n-                    sh './platforms/nuttx/Debug/upload_jlink_gdb.sh build/px4_fmu-v5_optimized/px4_fmu-v5_optimized.elf'\n-                    sh './Tools/HIL/monitor_firmware_upload.py --device `find /dev/serial -name *usb-FTDI_*` --baudrate 57600'\n+                    sh './platforms/nuttx/Debug/upload_jlink_gdb.sh build/px4_fmu-v5_optimized/px4_fmu-v5_optimized.elf && ./Tools/HIL/monitor_firmware_upload.py --device `find /dev/serial -name *usb-FTDI_*` --baudrate 57600'\n                   }\n                 }\n                 stage(\"configure\") {\n@@ -492,7 +470,7 @@ pipeline {\n                     sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param set CBRK_BUZZER 782097\"'  // disable buzzer\n                     sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param set SYS_AUTOSTART 13000\"' // generic vtol standard\n                     sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param save\"'\n-                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"reboot\"'                        // reboot to apply\n+                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"reboot\" || true'                // reboot to apply\n                   }\n                 }\n                 stage(\"status\") {\n@@ -555,8 +533,7 @@ pipeline {\n                     sh 'find /dev/serial'\n                     unstash 'px4_fmu-v5_stackcheck'\n                     // flash board and watch bootup\n-                    sh './platforms/nuttx/Debug/upload_jlink_gdb.sh build/px4_fmu-v5_stackcheck/px4_fmu-v5_stackcheck.elf'\n-                    sh './Tools/HIL/monitor_firmware_upload.py --device `find /dev/serial -name *usb-FTDI_*` --baudrate 57600'\n+                    sh './platforms/nuttx/Debug/upload_jlink_gdb.sh build/px4_fmu-v5_stackcheck/px4_fmu-v5_stackcheck.elf && ./Tools/HIL/monitor_firmware_upload.py --device `find /dev/serial -name *usb-FTDI_*` --baudrate 57600'\n                   }\n                 }\n                 stage(\"configure\") {\n@@ -567,7 +544,7 @@ pipeline {\n                     sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param set MAV_0_CONFIG 0\"'       // limit cpu usage\n                     sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param set SYS_AUTOSTART 4001\"'   // generic multicopter\n                     sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param save\"'\n-                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"reboot\"'                         // reboot to apply\n+                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"reboot\" || true'                 // reboot to apply\n                   }\n                 }\n                 stage(\"status\") {\n@@ -630,17 +607,16 @@ pipeline {\n                     sh 'find /dev/serial'\n                     unstash 'modalai_fc-v1_default'\n                     // flash board and watch bootup\n-                    sh './platforms/nuttx/Debug/upload_jlink_gdb.sh build/modalai_fc-v1_default/modalai_fc-v1_default.elf'\n-                    sh './Tools/HIL/monitor_firmware_upload.py --device `find /dev/serial -name *usb-SEGGER_*` --baudrate 57600'\n+                    sh './platforms/nuttx/Debug/upload_jlink_gdb.sh build/modalai_fc-v1_default/modalai_fc-v1_default.elf && ./Tools/HIL/monitor_firmware_upload.py --device `find /dev/serial -name *usb-SEGGER_*` --baudrate 57600'\n                   }\n                 }\n                 stage(\"configure\") {\n                   steps {\n                     // configure\n                     sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"param set CBRK_BUZZER 782097\"'  // disable buzzer\n-                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"param set SYS_AUTOSTART 4001\"' // generic vtol standardulticopter\n+                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"param set SYS_AUTOSTART 4001\"'  // generic vtol standardulticopter\n                     sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"param save\"'\n-                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"reboot\"'                        // reboot to apply\n+                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"reboot\" || true'                // reboot to apply\n                   }\n                 }\n                 stage(\"status\") {\n@@ -703,22 +679,21 @@ pipeline {\n                     sh 'find /dev/serial'\n                     unstash 'holybro_durandal-v1_default'\n                     // flash board and watch bootup\n-                    sh './platforms/nuttx/Debug/upload_jlink_gdb.sh build/holybro_durandal-v1_default/holybro_durandal-v1_default.elf'\n-                    sh './Tools/HIL/monitor_firmware_upload.py --device `find /dev/serial -name *usb-FTDI_*` --baudrate 57600'\n+                    sh './platforms/nuttx/Debug/upload_jlink_gdb.sh build/holybro_durandal-v1_default/holybro_durandal-v1_default.elf && ./Tools/HIL/monitor_firmware_upload.py --device `find /dev/serial -name *usb-FTDI_*` --baudrate 57600'\n                   }\n                 }\n                 stage(\"configure\") {\n                   steps {\n                     // configure\n-                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param set CBRK_BUZZER 782097\"'  // disable buzzer\n+                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param set CBRK_BUZZER 782097\"'    // disable buzzer\n                     sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param set DSHOT_CONFIG 600\"'\n                     sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param set IMU_GYRO_RATEMAX 4000\"'\n-                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param set SYS_AUTOSTART 4001\"' // generic quadcopter\n-                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param set SYS_BL_UPDATE 1\"'    // update bootloader\n-                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param set SYS_USE_IO 0\"'       // for dshot\n+                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param set SYS_AUTOSTART 4001\"'    // generic quadcopter\n+                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param set SYS_BL_UPDATE 1\"'       // update bootloader\n+                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param set SYS_USE_IO 0\"'          // for dshot\n                     sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param save\"'\n-                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"px4io forceupdate 14662 /etc/extras/px4_io-v2_default.bin\"' // force px4io update\n-                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"reboot\"'                        // reboot to apply\n+                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"px4io forceupdate 14662 /etc/extras/px4_io-v2_default.bin\" || true' // force px4io update\n+                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"reboot\" || true'                  // reboot to apply\n                   }\n                 }\n                 stage(\"status\") {\n@@ -782,8 +757,7 @@ pipeline {\n                     sh 'find /dev/serial'\n                     unstash 'nxp_fmuk66-v3_default'\n                     // flash board and watch bootup\n-                    sh './platforms/nuttx/Debug/upload_jlink_gdb.sh build/nxp_fmuk66-v3_default/nxp_fmuk66-v3_default.elf'\n-                    sh './Tools/HIL/monitor_firmware_upload.py --device `find /dev/serial -name *usb-FTDI_*` --baudrate 57600'\n+                    sh './platforms/nuttx/Debug/upload_jlink_gdb.sh build/nxp_fmuk66-v3_default/nxp_fmuk66-v3_default.elf && ./Tools/HIL/monitor_firmware_upload.py --device `find /dev/serial -name *usb-FTDI_*` --baudrate 57600'\n                   }\n                 }\n                 stage(\"configure\") {\n@@ -792,7 +766,7 @@ pipeline {\n                     sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param set CBRK_BUZZER 782097\"'  // disable buzzer\n                     sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param set SYS_AUTOSTART 4001\"'  // generic multicopter\n                     sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param save\"'\n-                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"reboot\"'                        // reboot to apply\n+                    sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"reboot\" || true'                // reboot to apply\n                   }\n                 }\n                 stage(\"status\") {\n@@ -839,15 +813,15 @@ void statusFTDI() {\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"free\"'\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"work_queue status\"'\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"board_adc test\"'\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"commander check\"'\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"commander check\" || true' // allow failure, not available everywhere\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"commander status\"'\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"commander calibrate accel quick; sleep 2; param show CAL_ACC*\"'\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"commander calibrate gyro; sleep 2; param show CAL_GYRO*\"'\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"commander calibrate level; sleep 2; param show SENS_BOARD*\"'\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"commander calibrate mag quick; sleep 2; param show CAL_MAG*\"'\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"dataman status\"'\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"commander calibrate accel quick; sleep 2; param show CAL_ACC*\" || true' // allow failure, not available everywhere\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"commander calibrate gyro; sleep 2; param show CAL_GYRO*\" || true' // allow failure, not available everywhere\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"commander calibrate level; sleep 2; param show SENS_BOARD*\" || true' // allow failure, not available everywhere\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"commander calibrate mag quick; sleep 2; param show CAL_MAG*\" || true' // allow failure, not available everywhere\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"dataman status\" || true' // allow failure for now\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"df\"'\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"dmesg\"'\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"dmesg\" || true' // allow failure, not available everywhere\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"gps status\"'\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"listener adc_report\"'\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"listener battery_status\"'\n@@ -893,11 +867,11 @@ void statusFTDI() {\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"perf latency\"'\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"perf\"'\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"ps\"'\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"pwm info -d /dev/pwm_output0\"'\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"pwm info -d /dev/pwm_output1\"'\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"pwm_out status\"'\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"px4io status\"'\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"sd_bench -r 2\"'\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"pwm info -d /dev/pwm_output0\" || true' // allow failure for now\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"pwm info -d /dev/pwm_output1\" || true' // allow failure for now\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"pwm_out status\" || true' // allow failure for now\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"px4io status\" || true' // allow failure for now\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"sd_bench -r 2\" || true' // allow failure for now\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"sensors status\"'\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"listener cpuload; top once; listener cpuload\"'\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"uorb status\"'\n@@ -907,7 +881,7 @@ void statusFTDI() {\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"ekf2 status\"'\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"free\"'\n   // stop logger\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"logger off\"'\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"logger off\" || true' // allow failure for now\n }\n \n void statusSEGGER() {\n@@ -917,15 +891,15 @@ void statusSEGGER() {\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"free\"'\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"work_queue status\"'\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"board_adc test\"'\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"commander check\"'\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"commander check\" || true' // allow failure, not available everywhere\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"commander status\"'\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"commander calibrate accel quick; sleep 2; param show CAL_ACC*\"'\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"commander calibrate gyro; sleep 2; param show CAL_GYRO*\"'\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"commander calibrate level; sleep 2; param show SENS_BOARD*\"'\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"commander calibrate mag quick; sleep 2; param show CAL_MAG*\"'\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"dataman status\"'\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"commander calibrate accel quick; sleep 2; param show CAL_ACC*\" || true' // allow failure, not available everywhere\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"commander calibrate gyro; sleep 2; param show CAL_GYRO*\" || true' // allow failure, not available everywhere\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"commander calibrate level; sleep 2; param show SENS_BOARD*\" || true' // allow failure, not available everywhere\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"commander calibrate mag quick; sleep 2; param show CAL_MAG*\" || true' // allow failure, not available everywhere\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"dataman status\" || true' // allow failure for now\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"df -h\"'\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"dmesg\"'\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"dmesg\" || true' // allow failure, not available everywhere\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"gps status\"'\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"listener adc_report\"'\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"listener battery_status\"'\n@@ -971,11 +945,11 @@ void statusSEGGER() {\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"perf latency\"'\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"perf\"'\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"ps\"'\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"pwm info -d /dev/pwm_output0\"'\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"pwm info -d /dev/pwm_output1\"'\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"pwm_out status\"'\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"px4io status\"'\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"sd_bench -r 2\"'\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"pwm info -d /dev/pwm_output0\" || true' // allow failure for now\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"pwm info -d /dev/pwm_output1\" || true' // allow failure for now\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"pwm_out status\" || true' // allow failure for now\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"px4io status\" || true' // allow failure for now\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"sd_bench -r 2\" || true' // allow failure for now\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"sensors status\"'\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"listener cpuload; top once; listener cpuload\"'\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"uorb status\"'\n@@ -985,22 +959,23 @@ void statusSEGGER() {\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"ekf2 status\"'\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"free\"'\n   // stop logger\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"logger off\"'\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"logger off\" || true' // allow failure for now\n }\n \n void cleanupFTDI() {\n-  // wipe sdcard\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"commander stop\"'\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"mavlink stop-all\"'\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"navigator stop\"'\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"dataman stop\"'\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"logger off\"'\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"umount /fs/microsd\"'\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"mkfatfs /dev/mmcsd0\"'\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"dataman stop\" || true' // allow failure for now\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"logger off\" || true' // allow failure for now\n+\n+  // wipe sdcard\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"umount /fs/microsd\" || true' // allow failure for now\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"mkfatfs /dev/mmcsd0\" || true' // allow failure for now\n \n   // drop any uncommited hardfaults\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"hardfault_log rearm\"'\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"hardfault_log reset\"'\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"hardfault_log rearm\" || true' // allow failure for now\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"hardfault_log reset\" || true' // allow failure for now\n \n   // erase mtd\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"mtd readtest\"'\n@@ -1015,22 +990,23 @@ void cleanupFTDI() {\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"param status\"'\n \n   // reboot\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"reboot\"'\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-FTDI_*` --cmd \"reboot\" || true'\n }\n \n void cleanupSEGGER() {\n-  // wipe sdcard\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"commander stop\"'\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"mavlink stop-all\"'\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"navigator stop\"'\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"dataman stop\"'\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"logger off\"'\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"umount /fs/microsd\"'\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"mkfatfs /dev/mmcsd0\"'\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"dataman stop\" || true' // allow failure for now\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"logger off\" || true' // allow failure for now\n+\n+  // wipe sdcard\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"umount /fs/microsd\" || true' // allow failure for now\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"mkfatfs /dev/mmcsd0\" || true' // allow failure for now\n \n   // drop any uncommited hardfaults\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"hardfault_log rearm\"'\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"hardfault_log reset\"'\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"hardfault_log rearm\" || true' // allow failure for now\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"hardfault_log reset\" || true' // allow failure for now\n \n   // erase mtd\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"mtd readtest\"'\n@@ -1045,5 +1021,5 @@ void cleanupSEGGER() {\n   sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"param status\"'\n \n   // reboot\n-  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"reboot\"'\n+  sh './Tools/HIL/run_nsh_cmd.py --device `find /dev/serial -name *usb-SEGGER_*` --cmd \"reboot\" || true'\n }"},{"sha":"873a53d062857998b47c3f50df8889380ccf9c8f","filename":"Tools/HIL/monitor_firmware_upload.py","status":"modified","additions":10,"deletions":8,"changes":18,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/3924792c2025316a55ffa01a7f4fd15e3ee071d9/Tools%2FHIL%2Fmonitor_firmware_upload.py","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/3924792c2025316a55ffa01a7f4fd15e3ee071d9/Tools%2FHIL%2Fmonitor_firmware_upload.py","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/Tools%2FHIL%2Fmonitor_firmware_upload.py?ref=3924792c2025316a55ffa01a7f4fd15e3ee071d9","patch":"@@ -1,4 +1,4 @@\n-#! /usr/bin/python\n+#! /usr/bin/env python3\n \n import serial, time\n import subprocess\n@@ -10,7 +10,7 @@ def monitor_firmware_upload(port, baudrate):\n     databits = serial.EIGHTBITS\n     stopbits = serial.STOPBITS_ONE\n     parity = serial.PARITY_NONE\n-    ser = serial.Serial(port, baudrate, databits, parity, stopbits, timeout=10)\n+    ser = serial.Serial(port, baudrate, databits, parity, stopbits, timeout=1)\n \n     finished = 0\n \n@@ -19,8 +19,9 @@ def monitor_firmware_upload(port, baudrate):\n     timeout_newline = time.time()\n \n     while finished == 0:\n-        serial_line = ser.readline()\n-        print(serial_line.replace('\\n',''))\n+        serial_line = ser.readline().decode(\"utf-8\", errors='ignore')\n+        if (len(serial_line) > 0):\n+            print(serial_line.replace('\\n', ''))\n \n         if \"NuttShell (NSH)\" in serial_line:\n             finished = 1\n@@ -36,16 +37,17 @@ def monitor_firmware_upload(port, baudrate):\n             finished = 1\n             break\n \n-        # newline every 30 seconds if still running\n-        if time.time() - timeout_newline > 30:\n-            ser.write('\\n')\n+        # newline every 10 seconds if still running\n+        if time.time() - timeout_newline > 10:\n             timeout_newline = time.time()\n+            ser.write('\\n'.encode(\"utf-8\"))\n+            ser.flush()\n \n     ser.close()\n \n def main():\n     parser = ArgumentParser(description=__doc__)\n-    parser.add_argument('--device', \"-d\", nargs='?', default = None, help='')\n+    parser.add_argument('--device', \"-d\", nargs='?', default=None, help='', required=True)\n     parser.add_argument(\"--baudrate\", \"-b\", dest=\"baudrate\", type=int, help=\"Mavlink port baud rate (default=57600)\", default=57600)\n     args = parser.parse_args()\n "},{"sha":"24f611b933118712a63a0c5a9f6b55619d9c0d91","filename":"Tools/HIL/run_nsh_cmd.py","status":"modified","additions":34,"deletions":32,"changes":66,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/3924792c2025316a55ffa01a7f4fd15e3ee071d9/Tools%2FHIL%2Frun_nsh_cmd.py","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/3924792c2025316a55ffa01a7f4fd15e3ee071d9/Tools%2FHIL%2Frun_nsh_cmd.py","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/Tools%2FHIL%2Frun_nsh_cmd.py?ref=3924792c2025316a55ffa01a7f4fd15e3ee071d9","patch":"@@ -1,72 +1,74 @@\n-#! /usr/bin/python\n+#! /usr/bin/env python3\n \n import serial, time\n import subprocess\n from subprocess import call, Popen\n from argparse import ArgumentParser\n import re\n+import sys\n \n def do_nsh_cmd(port, baudrate, cmd):\n     databits = serial.EIGHTBITS\n     stopbits = serial.STOPBITS_ONE\n     parity = serial.PARITY_NONE\n-    ser = serial.Serial(port, baudrate, databits, parity, stopbits, timeout=10)\n+    ser = serial.Serial(port, baudrate, databits, parity, stopbits, timeout=0.1)\n \n-    ser.write('\\n')\n-\n-    finished = 0\n-    success = False\n-\n-    timeout = 10  # 10 seconds\n+    # run command\n     timeout_start = time.time()\n+    timeout = 10  # 10 seconds\n+\n+    success_cmd = \"cmd succeeded!\"\n \n     while True:\n-        serial_line = ser.readline()\n-        print(serial_line.replace('\\n',''))\n+        serial_cmd = '{0}; echo \"{1}\"\\n'.format(cmd, success_cmd)\n+        ser.write(serial_cmd.encode(\"utf-8\"))\n+        ser.flush()\n \n-        if \"nsh>\" in serial_line:\n-            break\n-        elif \"NuttShell (NSH)\" in serial_line:\n+        serial_line = ser.readline().decode(\"utf-8\", errors='ignore')\n+\n+        if cmd in serial_line:\n             break\n+        else:\n+            print(serial_line.replace('\\n', ''))\n \n         if time.time() > timeout_start + timeout:\n             print(\"Error, timeout\")\n+            sys.exit(-1)\n             break\n \n-        ser.write('\\n')\n-        time.sleep(0.01)\n+        time.sleep(1)\n \n \n-    # run command\n-    ser.write(cmd + '\\n')\n-\n-    timeout = 30  # 30 seconds\n     timeout_start = time.time()\n-    timeout_newline = timeout_start\n+    timeout = 30  # 30 seconds\n \n     while True:\n-        serial_line = ser.readline()\n-        print(serial_line.replace('\\n',''))\n+        serial_line = ser.readline().decode(\"utf-8\", errors='ignore')\n \n-        if cmd in serial_line:\n-            continue\n-        elif \"nsh>\" in serial_line:\n-            break\n-        elif \"NuttShell (NSH)\" in serial_line:\n+        if success_cmd in serial_line:\n             break\n+        else:\n+            if len(serial_line) > 0:\n+                print(serial_line.replace('\\n', ''))\n+\n+            if \"nsh>\" in serial_line:\n+                sys.exit(-1) # error, command didn't complete successfully\n+            elif \"NuttShell (NSH)\" in serial_line:\n+                sys.exit(-1) # error, command didn't complete successfully\n+\n+        if len(serial_line) <= 0:\n+            ser.write(\"\\n\".encode(\"utf-8\"))\n+            ser.flush()\n \n         if time.time() > timeout_start + timeout:\n             print(\"Error, timeout\")\n-            break\n-\n-        ser.write('\\n')\n-        time.sleep(0.01)\n+            sys.exit(-1)\n \n     ser.close()\n \n def main():\n     parser = ArgumentParser(description=__doc__)\n-    parser.add_argument('--device', \"-d\", nargs='?', default = None, help='')\n+    parser.add_argument('--device', \"-d\", nargs='?', default=None, help='', required=True)\n     parser.add_argument(\"--baudrate\", \"-b\", dest=\"baudrate\", type=int, help=\"Mavlink port baud rate (default=57600)\", default=57600)\n     parser.add_argument(\"--cmd\", \"-c\", dest=\"cmd\", help=\"Command to run\")\n     args = parser.parse_args()"},{"sha":"40a762aaa8096b2463d48cd82ad0d11210e1282a","filename":"Tools/HIL/run_tests.py","status":"modified","additions":30,"deletions":29,"changes":59,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/3924792c2025316a55ffa01a7f4fd15e3ee071d9/Tools%2FHIL%2Frun_tests.py","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/3924792c2025316a55ffa01a7f4fd15e3ee071d9/Tools%2FHIL%2Frun_tests.py","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/Tools%2FHIL%2Frun_tests.py?ref=3924792c2025316a55ffa01a7f4fd15e3ee071d9","patch":"@@ -1,4 +1,4 @@\n-#! /usr/bin/python\n+#! /usr/bin/env python3\n \n import serial, time\n import subprocess\n@@ -7,52 +7,53 @@\n import re\n import unittest\n import os\n+import sys\n \n def do_test(port, baudrate, test_name):\n     databits = serial.EIGHTBITS\n     stopbits = serial.STOPBITS_ONE\n     parity = serial.PARITY_NONE\n-    ser = serial.Serial(port, baudrate, databits, parity, stopbits, timeout=10)\n-\n-    ser.write('\\n')\n+    ser = serial.Serial(port, baudrate, databits, parity, stopbits, timeout=1)\n \n     success = False\n \n-    timeout = 10  # 10 seconds\n+    # run test cmd\n+    print('\\n|======================================================================')\n+    cmd = 'tests ' + test_name\n+    print(\"| Running:\", cmd)\n+    print('|======================================================================')\n     timeout_start = time.time()\n-\n+    timeout = 10  # 10 seconds\n     while True:\n-        serial_line = ser.readline()\n-        print(serial_line.replace('\\n',''))\n+        serial_cmd = '{0}\\n'.format(cmd)\n+        ser.write(serial_cmd.encode(\"utf-8\"))\n+        ser.flush()\n \n-        if \"nsh>\" in serial_line:\n-            break\n-        elif \"NuttShell (NSH)\" in serial_line:\n-            break\n+        serial_line = ser.readline().decode(\"utf-8\", errors='ignore')\n \n-        if time.time() > timeout_start + timeout:\n-            print(\"Error, timeout\")\n+        if cmd in serial_line:\n             break\n+        else:\n+            print(serial_line.replace('\\n', ''))\n \n-        ser.write('\\n')\n-        time.sleep(0.01)\n+        if time.time() > timeout_start + timeout:\n+            print(\"Error, unable to write cmd\")\n+            return False\n \n+        time.sleep(1)\n \n-    # run test cmd\n-    cmd = 'tests ' + test_name\n-    ser.write(cmd + '\\n')\n \n+    # print results, wait for final result (PASSED or FAILED)\n     timeout = 180  # 3 minutes\n     timeout_start = time.time()\n     timeout_newline = timeout_start\n \n     while True:\n-        serial_line = ser.readline()\n-        print(serial_line.replace('\\n',''))\n+        serial_line = ser.readline().decode(\"utf-8\", errors='ignore')\n+        if (len(serial_line) > 0):\n+            print(serial_line.replace('\\n', ''))\n \n-        if cmd in serial_line:\n-            continue\n-        elif test_name + \" PASSED\" in serial_line:\n+        if test_name + \" PASSED\" in serial_line:\n             success = True\n             break\n         elif test_name + \" FAILED\" in serial_line:\n@@ -65,9 +66,9 @@ def do_test(port, baudrate, test_name):\n             success = False\n             break\n \n-        # newline every 30 seconds if still running\n-        if time.time() - timeout_newline > 30:\n-            ser.write('\\n')\n+        # newline every 10 seconds if still running\n+        if time.time() - timeout_newline > 10:\n+            ser.write(\"\\n\".encode(\"utf-8\"))\n             timeout_newline = time.time()\n \n     ser.close()\n@@ -170,14 +171,14 @@ def test_versioning(self):\n \n def main():\n     parser = ArgumentParser(description=__doc__)\n-    parser.add_argument('--device', \"-d\", nargs='?', default = None, help='')\n+    parser.add_argument('--device', \"-d\", nargs='?', default=None, help='', required=True)\n     parser.add_argument(\"--baudrate\", \"-b\", dest=\"baudrate\", type=int, help=\"Mavlink port baud rate (default=57600)\", default=57600)\n     args = parser.parse_args()\n \n     TestHardwareMethods.TEST_DEVICE = args.device\n     TestHardwareMethods.TEST_BAUDRATE = args.baudrate\n \n-    unittest.main(__name__, argv=['main'])\n+    unittest.main(__name__, failfast=True, verbosity=0, argv=['main'])\n \n if __name__ == \"__main__\":\n    main()"}]}