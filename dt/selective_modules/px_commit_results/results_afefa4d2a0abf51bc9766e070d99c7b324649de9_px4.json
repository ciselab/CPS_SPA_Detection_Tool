{"sha":"afefa4d2a0abf51bc9766e070d99c7b324649de9","node_id":"MDY6Q29tbWl0NTI5ODc5MDphZmVmYTRkMmEwYWJmNTFiYzk3NjZlMDcwZDk5YzdiMzI0NjQ5ZGU5","commit":{"author":{"name":"Beat KÃ¼ng","email":"beat-kueng@gmx.net","date":"2016-04-22T07:40:29Z"},"committer":{"name":"Lorenz Meier","email":"lm@inf.ethz.ch","date":"2016-04-25T07:48:24Z"},"message":"gps: use a max poll timeout of 50ms to check for orb msgs more often\n\nBefore this, I measured a max time spent in poll of 197ms. By checking at\nleast every 50ms we make sure to not lose any orb messages.","tree":{"sha":"c5da2e29f6d373462388641c9556ddd82b61c5e3","url":"https://api.github.com/repos/PX4/PX4-Autopilot/git/trees/c5da2e29f6d373462388641c9556ddd82b61c5e3"},"url":"https://api.github.com/repos/PX4/PX4-Autopilot/git/commits/afefa4d2a0abf51bc9766e070d99c7b324649de9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/afefa4d2a0abf51bc9766e070d99c7b324649de9","html_url":"https://github.com/PX4/PX4-Autopilot/commit/afefa4d2a0abf51bc9766e070d99c7b324649de9","comments_url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/afefa4d2a0abf51bc9766e070d99c7b324649de9/comments","author":{"login":"bkueng","id":281593,"node_id":"MDQ6VXNlcjI4MTU5Mw==","avatar_url":"https://avatars.githubusercontent.com/u/281593?v=4","gravatar_id":"","url":"https://api.github.com/users/bkueng","html_url":"https://github.com/bkueng","followers_url":"https://api.github.com/users/bkueng/followers","following_url":"https://api.github.com/users/bkueng/following{/other_user}","gists_url":"https://api.github.com/users/bkueng/gists{/gist_id}","starred_url":"https://api.github.com/users/bkueng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bkueng/subscriptions","organizations_url":"https://api.github.com/users/bkueng/orgs","repos_url":"https://api.github.com/users/bkueng/repos","events_url":"https://api.github.com/users/bkueng/events{/privacy}","received_events_url":"https://api.github.com/users/bkueng/received_events","type":"User","site_admin":false},"committer":{"login":"LorenzMeier","id":1208119,"node_id":"MDQ6VXNlcjEyMDgxMTk=","avatar_url":"https://avatars.githubusercontent.com/u/1208119?v=4","gravatar_id":"","url":"https://api.github.com/users/LorenzMeier","html_url":"https://github.com/LorenzMeier","followers_url":"https://api.github.com/users/LorenzMeier/followers","following_url":"https://api.github.com/users/LorenzMeier/following{/other_user}","gists_url":"https://api.github.com/users/LorenzMeier/gists{/gist_id}","starred_url":"https://api.github.com/users/LorenzMeier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LorenzMeier/subscriptions","organizations_url":"https://api.github.com/users/LorenzMeier/orgs","repos_url":"https://api.github.com/users/LorenzMeier/repos","events_url":"https://api.github.com/users/LorenzMeier/events{/privacy}","received_events_url":"https://api.github.com/users/LorenzMeier/received_events","type":"User","site_admin":false},"parents":[{"sha":"f62324c8a6a4a82f78f13ff83503132b68209212","url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/f62324c8a6a4a82f78f13ff83503132b68209212","html_url":"https://github.com/PX4/PX4-Autopilot/commit/f62324c8a6a4a82f78f13ff83503132b68209212"}],"stats":{"total":24,"additions":14,"deletions":10},"files":[{"sha":"948b87aa3760737f4c75e2684b8b324ed692e705","filename":"src/drivers/gps/gps.cpp","status":"modified","additions":14,"deletions":10,"changes":24,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/afefa4d2a0abf51bc9766e070d99c7b324649de9/src%2Fdrivers%2Fgps%2Fgps.cpp","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/afefa4d2a0abf51bc9766e070d99c7b324649de9/src%2Fdrivers%2Fgps%2Fgps.cpp","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/src%2Fdrivers%2Fgps%2Fgps.cpp?ref=afefa4d2a0abf51bc9766e070d99c7b324649de9","patch":"@@ -68,6 +68,7 @@\n #include <px4_time.h>\n #include <arch/board/board.h>\n #include <drivers/drv_hrt.h>\n+#include <mathlib/mathlib.h>\n #include <systemlib/systemlib.h>\n #include <systemlib/scheduling_priorities.h>\n #include <systemlib/err.h>\n@@ -323,21 +324,25 @@ int GPS::callback(GPSCallbackType type, void *data1, int data2, void *user)\n \n int GPS::pollOrRead(uint8_t *buf, size_t buf_length, int timeout)\n {\n-\t/* check for new messages. Note that we assume poll_or_read is called with a higher frequency\n-\t * than we get new injection messages.\n-\t */\n \thandleInjectDataTopic();\n \n #ifndef __PX4_QURT\n \n \t/* For non QURT, use the usual polling. */\n \n+\t//Poll only for the serial data. In the same thread we also need to handle orb messages,\n+\t//so ideally we would poll on both, the serial fd and orb subscription. Unfortunately the\n+\t//two pollings use different underlying mechanisms (at least under posix), which makes this\n+\t//impossible. Instead we limit the maximum polling interval and regularly check for new orb\n+\t//messages.\n+\t//FIXME: add a unified poll() API\n+\tconst int max_timeout = 50;\n+\n \tpollfd fds[1];\n \tfds[0].fd = _serial_fd;\n \tfds[0].events = POLLIN;\n \n-\t/* Poll for new data,  */\n-\tint ret = poll(fds, sizeof(fds) / sizeof(fds[0]), timeout);\n+\tint ret = poll(fds, sizeof(fds) / sizeof(fds[0]), math::min(max_timeout, timeout));\n \n \tif (ret > 0) {\n \t\t/* if we have new data from GPS, go handle it */\n@@ -349,16 +354,15 @@ int GPS::pollOrRead(uint8_t *buf, size_t buf_length, int timeout)\n \t\t\t * If more bytes are available, we'll go back to poll() again.\n \t\t\t */\n \t\t\tusleep(GPS_WAIT_BEFORE_READ * 1000);\n-\t\t\treturn ::read(_serial_fd, buf, buf_length);\n+\t\t\tret = ::read(_serial_fd, buf, buf_length);\n \n \t\t} else {\n-\t\t\treturn -1;\n+\t\t\tret = -1;\n \t\t}\n-\n-\t} else {\n-\t\treturn ret;\n \t}\n \n+\treturn ret;\n+\n #else\n \t/* For QURT, just use read for now, since this doesn't block, we need to slow it down\n \t * just a bit. */"}]}