{"sha":"139cd091768c57272fe1f80d725d4a3a24d2e3d0","node_id":"MDY6Q29tbWl0NTI5ODc5MDoxMzljZDA5MTc2OGM1NzI3MmZlMWY4MGQ3MjVkNGEzYTI0ZDJlM2Qw","commit":{"author":{"name":"Lorenz Meier","email":"lm@inf.ethz.ch","date":"2012-08-05T13:56:24Z"},"committer":{"name":"Lorenz Meier","email":"lm@inf.ethz.ch","date":"2012-08-05T13:56:24Z"},"message":"Faster sensor bus resets on timeouts, massively reworked fixed wing app, tested","tree":{"sha":"cd74ab09f9f35c94afaf32d235fa8de800c8f100","url":"https://api.github.com/repos/PX4/PX4-Autopilot/git/trees/cd74ab09f9f35c94afaf32d235fa8de800c8f100"},"url":"https://api.github.com/repos/PX4/PX4-Autopilot/git/commits/139cd091768c57272fe1f80d725d4a3a24d2e3d0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/139cd091768c57272fe1f80d725d4a3a24d2e3d0","html_url":"https://github.com/PX4/PX4-Autopilot/commit/139cd091768c57272fe1f80d725d4a3a24d2e3d0","comments_url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/139cd091768c57272fe1f80d725d4a3a24d2e3d0/comments","author":{"login":"LorenzMeier","id":1208119,"node_id":"MDQ6VXNlcjEyMDgxMTk=","avatar_url":"https://avatars.githubusercontent.com/u/1208119?v=4","gravatar_id":"","url":"https://api.github.com/users/LorenzMeier","html_url":"https://github.com/LorenzMeier","followers_url":"https://api.github.com/users/LorenzMeier/followers","following_url":"https://api.github.com/users/LorenzMeier/following{/other_user}","gists_url":"https://api.github.com/users/LorenzMeier/gists{/gist_id}","starred_url":"https://api.github.com/users/LorenzMeier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LorenzMeier/subscriptions","organizations_url":"https://api.github.com/users/LorenzMeier/orgs","repos_url":"https://api.github.com/users/LorenzMeier/repos","events_url":"https://api.github.com/users/LorenzMeier/events{/privacy}","received_events_url":"https://api.github.com/users/LorenzMeier/received_events","type":"User","site_admin":false},"committer":{"login":"LorenzMeier","id":1208119,"node_id":"MDQ6VXNlcjEyMDgxMTk=","avatar_url":"https://avatars.githubusercontent.com/u/1208119?v=4","gravatar_id":"","url":"https://api.github.com/users/LorenzMeier","html_url":"https://github.com/LorenzMeier","followers_url":"https://api.github.com/users/LorenzMeier/followers","following_url":"https://api.github.com/users/LorenzMeier/following{/other_user}","gists_url":"https://api.github.com/users/LorenzMeier/gists{/gist_id}","starred_url":"https://api.github.com/users/LorenzMeier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LorenzMeier/subscriptions","organizations_url":"https://api.github.com/users/LorenzMeier/orgs","repos_url":"https://api.github.com/users/LorenzMeier/repos","events_url":"https://api.github.com/users/LorenzMeier/events{/privacy}","received_events_url":"https://api.github.com/users/LorenzMeier/received_events","type":"User","site_admin":false},"parents":[{"sha":"b5f7adfc1034f8a32d1528b462333d44f3a0a6b8","url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/b5f7adfc1034f8a32d1528b462333d44f3a0a6b8","html_url":"https://github.com/PX4/PX4-Autopilot/commit/b5f7adfc1034f8a32d1528b462333d44f3a0a6b8"}],"stats":{"total":585,"additions":279,"deletions":306},"files":[{"sha":"7dfd98a1667df9f44695571b12bcff3a148da5b2","filename":"ROMFS/scripts/rc.standalone","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/139cd091768c57272fe1f80d725d4a3a24d2e3d0/ROMFS%2Fscripts%2Frc.standalone","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/139cd091768c57272fe1f80d725d4a3a24d2e3d0/ROMFS%2Fscripts%2Frc.standalone","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/ROMFS%2Fscripts%2Frc.standalone?ref=139cd091768c57272fe1f80d725d4a3a24d2e3d0","patch":"@@ -8,7 +8,7 @@ echo \"[init] doing standalone PX4FMU startup...\"\n #\n # Start the ORB\n #\n-#uorb start\n+uorb start\n \n #\n # Start the sensors."},{"sha":"1f75ceb4bc1fbbf1affc4c2edb0234a1fc3bdca9","filename":"apps/drivers/ms5611/ms5611.cpp","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/139cd091768c57272fe1f80d725d4a3a24d2e3d0/apps%2Fdrivers%2Fms5611%2Fms5611.cpp","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/139cd091768c57272fe1f80d725d4a3a24d2e3d0/apps%2Fdrivers%2Fms5611%2Fms5611.cpp","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/apps%2Fdrivers%2Fms5611%2Fms5611.cpp?ref=139cd091768c57272fe1f80d725d4a3a24d2e3d0","patch":"@@ -32,7 +32,8 @@\n  ****************************************************************************/\n \n /**\n- * @file Driver for the MS5611 barometric pressure sensor connected via I2C\n+ * @file ms5611.cpp\n+ * Driver for the MS5611 barometric pressure sensor connected via I2C.\n  */\n \n #include <nuttx/config.h>"},{"sha":"02d4463dd05b1645947b80fe1586cd1e7f674bf4","filename":"apps/fixedwing_control/Makefile","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/139cd091768c57272fe1f80d725d4a3a24d2e3d0/apps%2Ffixedwing_control%2FMakefile","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/139cd091768c57272fe1f80d725d4a3a24d2e3d0/apps%2Ffixedwing_control%2FMakefile","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/apps%2Ffixedwing_control%2FMakefile?ref=139cd091768c57272fe1f80d725d4a3a24d2e3d0","patch":"@@ -37,7 +37,7 @@\n \n APPNAME\t\t= fixedwing_control\n PRIORITY\t= SCHED_PRIORITY_MAX - 1\n-STACKSIZE\t= 12288\n+STACKSIZE\t= 4096\n \n CSRCS\t\t= fixedwing_control.c \n "},{"sha":"9faa257cac478a0ae6673d412a43d74821001035","filename":"apps/fixedwing_control/fixedwing_control.c","status":"modified","additions":106,"deletions":97,"changes":203,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/139cd091768c57272fe1f80d725d4a3a24d2e3d0/apps%2Ffixedwing_control%2Ffixedwing_control.c","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/139cd091768c57272fe1f80d725d4a3a24d2e3d0/apps%2Ffixedwing_control%2Ffixedwing_control.c","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/apps%2Ffixedwing_control%2Ffixedwing_control.c?ref=139cd091768c57272fe1f80d725d4a3a24d2e3d0","patch":"@@ -1,6 +1,6 @@\n /****************************************************************************\n  *\n- *   Copyright (C) 2008-2012 PX4 Development Team. All rights reserved.\n+ *   Copyright (C) 2012 PX4 Development Team. All rights reserved.\n  *   Author: @author Ivan Ovinnikov <oivan@ethz.ch>\n  *\n  * Redistribution and use in source and binary forms, with or without\n@@ -53,15 +53,24 @@\n #include <drivers/drv_pwm_output.h>\n #include <nuttx/spi.h>\n #include \"../mix_and_link/mix_and_link.h\"\n-#include \"fixedwing_control.h\"\n+#include <uORB/uORB.h>\n+#include <uORB/topics/rc_channels.h>\n+#include <uORB/topics/vehicle_global_position.h>\n+#include <uORB/topics/vehicle_global_position_setpoint.h>\n+#include <uORB/topics/vehicle_attitude.h>\n+#include <uORB/topics/vehicle_status.h>\n+#include <uORB/topics/fixedwing_control.h>\n+\n+#ifndef F_M_PI\n+#define F_M_PI ((float)M_PI)\n+#endif\n \n __EXPORT int fixedwing_control_main(int argc, char *argv[]);\n \n #define PID_DT 0.01f\n #define PID_SCALER 0.1f\n #define PID_DERIVMODE_CALC 0\n #define HIL_MODE 32\n-#define RAD2DEG ((1.0/180.0)*M_PI)\n #define AUTO -1000\n #define MANUAL 3000\n #define SERVO_MIN 1000\n@@ -75,7 +84,6 @@ pthread_t servo_thread;\n  * Servo channels function enumerator used for\n  * the servo writing part\n  */\n-\n enum SERVO_CHANNELS_FUNCTION {\n \n \tAIL_1    = 0,\n@@ -127,9 +135,9 @@ typedef struct {\n \n \t/* Next waypoint*/\n \n-\tfloat wp_x;\n-\tfloat wp_y;\n-\tfloat wp_z;\n+\tdouble wp_x;\n+\tdouble wp_y;\n+\tdouble wp_z;\n \n \t/* Setpoints */\n \n@@ -189,14 +197,6 @@ static float calc_throttle_setpoint(void);\n static float calc_wp_distance(void);\n static void set_plane_mode(void);\n \n-/*\n- * The control, navigation and servo loop threads\n- */\n-\n-static void *control_loop(void *arg);\n-static void *nav_loop(void *arg);\n-static void *servo_loop(void *arg);\n-\n /****************************************************************************\n  * Public Data\n  ****************************************************************************/\n@@ -210,8 +210,9 @@ float scaler = 1; //M_PI;\n  ****************************************************************************/\n \n /**\n- *\n- * Calculates the PID control output given an error. Incorporates PD scaling and low-pass filter for the derivative component.\n+ * Calculates the PID control output given an error.\n+ * \n+ * Incorporates PD scaling and low-pass filter for the derivative component.\n  *\n  * @param error the input error\n  * @param error_deriv the derivative of the input error\n@@ -241,7 +242,7 @@ static float pid(float error, float error_deriv, uint16_t dt, float scale, float\n \n \toutput += error * Kp;\n \n-\tif ((fabs(Kd) > 0) && (dt > 0)) {\n+\tif ((fabsf(Kd) > 0) && (dt > 0)) {\n \n \t\tif (PID_DERIVMODE_CALC) {\n \t\t\tderivative = (error - lerror) / delta_time;\n@@ -250,7 +251,7 @@ static float pid(float error, float error_deriv, uint16_t dt, float scale, float\n \t\t\t * discrete low pass filter, cuts out the\n \t\t\t * high frequency noise that can drive the controller crazy\n \t\t\t */\n-\t\t\tfloat RC = 1 / (2 * M_PI * fCut);\n+\t\t\tfloat RC = 1.0 / (2.0f * M_PI * fCut);\n \t\t\tderivative = lderiv +\n \t\t\t\t     (delta_time / (RC + delta_time)) * (derivative - lderiv);\n \n@@ -272,7 +273,7 @@ static float pid(float error, float error_deriv, uint16_t dt, float scale, float\n \toutput *= scale;\n \n \t/* Compute integral component if time has elapsed */\n-\tif ((fabs(Ki) > 0) && (dt > 0)) {\n+\tif ((fabsf(Ki) > 0) && (dt > 0)) {\n \t\tintegrator \t\t+= (error * Ki) * scaler * delta_time;\n \n \t\tif (integrator < -imax) {\n@@ -331,8 +332,8 @@ static void get_parameters()\n static void calc_body_angular_rates(float roll, float pitch, float yaw, float rollspeed, float pitchspeed, float yawspeed)\n {\n \tplane_data.p = rollspeed - sinf(pitch) * yawspeed;\n-\tplane_data.q = cosf(roll) * pitchspeed + sinf(roll) * cos(pitch) * yawspeed;\n-\tplane_data.r = -sinf(roll) * pitchspeed + cosf(roll) * cos(pitch) * yawspeed;\n+\tplane_data.q = cosf(roll) * pitchspeed + sinf(roll) * cosf(pitch) * yawspeed;\n+\tplane_data.r = -sinf(roll) * pitchspeed + cosf(roll) * cosf(pitch) * yawspeed;\n }\n \n /**\n@@ -390,13 +391,13 @@ static void calc_rotation_matrix(float roll, float pitch, float yaw, float x, fl\n  * @return bearing Bearing error\n  *\n  */\n-\n static float calc_bearing()\n {\n-\tfloat bearing = 90 + atan2(-(plane_data.wp_y - plane_data.lat), (plane_data.wp_x - plane_data.lon)) * RAD2DEG;\n+\tfloat bearing = F_M_PI/2.0f + (float)atan2(-(plane_data.wp_y - plane_data.lat), (plane_data.wp_x - plane_data.lon));\n \n-\tif (bearing < 0)\n-\t\tbearing += 360;\n+\tif (bearing < 0.0f) {\n+\t\tbearing += 2*F_M_PI;\n+\t}\n \n \treturn bearing;\n }\n@@ -430,7 +431,6 @@ static float calc_roll_ail()\n  *\n  * @return Pitch elevators control output (-1,1)\n  */\n-\n static float calc_pitch_elev()\n {\n \tfloat ret = pid((plane_data.pitch_setpoint - plane_data.pitch) / scaler, plane_data.pitchspeed, PID_DT, PID_SCALER,\n@@ -453,10 +453,9 @@ static float calc_pitch_elev()\n  * @return Yaw rudder control output (-1,1)\n  *\n  */\n-\n static float calc_yaw_rudder(float hdg)\n {\n-\tfloat ret = pid((plane_data.yaw / RAD2DEG - abs(hdg)) / scaler, plane_data.yawspeed, PID_DT, PID_SCALER,\n+\tfloat ret = pid((plane_data.yaw - abs(hdg)) / scaler, plane_data.yawspeed, PID_DT, PID_SCALER,\n \t\t\tplane_data.Kp_pos, plane_data.Ki_pos, plane_data.Kd_pos, plane_data.intmax_pos);\n \n \tif (ret < -1)\n@@ -481,11 +480,11 @@ static float calc_throttle()\n \tfloat ret = pid(plane_data.throttle_setpoint - calc_gnd_speed(), 0, PID_DT, PID_SCALER,\n \t\t\tplane_data.Kp_pos, plane_data.Ki_pos, plane_data.Kd_pos, plane_data.intmax_pos);\n \n-\tif (ret < 0.2)\n-\t\treturn 0.2;\n+\tif (ret < 0.2f)\n+\t\treturn 0.2f;\n \n-\tif (ret > 1)\n-\t\treturn 1;\n+\tif (ret > 1.0f)\n+\t\treturn 1.0f;\n \n \treturn ret;\n }\n@@ -542,11 +541,11 @@ static float calc_roll_setpoint()\n \t} else {\n \t\tsetpoint = calc_bearing() - plane_data.yaw;\n \n-\t\tif (setpoint < -35)\n-\t\t\treturn -35;\n+\t\tif (setpoint < (-35.0f/180.0f)*F_M_PI)\n+\t\t\treturn (-35.0f/180.0f)*F_M_PI;\n \n-\t\tif (setpoint > 35)\n-\t\t\treturn 35;\n+\t\tif (setpoint > (35/180.0f)*F_M_PI)\n+\t\t\treturn (-35.0f/180.0f)*F_M_PI;\n \t}\n \n \treturn setpoint;\n@@ -564,19 +563,19 @@ static float calc_roll_setpoint()\n \n static float calc_pitch_setpoint()\n {\n-\tfloat setpoint = 0;\n+\tfloat setpoint = 0.0f;\n \n \tif (plane_data.mode == TAKEOFF) {\n-\t\tsetpoint = 35;\n+\t\tsetpoint = ((35/180.0f)*F_M_PI);\n \n \t} else {\n-\t\tsetpoint = atanf((plane_data.wp_z - plane_data.alt) / calc_wp_distance()) * RAD2DEG;\n+\t\tsetpoint = atanf((plane_data.wp_z - plane_data.alt) / calc_wp_distance());\n \n-\t\tif (setpoint < -35)\n-\t\t\treturn -35;\n+\t\tif (setpoint < (-35.0f/180.0f)*F_M_PI)\n+\t\t\treturn (-35.0f/180.0f)*F_M_PI;\n \n-\t\tif (setpoint > 35)\n-\t\t\treturn 35;\n+\t\tif (setpoint > (35/180.0f)*F_M_PI)\n+\t\t\treturn (-35.0f/180.0f)*F_M_PI;\n \t}\n \n \treturn setpoint;\n@@ -597,7 +596,7 @@ static float calc_throttle_setpoint()\n \n \t// if TAKEOFF full throttle\n \tif (plane_data.mode == TAKEOFF) {\n-\t\tsetpoint = 60;\n+\t\tsetpoint = 0.6f;\n \t}\n \n \t// if CRUISE - parameter value\n@@ -607,7 +606,7 @@ static float calc_throttle_setpoint()\n \n \t// if LAND no throttle\n \tif (plane_data.mode == LAND) {\n-\t\tsetpoint = 0;\n+\t\tsetpoint = 0.0f;\n \t}\n \n \treturn setpoint;\n@@ -623,7 +622,7 @@ static float calc_throttle_setpoint()\n \n static void set_plane_mode()\n {\n-\tif (plane_data.alt < 10) {\n+\tif (plane_data.alt < 10.0f) {\n \t\tplane_data.mode = TAKEOFF;\n \n \t} else {\n@@ -647,27 +646,31 @@ static void set_plane_mode()\n \n int fixedwing_control_main(int argc, char *argv[])\n {\n-\t/* print text */\n-\tprintf(\"Fixedwing control started\\n\");\n-\tusleep(100000);\n-\n \t/* default values for arguments */\n \tchar *fixedwing_uart_name = \"/dev/ttyS1\";\n-\tchar *commandline_usage = \"\\tusage: fixedwing_control -d fixedwing-devicename\\n\";\n+\tchar *commandline_usage = \"\\tusage: %s -d fixedwing-devicename\\n\";\n \n \t/* read arguments */\n-\tint i;\n+\tbool verbose = false;\n \n-\tif (strcmp(argv[i], \"-d\") == 0 || strcmp(argv[i], \"--device\") == 0) {\n-\t\tif (argc > i + 1) {\n-\t\t\tfixedwing_uart_name = argv[i + 1];\n+\tfor (int i = 1; i < argc; i++) {\n+\t\tif (strcmp(argv[i], \"-d\") == 0 || strcmp(argv[i], \"--device\") == 0) {\n+\t\t\tif (argc > i + 1) {\n+\t\t\t\tfixedwing_uart_name = argv[i + 1];\n \n-\t\t} else {\n-\t\t\tprintf(commandline_usage);\n-\t\t\treturn 0;\n+\t\t\t} else {\n+\t\t\t\tprintf(commandline_usage, argv[0]);\n+\t\t\t\treturn 0;\n+\t\t\t}\n+\t\t}\n+\t\tif (strcmp(argv[i], \"-v\") == 0 || strcmp(argv[i], \"--verbose\") == 0) {\n+\t\t\tverbose = true;\n \t\t}\n \t}\n \n+\t/* welcome user */\n+\tprintf(\"[fixedwing control] started\\n\");\n+\n \t/* Set up to publish fixed wing control messages */\n \tstruct fixedwing_control_s control;\n \tint fixedwing_control_pub = orb_advertise(ORB_ID(fixedwing_control), &control);\n@@ -679,6 +682,12 @@ int fixedwing_control_main(int argc, char *argv[])\n \tint attitude_sub = orb_subscribe(ORB_ID(vehicle_attitude));\n \tstruct rc_channels_s rc;\n \tint rc_sub = orb_subscribe(ORB_ID(rc_channels));\n+\tstruct vehicle_global_position_setpoint_s global_setpoint;\n+\tint global_setpoint_sub = orb_subscribe(ORB_ID(vehicle_global_position_setpoint));\n+\n+\t/* Mainloop setup */\n+\tunsigned int loopcounter = 0;\n+\tunsigned int failcounter = 0;\n \n \t/* Control constants */\n \tcontrol_outputs.mode = HIL_MODE;\n@@ -692,7 +701,7 @@ int fixedwing_control_main(int argc, char *argv[])\n \tfd = open(\"/dev/pwm_servo\", O_RDWR);\n \n \tif (fd < 0) {\n-\t\tprintf(\"failed opening /dev/pwm_servo\\n\");\n+\t\tprintf(\"[fixedwing control] Failed opening /dev/pwm_servo\\n\");\n \t}\n \n \tioctl(fd, PWM_SERVO_ARM, 0);\n@@ -728,8 +737,7 @@ int fixedwing_control_main(int argc, char *argv[])\n \t * Main control, navigation and servo routine\n \t */\n \n-\twhile(1)\n-\t{\n+\twhile(1) {\n \t\t/*\n \t\t * DATA Handling\n \t\t * Fetch current flight data\n@@ -738,6 +746,7 @@ int fixedwing_control_main(int argc, char *argv[])\n \t\t/* get position, attitude and rc inputs */\n \t\t// XXX add error checking\n \t\torb_copy(ORB_ID(vehicle_global_position), global_pos_sub, &global_pos);\n+\t\torb_copy(ORB_ID(vehicle_global_position_setpoint), global_setpoint_sub, &global_setpoint);\n \t\torb_copy(ORB_ID(vehicle_attitude), attitude_sub, &att);\n \t\torb_copy(ORB_ID(rc_channels), rc_sub, &rc);\n \n@@ -746,12 +755,12 @@ int fixedwing_control_main(int argc, char *argv[])\n \t\t */\n \n \t\t/* position values*/\n-\t\tplane_data.lat = global_pos.lat / 10000000;\n-\t\tplane_data.lon = global_pos.lon / 10000000;\n-\t\tplane_data.alt = global_pos.alt / 1000;\n-\t\tplane_data.vx = global_pos.vx / 100;\n-\t\tplane_data.vy = global_pos.vy / 100;\n-\t\tplane_data.vz = global_pos.vz / 100;\n+\t\tplane_data.lat = global_pos.lat / 10000000.0;\n+\t\tplane_data.lon = global_pos.lon / 10000000.0;\n+\t\tplane_data.alt = global_pos.alt / 1000.0f;\n+\t\tplane_data.vx = global_pos.vx / 100.0f;\n+\t\tplane_data.vy = global_pos.vy / 100.0f;\n+\t\tplane_data.vz = global_pos.vz / 100.0f;\n \n \t\t/* attitude values*/\n \t\tplane_data.roll = att.roll;\n@@ -766,37 +775,35 @@ int fixedwing_control_main(int argc, char *argv[])\n \n \t\t/* Attitude control part */\n \n-//#define MUTE\n-#ifndef MUTE\n-\t\t/******************************** DEBUG OUTPUT ************************************************************/\n-\n-\t\tprintf(\"Parameter: %i,%i,%i,%i,%i,%i,%i,%i,%i,%i,%i,%i \\n\", (int)plane_data.Kp_att, (int)plane_data.Ki_att,\n-\t\t\t\t(int)plane_data.Kd_att, (int)plane_data.intmax_att, (int)plane_data.Kp_pos, (int)plane_data.Ki_pos,\n-\t\t\t\t(int)plane_data.Kd_pos, (int)plane_data.intmax_pos, (int)plane_data.airspeed,\n-\t\t\t\t(int)plane_data.wp_x, (int)plane_data.wp_y, (int)plane_data.wp_z);\n+\t\tif (verbose && loopcounter % 20 == 0) {\n+\t\t\t/******************************** DEBUG OUTPUT ************************************************************/\n \n-//\t\tprintf(\"PITCH SETPOINT: %i\\n\", (int)plane_data.pitch_setpoint);\n-//\t\tprintf(\"ROLL SETPOINT: %i\\n\", (int)plane_data.roll_setpoint);\n-//\t\tprintf(\"THROTTLE SETPOINT: %i\\n\", (int)calc_throttle_setpoint());\n+\t\t\tprintf(\"Parameter: %i,%i,%i,%i,%i,%i,%i,%i,%i,%i,%i,%i \\n\", (int)plane_data.Kp_att, (int)plane_data.Ki_att,\n+\t\t\t\t\t(int)plane_data.Kd_att, (int)plane_data.intmax_att, (int)plane_data.Kp_pos, (int)plane_data.Ki_pos,\n+\t\t\t\t\t(int)plane_data.Kd_pos, (int)plane_data.intmax_pos, (int)plane_data.airspeed,\n+\t\t\t\t\t(int)plane_data.wp_x, (int)plane_data.wp_y, (int)plane_data.wp_z);\n \n-//\t\tprintf(\"\\n\\nVx: %i\\t Vy: %i\\t Current speed:%i\\n\\n\", (int)plane_data.vx, (int)plane_data.vy, (int)(calc_gnd_speed()));\n+\t//\t\tprintf(\"PITCH SETPOINT: %i\\n\", (int)plane_data.pitch_setpoint);\n+\t//\t\tprintf(\"ROLL SETPOINT: %i\\n\", (int)plane_data.roll_setpoint);\n+\t//\t\tprintf(\"THROTTLE SETPOINT: %i\\n\", (int)calc_throttle_setpoint());\n \n-//\t\tprintf(\"Current Altitude: %i\\n\\n\", (int)plane_data.alt);\n+\t//\t\tprintf(\"\\n\\nVx: %i\\t Vy: %i\\t Current speed:%i\\n\\n\", (int)plane_data.vx, (int)plane_data.vy, (int)(calc_gnd_speed()));\n \n-\t\tprintf(\"\\nAttitude values: \\n R:%i \\n P: %i \\n Y: %i \\n\\n RS: %i \\n PS: %i \\n YS: %i \\n \",\n-\t\t\t\t(int)(1000 * plane_data.roll), (int)(1000 * plane_data.pitch), (int)(1000 * plane_data.yaw),\n-\t\t\t\t(int)(100 * plane_data.rollspeed), (int)(100 * plane_data.pitchspeed), (int)(100 * plane_data.yawspeed));\n+\t//\t\tprintf(\"Current Altitude: %i\\n\\n\", (int)plane_data.alt);\n \n-//\t\tprintf(\"\\nBody Rates: \\n P: %i \\n Q: %i \\n R: %i \\n\",\n-//\t\t\t\t(int)(10000 * plane_data.p), (int)(10000 * plane_data.q), (int)(10000 * plane_data.r));\n+\t\t\tprintf(\"\\nAttitude values: \\n R:%i \\n P: %i \\n Y: %i \\n\\n RS: %i \\n PS: %i \\n YS: %i \\n \",\n+\t\t\t\t\t(int)(1000 * plane_data.roll), (int)(1000 * plane_data.pitch), (int)(1000 * plane_data.yaw),\n+\t\t\t\t\t(int)(100 * plane_data.rollspeed), (int)(100 * plane_data.pitchspeed), (int)(100 * plane_data.yawspeed));\n \n-\t\tprintf(\"\\nCalculated outputs: \\n R: %i\\n P: %i\\n Y: %i\\n T: %i \\n\",\n-\t\t\t\t(int)(10000 * control_outputs.roll_ailerons), (int)(10000 * control_outputs.pitch_elevator),\n-\t\t\t\t(int)(10000 * control_outputs.yaw_rudder), (int)(10000 * control_outputs.throttle));\n+\t//\t\tprintf(\"\\nBody Rates: \\n P: %i \\n Q: %i \\n R: %i \\n\",\n+\t//\t\t\t\t(int)(10000 * plane_data.p), (int)(10000 * plane_data.q), (int)(10000 * plane_data.r));\n \n-\t\t/************************************************************************************************************/\n+\t\t\tprintf(\"\\nCalculated outputs: \\n R: %i\\n P: %i\\n Y: %i\\n T: %i \\n\",\n+\t\t\t\t\t(int)(10000 * control_outputs.roll_ailerons), (int)(10000 * control_outputs.pitch_elevator),\n+\t\t\t\t\t(int)(10000 * control_outputs.yaw_rudder), (int)(10000 * control_outputs.throttle));\n \n-#endif\n+\t\t\t/************************************************************************************************************/\n+\t\t}\n \n \t\t/*\n \t\t * Computation section\n@@ -809,11 +816,11 @@ int fixedwing_control_main(int argc, char *argv[])\n \t\tset_plane_mode();\n \n \t\t/* Calculate the P,Q,R body rates of the aircraft */\n-\t\tcalc_body_angular_rates(plane_data.roll / RAD2DEG, plane_data.pitch / RAD2DEG, plane_data.yaw / RAD2DEG,\n+\t\tcalc_body_angular_rates(plane_data.roll, plane_data.pitch, plane_data.yaw,\n \t\t\t\tplane_data.rollspeed, plane_data.pitchspeed, plane_data.yawspeed);\n \n \t\t/* Calculate the body frame angles of the aircraft */\n-\t\t//calc_bodyframe_angles(plane_data.roll/RAD2DEG,plane_data.pitch/RAD2DEG,plane_data.yaw/RAD2DEG);\n+\t\t//calc_bodyframe_angles(plane_data.roll,plane_data.pitch,plane_data.yaw);\n \n \t\t/* Calculate the output values */\n \t\tcontrol_outputs.roll_ailerons = calc_roll_ail();\n@@ -869,9 +876,6 @@ int fixedwing_control_main(int argc, char *argv[])\n \n \t\t\t//control_outputs.yaw_rudder = calc_yaw_rudder(plane_data.hdg);\n \n-\t\t\t// 10 Hz loop\n-\t\t\tusleep(100000);\n-\n \t\t} else {\n \t\t\tcontrol.attitude_control_output[ROLL] = rc.chan[rc.function[ROLL]].scale;\n \t\t\tcontrol.attitude_control_output[PITCH] = rc.chan[rc.function[PITCH]].scale;\n@@ -927,9 +931,14 @@ int fixedwing_control_main(int argc, char *argv[])\n \t\tint result = write(fd, &data, sizeof(data));\n \n \t\tif (result != sizeof(data)) {\n-\t\t\tprintf(\"failed writing servo outputs\\n\");\n+\t\t\tif (failcounter < 10 || failcounter % 20 == 0) {\n+\t\t\t\tprintf(\"[fixedwing_control] failed writing servo outputs\\n\");\n+\t\t\t}\n+\t\t\tfailcounter++;\n \t\t}\n \n+\t\tloopcounter++;\n+\n \t\t/* 20Hz loop*/\n \t\tusleep(50000);\n \t}"},{"sha":"6023e39672ab7cb68db6e91b16258a026ffe7d12","filename":"apps/fixedwing_control/fixedwing_control.h","status":"removed","additions":0,"deletions":66,"changes":66,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/b5f7adfc1034f8a32d1528b462333d44f3a0a6b8/apps%2Ffixedwing_control%2Ffixedwing_control.h","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/b5f7adfc1034f8a32d1528b462333d44f3a0a6b8/apps%2Ffixedwing_control%2Ffixedwing_control.h","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/apps%2Ffixedwing_control%2Ffixedwing_control.h?ref=b5f7adfc1034f8a32d1528b462333d44f3a0a6b8","patch":"@@ -1,66 +0,0 @@\n-/****************************************************************************\n- *\n- *   Copyright (C) 2008-2012 PX4 Development Team. All rights reserved.\n- *   Author: Ivan Ovinnikov <oivan@ethz.ch>\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions\n- * are met:\n- *\n- * 1. Redistributions of source code must retain the above copyright\n- *    notice, this list of conditions and the following disclaimer.\n- * 2. Redistributions in binary form must reproduce the above copyright\n- *    notice, this list of conditions and the following disclaimer in\n- *    the documentation and/or other materials provided with the\n- *    distribution.\n- * 3. Neither the name PX4 nor the names of its contributors may be\n- *    used to endorse or promote products derived from this software\n- *    without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n- * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n- * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n- * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n- * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n- * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS\n- * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED\n- * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n- * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n- * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- *\n- ****************************************************************************/\n-\n-/*\n- * @file Definition of attitude controller\n- */\n-\n-#ifndef FIXEDWING_CONTROL_H_\n-#define FIXEDWING_CONTROL_H_\n-\n-/****************************************************************************\n- * Included Files\n- ****************************************************************************/\n-\n-#include <uORB/uORB.h>\n-#include <uORB/topics/rc_channels.h>\n-#include <uORB/topics/vehicle_global_position.h>\n-#include <uORB/topics/vehicle_attitude.h>\n-#include <uORB/topics/vehicle_status.h>\n-#include <uORB/topics/fixedwing_control.h>\n-\n-/****************************************************************************\n- * Public Data\n- ****************************************************************************/\n-\n-/****************************************************************************\n- * Internal definitions\n- ****************************************************************************/\n-\n-\n-/****************************************************************************\n- * Private Data\n- ****************************************************************************/\n-\n-#endif /* FIXEDWING_CONTROL_H_ */"},{"sha":"652e4143fba3c4b018d7bff587e467b57467117f","filename":"apps/fixedwing_control/pid.c","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/139cd091768c57272fe1f80d725d4a3a24d2e3d0/apps%2Ffixedwing_control%2Fpid.c","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/139cd091768c57272fe1f80d725d4a3a24d2e3d0/apps%2Ffixedwing_control%2Fpid.c","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/apps%2Ffixedwing_control%2Fpid.c?ref=139cd091768c57272fe1f80d725d4a3a24d2e3d0","patch":"@@ -1,8 +1,7 @@\n /****************************************************************************\n- * pid.c\n  *\n- *   Copyright (C) 2012 Ivan Ovinnikov. All rights reserved.\n- *   Authors: Ivan Ovinnikov <oivan@ethz.ch>\n+ *   Copyright (C) 2012 PX4 Development Team. All rights reserved.\n+ *   Author: @author Ivan Ovinnikov <oivan@ethz.ch>\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * modification, are permitted provided that the following conditions\n@@ -14,7 +13,7 @@\n  *    notice, this list of conditions and the following disclaimer in\n  *    the documentation and/or other materials provided with the\n  *    distribution.\n- * 3. Neither the name NuttX nor the names of its contributors may be\n+ * 3. Neither the name PX4 nor the names of its contributors may be\n  *    used to endorse or promote products derived from this software\n  *    without specific prior written permission.\n  *\n@@ -33,9 +32,10 @@\n  *\n  ****************************************************************************/\n \n-/****************************************************************************\n- * Included Files\n- ****************************************************************************/\n+/**\n+ * @file pid.c\n+ * Implementation of a fixed wing attitude and position controller.\n+ */\n \n #include \"pid.h\"\n #include \"fixedwing_control.h\""},{"sha":"e3c8e5fa15996e385053a34fdc9dc4b28787088f","filename":"apps/mavlink/mavlink.c","status":"modified","additions":14,"deletions":11,"changes":25,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/139cd091768c57272fe1f80d725d4a3a24d2e3d0/apps%2Fmavlink%2Fmavlink.c","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/139cd091768c57272fe1f80d725d4a3a24d2e3d0/apps%2Fmavlink%2Fmavlink.c","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/apps%2Fmavlink%2Fmavlink.c?ref=139cd091768c57272fe1f80d725d4a3a24d2e3d0","patch":"@@ -213,7 +213,7 @@ extern void mavlink_missionlib_current_waypoint_changed(uint16_t index, float pa\n \t\torb_publish(ORB_ID(vehicle_local_position_setpoint), local_position_setpoint_pub, &sp);\n \t}\n \n-\tprintf(\"[mavlink mp] new setpoint: frame: %d, lat: %d, lon: %d, alt: %d, yaw: %d\\n\", frame, param5_lat_x, param6_lon_y, param7_alt_z, param4);\n+\t//printf(\"[mavlink mp] new setpoint: frame: %d, lat: %d, lon: %d, alt: %d, yaw: %d\\n\", frame, param5_lat_x*1000, param6_lon_y*1000, param7_alt_z*1000, param4*1000);\n }\n \n \n@@ -375,7 +375,7 @@ static void *receiveloop(void *arg)\n static void *uorb_receiveloop(void *arg)\n {\n \t/* Set thread name */\n-\tprctl(PR_SET_NAME, \"mavlink uORB async\", getpid());\n+\tprctl(PR_SET_NAME, \"mavlink uORB\", getpid());\n \n \n \t/* --- IMPORTANT: DEFINE NUMBER OF ORB STRUCTS TO WAIT FOR HERE --- */\n@@ -586,23 +586,26 @@ static void *uorb_receiveloop(void *arg)\n \t\t\tif (fds[6].revents & POLLIN) {\n \t\t\t\t/* copy fixed wing control into local buffer */\n \t\t\t\torb_copy(ORB_ID(fixedwing_control), fw_sub, &fw_control);\n-\t\t\t\t// XXX Output fixed wing control\n+\t\t\t\t/* send control output via MAVLink */\n+\t\t\t\tmavlink_msg_roll_pitch_yaw_thrust_setpoint_send(MAVLINK_COMM_0, fw_control.timestamp / 1000, fw_control.attitude_control_output[0],\n+\t\t\t\t\tfw_control.attitude_control_output[1], fw_control.attitude_control_output[2],\n+\t\t\t\t\tfw_control.attitude_control_output[3]);\n \t\t\t}\n \n \t\t\t/* --- VEHICLE GLOBAL POSITION --- */\n \t\t\tif (fds[7].revents & POLLIN) {\n \t\t\t\t/* copy global position data into local buffer */\n \t\t\t\torb_copy(ORB_ID(vehicle_global_position), global_pos_sub, &global_pos);\n \t\t\t\tuint64_t timestamp = global_pos.timestamp;\n-\t\t\t\tint32_t lat = (int32_t)(global_pos.lat * 1e7);\n-\t\t\t\tint32_t lon = (int32_t)(global_pos.lon * 1e7);\n-\t\t\t\tint32_t alt = (int32_t)(global_pos.alt * 1e3);\n-\t\t\t\tint32_t relative_alt = (int32_t)(global_pos.relative_alt * 1e3);\n-\t\t\t\tint16_t vx = (int16_t)(global_pos.vx * 1e2);\n-\t\t\t\tint16_t vy = (int16_t)(global_pos.vy * 1e2);\n-\t\t\t\tint16_t vz = (int16_t)(global_pos.vz * 1e2);\n+\t\t\t\tint32_t lat = global_pos.lat;\n+\t\t\t\tint32_t lon = global_pos.lon;\n+\t\t\t\tint32_t alt = (int32_t)(global_pos.alt*1000);\n+\t\t\t\tint32_t relative_alt = (int32_t)(global_pos.relative_alt * 1000.0f);\n+\t\t\t\tint16_t vx = (int16_t)(global_pos.vx * 100.0f);\n+\t\t\t\tint16_t vy = (int16_t)(global_pos.vy * 100.0f);\n+\t\t\t\tint16_t vz = (int16_t)(global_pos.vz * 100.0f);\n \t\t\t\t/* heading in degrees * 10, from 0 to 36.000) */\n-\t\t\t\tuint16_t hdg = (global_pos.hdg / M_PI_F) * (180 * 10) + (180 * 10);\n+\t\t\t\tuint16_t hdg = (global_pos.hdg / M_PI_F) * (180.0f * 10.0f) + (180.0f * 10.0f);\n \n \t\t\t\tmavlink_msg_global_position_int_send(MAVLINK_COMM_0, timestamp / 1000, lat, lon, alt, relative_alt, vx, vy, vz, hdg);\n \t\t\t}"},{"sha":"cf971ae05f2dbb0c7ab3b637735a64cb5b2bc3ce","filename":"apps/px4/attitude_estimator_bm/Makefile","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/139cd091768c57272fe1f80d725d4a3a24d2e3d0/apps%2Fpx4%2Fattitude_estimator_bm%2FMakefile","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/139cd091768c57272fe1f80d725d4a3a24d2e3d0/apps%2Fpx4%2Fattitude_estimator_bm%2FMakefile","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/apps%2Fpx4%2Fattitude_estimator_bm%2FMakefile?ref=139cd091768c57272fe1f80d725d4a3a24d2e3d0","patch":"@@ -37,9 +37,6 @@\n \n APPNAME\t\t = attitude_estimator_bm\n PRIORITY\t= SCHED_PRIORITY_MAX - 10\n-STACKSIZE\t= 3000\n-\n-# XXX this is *horribly* broken\n-INCLUDES\t= $(TOPDIR)/../mavlink/include/mavlink\n+STACKSIZE\t= 4096\n \n include $(APPDIR)/mk/app.mk"},{"sha":"8551b5e1c714fa5ee020326fce5d85707e68de3f","filename":"apps/px4/attitude_estimator_bm/attitude_estimator_bm.c","status":"modified","additions":36,"deletions":3,"changes":39,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/139cd091768c57272fe1f80d725d4a3a24d2e3d0/apps%2Fpx4%2Fattitude_estimator_bm%2Fattitude_estimator_bm.c","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/139cd091768c57272fe1f80d725d4a3a24d2e3d0/apps%2Fpx4%2Fattitude_estimator_bm%2Fattitude_estimator_bm.c","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/apps%2Fpx4%2Fattitude_estimator_bm%2Fattitude_estimator_bm.c?ref=139cd091768c57272fe1f80d725d4a3a24d2e3d0","patch":"@@ -33,7 +33,10 @@\n  *\n  ****************************************************************************/\n \n-/* @file Black Magic Attitude Estimator */\n+/**\n+ * @file attitude_estimator_bm.c\n+ * Black Magic Attitude Estimator\n+ */\n \n \n \n@@ -49,6 +52,7 @@\n #include <uORB/uORB.h>\n #include <uORB/topics/sensor_combined.h>\n #include <uORB/topics/vehicle_attitude.h>\n+#include <uORB/topics/vehicle_status.h>\n #include <math.h>\n #include <errno.h>\n \n@@ -135,14 +139,22 @@ int attitude_estimator_bm_main(int argc, char *argv[])\n \t/* rate-limit raw data updates to 200Hz */\n \t//orb_set_interval(sub_raw, 5);\n \n+\tbool hil_enabled = false;\n+\tbool publishing = false;\n+\n \t/* advertise attitude */\n \tint pub_att = orb_advertise(ORB_ID(vehicle_attitude), &att);\n+\tpublishing = true;\n \n \tstruct pollfd fds[] = {\n \t\t{ .fd = sub_raw,   .events = POLLIN },\n \t};\n \n-\t// int paramcounter = 100;\n+\t/* subscribe to system status */\n+\tstruct vehicle_status_s vstatus = {0};\n+\tint vstatus_sub = orb_subscribe(ORB_ID(vehicle_status));\n+\n+\tunsigned int loopcounter = 0;\n \n \t/* Main loop*/\n \twhile (true) {\n@@ -217,8 +229,29 @@ int attitude_estimator_bm_main(int argc, char *argv[])\n \t\tatt.R[0][2] = x_n_b.z;\n \t\t// XXX add remaining entries\n \n+\t\tif (loopcounter % 250 == 0) {\n+\t\t\t/* Check HIL state */\n+\t\t\torb_copy(ORB_ID(vehicle_status), vstatus_sub, &vstatus);\n+\t\t\t/* switching from non-HIL to HIL mode */\n+\t\t\tif ((vstatus.mode & VEHICLE_MODE_FLAG_HIL_ENABLED) && !hil_enabled) {\n+\t\t\t\thil_enabled = true;\n+\t\t\t\tpublishing = false;\n+\t\t\t\tclose(pub_att);\n+\n+\t\t\t\t/* switching from HIL to non-HIL mode */\n+\n+\t\t\t} else if (!publishing && !hil_enabled) {\n+\t\t\t\t/* advertise the topic and make the initial publication */\n+\t\t\t\tpub_att = orb_advertise(ORB_ID(vehicle_attitude), &att);\n+\t\t\t\thil_enabled = false;\n+\t\t\t\tpublishing = true;\n+\t\t\t}\n+\t\t}\n+\n \t\t// Broadcast\n-\t\torb_publish(ORB_ID(vehicle_attitude), pub_att, &att);\n+\t\tif (publishing) orb_publish(ORB_ID(vehicle_attitude), pub_att, &att);\n+\n+\t\tloopcounter++;\n \t}\n \n \t/* Should never reach here */"},{"sha":"3a3ff640770eb0c51a5219ca9daf4f7cd85d9a7a","filename":"apps/px4/px4io/driver/px4io.cpp","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/139cd091768c57272fe1f80d725d4a3a24d2e3d0/apps%2Fpx4%2Fpx4io%2Fdriver%2Fpx4io.cpp","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/139cd091768c57272fe1f80d725d4a3a24d2e3d0/apps%2Fpx4%2Fpx4io%2Fdriver%2Fpx4io.cpp","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/apps%2Fpx4%2Fpx4io%2Fdriver%2Fpx4io.cpp?ref=139cd091768c57272fe1f80d725d4a3a24d2e3d0","patch":"@@ -32,7 +32,8 @@\n  ****************************************************************************/\n \n /**\n- * @file Driver for the PX4IO board.\n+ * @file px4io.cpp\n+ * Driver for the PX4IO board.\n  *\n  * PX4IO is connected via serial (or possibly some other interface at a later\n  * point).\n@@ -555,6 +556,6 @@ px4io_main(int argc, char *argv[])\n \n \n \n-\tprintf(\"need a verb, only support 'start'\\n\");\n+\tprintf(\"need a verb, only support 'start' and 'update'\\n\");\n \treturn ERROR;\n }"},{"sha":"30a62fa65689a21042d304f3e7d1a6b329e3771e","filename":"apps/px4io/px4io.c","status":"modified","additions":2,"deletions":22,"changes":24,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/139cd091768c57272fe1f80d725d4a3a24d2e3d0/apps%2Fpx4io%2Fpx4io.c","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/139cd091768c57272fe1f80d725d4a3a24d2e3d0/apps%2Fpx4io%2Fpx4io.c","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/apps%2Fpx4io%2Fpx4io.c?ref=139cd091768c57272fe1f80d725d4a3a24d2e3d0","patch":"@@ -32,14 +32,10 @@\n  ****************************************************************************/\n \n /**\n- * @file Top-level logic for the PX4IO module.\n+ * @file px4io.c\n+ * Top-level logic for the PX4IO module.\n  */\n \n-/****************************************************************************\n- * Included Files\n- ****************************************************************************/\n-\n-\n #include <nuttx/config.h>\n #include <stdio.h>\n #include <stdbool.h>\n@@ -58,24 +54,8 @@\n \n #include \"px4io.h\"\n \n-/****************************************************************************\n- * Definitions\n- ****************************************************************************/\n-\n-/****************************************************************************\n- * Private Data\n- ****************************************************************************/\n-\n-/****************************************************************************\n- * Public Functions\n- ****************************************************************************/\n-\n __EXPORT int user_start(int argc, char *argv[]);\n \n-/****************************************************************************\n- * user_start\n- ****************************************************************************/\n-\n struct sys_state_s \tsystem_state;\n int\t\t\tgpio_fd;\n "},{"sha":"3343b33f495fb980abd8db738419259bdc086720","filename":"apps/sensors/sensors.c","status":"modified","additions":25,"deletions":21,"changes":46,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/139cd091768c57272fe1f80d725d4a3a24d2e3d0/apps%2Fsensors%2Fsensors.c","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/139cd091768c57272fe1f80d725d4a3a24d2e3d0/apps%2Fsensors%2Fsensors.c","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/apps%2Fsensors%2Fsensors.c?ref=139cd091768c57272fe1f80d725d4a3a24d2e3d0","patch":"@@ -90,17 +90,14 @@\n #define BAT_VOL_LOWPASS_2 0.01f\n #define VOLTAGE_BATTERY_IGNORE_THRESHOLD_VOLTS 3.5f\n \n-/*PPM Settings*/\n+/* PPM Settings */\n #define PPM_MIN 1000\n #define PPM_MAX 2000\n-/*Our internal resolution is 10000*/\n+/* Internal resolution is 10000 */\n #define PPM_SCALE 10000/((PPM_MAX-PPM_MIN)/2)\n \n #define PPM_MID (PPM_MIN+PPM_MAX)/2\n \n-/****************************************************************************\n- * Definitions\n- ****************************************************************************/\n static pthread_cond_t sensors_read_ready;\n static pthread_mutex_t sensors_read_ready_mutex;\n \n@@ -281,7 +278,8 @@ int sensors_main(int argc, char *argv[])\n \tbool baro_healthy = false;\n \tbool adc_healthy = false;\n \n-\tbool hil_enabled = false;\n+\tbool hil_enabled = false;\t\t/**< HIL is disabled by default\t*/\n+\tbool publishing = false;\t\t/**< the app is not publishing by default, only if HIL is disabled on first run */\n \n \tint magcounter = 0;\n \tint barocounter = 0;\n@@ -318,24 +316,27 @@ int sensors_main(int argc, char *argv[])\n \tint16_t acc_offset[3] = {0, 0, 0};\n \tint16_t\tgyro_offset[3] = {0, 0, 0};\n \n+\t#pragma pack(push,1)\n \tstruct adc_msg4_s {\n-\t\tuint8_t      am_channel1;               /**< The 8-bit ADC Channel 1 */\n-\t\tint32_t      am_data1;                  /**< ADC convert result 1 (4 bytes) */\n-\t\tuint8_t      am_channel2;               /**< The 8-bit ADC Channel 2 */\n-\t\tint32_t      am_data2;                  /**< ADC convert result 2 (4 bytes) */\n-\t\tuint8_t      am_channel3;               /**< The 8-bit ADC Channel 3 */\n-\t\tint32_t      am_data3;                  /**< ADC convert result 3 (4 bytes) */\n-\t\tuint8_t      am_channel4;               /**< The 8-bit ADC Channel 4 */\n-\t\tint32_t      am_data4;                  /**< ADC convert result 4 (4 bytes) */\n-\t} __attribute__((__packed__));;\n+\t\tuint8_t      am_channel1;\t/**< The 8-bit ADC Channel 1 */\n+\t\tint32_t      am_data1;\t\t/**< ADC convert result 1 (4 bytes) */\n+\t\tuint8_t      am_channel2;\t/**< The 8-bit ADC Channel 2 */\n+\t\tint32_t      am_data2;\t\t/**< ADC convert result 2 (4 bytes) */\n+\t\tuint8_t      am_channel3;\t/**< The 8-bit ADC Channel 3 */\n+\t\tint32_t      am_data3;\t\t/**< ADC convert result 3 (4 bytes) */\n+\t\tuint8_t      am_channel4;\t/**< The 8-bit ADC Channel 4 */\n+\t\tint32_t      am_data4;\t\t/**< ADC convert result 4 (4 bytes) */\n+\t};\n+\t#pragma pack(pop)\n+\n \tstruct adc_msg4_s buf_adc;\n \tsize_t adc_readsize = 1 * sizeof(struct adc_msg4_s);\n \n \tfloat battery_voltage_conversion;\n \tbattery_voltage_conversion = global_data_parameter_storage->pm.param_values[PARAM_BATTERYVOLTAGE_CONVERSION];\n \n \tif (-1.0f == battery_voltage_conversion) {\n-\t\t/**< default is conversion factor for the PX4IO / PX4IOAR board, the factor for PX4FMU standalone is different */\n+\t\t/* default is conversion factor for the PX4IO / PX4IOAR board, the factor for PX4FMU standalone is different */\n \t\tbattery_voltage_conversion = 3.3f * 52.0f / 5.0f / 4095.0f;\n \t}\n \n@@ -383,13 +384,14 @@ int sensors_main(int argc, char *argv[])\n \n \t/* advertise the topic and make the initial publication */\n \tsensor_pub = orb_advertise(ORB_ID(sensor_combined), &raw);\n+\tpublishing = true;\n \n \t/* advertise the rc topic */\n \tstruct rc_channels_s rc = {0};\n \tint rc_pub = orb_advertise(ORB_ID(rc_channels), &rc);\n \n \t/* subscribe to system status */\n-\tstruct vehicle_status_s vstatus;\n+\tstruct vehicle_status_s vstatus = {0};\n \tint vstatus_sub = orb_subscribe(ORB_ID(vehicle_status));\n \n \n@@ -430,14 +432,16 @@ int sensors_main(int argc, char *argv[])\n \t\t\t\t/* switching from non-HIL to HIL mode */\n \t\t\t\tif ((vstatus.mode & VEHICLE_MODE_FLAG_HIL_ENABLED) && !hil_enabled) {\n \t\t\t\t\thil_enabled = true;\n+\t\t\t\t\tpublishing = false;\n \t\t\t\t\tclose(sensor_pub);\n \n \t\t\t\t\t/* switching from HIL to non-HIL mode */\n \n-\t\t\t\t} else if (!(vstatus.mode & VEHICLE_MODE_FLAG_HIL_ENABLED) && hil_enabled) {\n+\t\t\t\t} else if (!publishing && !hil_enabled) {\n \t\t\t\t\t/* advertise the topic and make the initial publication */\n \t\t\t\t\tsensor_pub = orb_advertise(ORB_ID(sensor_combined), &raw);\n \t\t\t\t\thil_enabled = false;\n+\t\t\t\t\tpublishing = true;\n \t\t\t\t}\n \n \n@@ -556,7 +560,7 @@ int sensors_main(int argc, char *argv[])\n \t\t\tif (acctime > 500) printf(\"ACC: %d us\\n\", acctime);\n \n \t\t\t/* MAGNETOMETER */\n-\t\t\tif (magcounter == 4) { //(magcounter == 4) // 100 Hz\n+\t\t\tif (magcounter == 4) { /* 120 Hz */\n \t\t\t\tuint64_t start_mag = hrt_absolute_time();\n \t\t\t\tret_magnetometer = read(fd_magnetometer, buf_magnetometer, sizeof(buf_magnetometer));\n \t\t\t\tint errcode_mag = (int) * get_errno_ptr();\n@@ -604,7 +608,7 @@ int sensors_main(int argc, char *argv[])\n \t\t\tmagcounter++;\n \n \t\t\t/* BAROMETER */\n-\t\t\tif (barocounter == 5 && (fd_barometer > 0)) { //(barocounter == 4) // 100 Hz\n+\t\t\tif (barocounter == 5 && (fd_barometer > 0)) { /* 100 Hz */\n \t\t\t\tuint64_t start_baro = hrt_absolute_time();\n \t\t\t\t*get_errno_ptr() = 0;\n \t\t\t\tret_barometer = read(fd_barometer, buf_barometer, sizeof(buf_barometer));\n@@ -798,7 +802,7 @@ int sensors_main(int argc, char *argv[])\n \t\t\tuint64_t total_time = hrt_absolute_time() - current_time;\n \n \t\t\t/* Inform other processes that new data is available to copy */\n-\t\t\tif ((gyro_updated || acc_updated || magn_updated || baro_updated) && !hil_enabled) {\n+\t\t\tif ((gyro_updated || acc_updated || magn_updated || baro_updated) && publishing) {\n \t\t\t\t/* Values changed, publish */\n \t\t\t\torb_publish(ORB_ID(sensor_combined), sensor_pub, &raw);\n \t\t\t}"},{"sha":"9965277c745af357a28ad144d74f0f8cfb9f64be","filename":"nuttx/configs/px4fmu/include/nsh_romfsimg.h","status":"modified","additions":69,"deletions":69,"changes":138,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/139cd091768c57272fe1f80d725d4a3a24d2e3d0/nuttx%2Fconfigs%2Fpx4fmu%2Finclude%2Fnsh_romfsimg.h","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/139cd091768c57272fe1f80d725d4a3a24d2e3d0/nuttx%2Fconfigs%2Fpx4fmu%2Finclude%2Fnsh_romfsimg.h","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/nuttx%2Fconfigs%2Fpx4fmu%2Finclude%2Fnsh_romfsimg.h?ref=139cd091768c57272fe1f80d725d4a3a24d2e3d0","patch":"@@ -234,7 +234,7 @@ unsigned char romfs_img[] = {\n   0x69, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x46, 0x41, 0x49, 0x4c,\n   0x45, 0x44, 0x2e, 0x22, 0x0a, 0x23, 0x09, 0x72, 0x65, 0x62, 0x6f, 0x6f,\n   0x74, 0x0a, 0x23, 0x66, 0x69, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x0e, 0xf2,\n-  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xcd, 0x52, 0xce, 0xe0, 0xfc,\n+  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xcc, 0x52, 0xce, 0xe0, 0xfd,\n   0x72, 0x63, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x6c, 0x6f, 0x6e,\n   0x65, 0x00, 0x00, 0x00, 0x23, 0x21, 0x6e, 0x73, 0x68, 0x0a, 0x23, 0x0a,\n   0x23, 0x20, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x20, 0x73, 0x74, 0x61,\n@@ -248,76 +248,76 @@ unsigned char romfs_img[] = {\n   0x34, 0x46, 0x4d, 0x55, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70,\n   0x2e, 0x2e, 0x2e, 0x22, 0x0a, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x53, 0x74,\n   0x61, 0x72, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x4f, 0x52, 0x42, 0x0a,\n-  0x23, 0x0a, 0x23, 0x75, 0x6f, 0x72, 0x62, 0x20, 0x73, 0x74, 0x61, 0x72,\n-  0x74, 0x0a, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x53, 0x74, 0x61, 0x72, 0x74,\n-  0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x73,\n-  0x2e, 0x0a, 0x23, 0x0a, 0x23, 0x73, 0x68, 0x20, 0x2f, 0x65, 0x74, 0x63,\n-  0x2f, 0x69, 0x6e, 0x69, 0x74, 0x2e, 0x64, 0x2f, 0x72, 0x63, 0x2e, 0x73,\n-  0x65, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x0a, 0x0a, 0x23, 0x0a, 0x23, 0x20,\n-  0x53, 0x74, 0x61, 0x72, 0x74, 0x20, 0x4d, 0x41, 0x56, 0x4c, 0x69, 0x6e,\n-  0x6b, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x6d, 0x61, 0x76, 0x6c, 0x69, 0x6e,\n-  0x6b, 0x20, 0x2d, 0x64, 0x20, 0x2f, 0x64, 0x65, 0x76, 0x2f, 0x74, 0x74,\n-  0x79, 0x53, 0x30, 0x20, 0x2d, 0x62, 0x20, 0x35, 0x37, 0x36, 0x30, 0x30,\n-  0x20, 0x26, 0x0a, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x53, 0x74, 0x61, 0x72,\n-  0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,\n-  0x64, 0x65, 0x72, 0x2e, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x58, 0x58, 0x58,\n-  0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64,\n-  0x20, 0x62, 0x65, 0x20, 0x27, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,\n-  0x65, 0x72, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x27, 0x2e, 0x0a, 0x23,\n-  0x0a, 0x23, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x65, 0x72, 0x20,\n+  0x23, 0x0a, 0x75, 0x6f, 0x72, 0x62, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74,\n+  0x0a, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x53, 0x74, 0x61, 0x72, 0x74, 0x20,\n+  0x74, 0x68, 0x65, 0x20, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x2e,\n+  0x0a, 0x23, 0x0a, 0x23, 0x73, 0x68, 0x20, 0x2f, 0x65, 0x74, 0x63, 0x2f,\n+  0x69, 0x6e, 0x69, 0x74, 0x2e, 0x64, 0x2f, 0x72, 0x63, 0x2e, 0x73, 0x65,\n+  0x6e, 0x73, 0x6f, 0x72, 0x73, 0x0a, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x53,\n+  0x74, 0x61, 0x72, 0x74, 0x20, 0x4d, 0x41, 0x56, 0x4c, 0x69, 0x6e, 0x6b,\n+  0x0a, 0x23, 0x0a, 0x23, 0x20, 0x6d, 0x61, 0x76, 0x6c, 0x69, 0x6e, 0x6b,\n+  0x20, 0x2d, 0x64, 0x20, 0x2f, 0x64, 0x65, 0x76, 0x2f, 0x74, 0x74, 0x79,\n+  0x53, 0x30, 0x20, 0x2d, 0x62, 0x20, 0x35, 0x37, 0x36, 0x30, 0x30, 0x20,\n   0x26, 0x0a, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x53, 0x74, 0x61, 0x72, 0x74,\n-  0x20, 0x74, 0x68, 0x65, 0x20, 0x61, 0x74, 0x74, 0x69, 0x74, 0x75, 0x64,\n-  0x65, 0x20, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x6f, 0x72, 0x0a,\n-  0x23, 0x0a, 0x23, 0x20, 0x58, 0x58, 0x58, 0x20, 0x74, 0x68, 0x69, 0x73,\n-  0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x62, 0x65, 0x20, 0x27,\n-  0x3c, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3e, 0x20, 0x73, 0x74,\n-  0x61, 0x72, 0x74, 0x27, 0x2e, 0x0a, 0x23, 0x0a, 0x23, 0x61, 0x74, 0x74,\n-  0x69, 0x74, 0x75, 0x64, 0x65, 0x5f, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61,\n-  0x74, 0x6f, 0x72, 0x5f, 0x62, 0x6d, 0x20, 0x26, 0x0a, 0x23, 0x70, 0x6f,\n-  0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x73, 0x74, 0x69, 0x6d,\n-  0x61, 0x74, 0x6f, 0x72, 0x20, 0x26, 0x0a, 0x0a, 0x23, 0x0a, 0x23, 0x20,\n-  0x53, 0x74, 0x61, 0x72, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69,\n-  0x78, 0x65, 0x64, 0x2d, 0x77, 0x69, 0x6e, 0x67, 0x20, 0x63, 0x6f, 0x6e,\n-  0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x0a, 0x23, 0x0a, 0x23,\n-  0x20, 0x58, 0x58, 0x58, 0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20,\n-  0x74, 0x68, 0x69, 0x73, 0x20, 0x62, 0x65, 0x20, 0x6c, 0x6f, 0x6f, 0x6b,\n-  0x69, 0x6e, 0x67, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x63, 0x6f, 0x6e, 0x66,\n-  0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 0x6f,\n-  0x20, 0x64, 0x65, 0x63, 0x69, 0x64, 0x65, 0x0a, 0x23, 0x20, 0x77, 0x68,\n-  0x65, 0x74, 0x68, 0x65, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x62, 0x6f,\n-  0x61, 0x72, 0x64, 0x20, 0x69, 0x73, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69,\n-  0x67, 0x75, 0x72, 0x65, 0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x66, 0x69,\n-  0x78, 0x65, 0x64, 0x2d, 0x77, 0x69, 0x6e, 0x67, 0x20, 0x75, 0x73, 0x65,\n-  0x3f, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x58, 0x58, 0x58, 0x20, 0x74, 0x68,\n-  0x69, 0x73, 0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x62, 0x65,\n-  0x20, 0x27, 0x66, 0x69, 0x78, 0x65, 0x64, 0x77, 0x69, 0x6e, 0x67, 0x5f,\n-  0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x20, 0x73, 0x74, 0x61, 0x72,\n-  0x74, 0x27, 0x2e, 0x0a, 0x23, 0x0a, 0x23, 0x66, 0x69, 0x78, 0x65, 0x64,\n-  0x77, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,\n-  0x20, 0x26, 0x0a, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x43, 0x6f, 0x6e, 0x66,\n-  0x69, 0x67, 0x75, 0x72, 0x65, 0x20, 0x46, 0x4d, 0x55, 0x20, 0x66, 0x6f,\n-  0x72, 0x20, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x6c, 0x6f, 0x6e, 0x65,\n-  0x20, 0x6d, 0x6f, 0x64, 0x65, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x58, 0x58,\n-  0x58, 0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x3f,\n-  0x0a, 0x23, 0x0a, 0x23, 0x70, 0x78, 0x34, 0x66, 0x6d, 0x75, 0x20, 0x73,\n-  0x74, 0x61, 0x72, 0x74, 0x0a, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x53, 0x74,\n-  0x61, 0x72, 0x74, 0x20, 0x6c, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x20,\n-  0x66, 0x6f, 0x72, 0x20, 0x61, 0x20, 0x47, 0x50, 0x53, 0x2e, 0x0a, 0x23,\n+  0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,\n+  0x65, 0x72, 0x2e, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x58, 0x58, 0x58, 0x20,\n+  0x74, 0x68, 0x69, 0x73, 0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20,\n+  0x62, 0x65, 0x20, 0x27, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x65,\n+  0x72, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x27, 0x2e, 0x0a, 0x23, 0x0a,\n+  0x23, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x65, 0x72, 0x20, 0x26,\n+  0x0a, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x53, 0x74, 0x61, 0x72, 0x74, 0x20,\n+  0x74, 0x68, 0x65, 0x20, 0x61, 0x74, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,\n+  0x20, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x6f, 0x72, 0x0a, 0x23,\n   0x0a, 0x23, 0x20, 0x58, 0x58, 0x58, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20,\n-  0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x6e,\n-  0x65, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x62, 0x65, 0x20, 0x62, 0x61,\n-  0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x0a, 0x23,\n-  0x0a, 0x23, 0x67, 0x70, 0x73, 0x20, 0x2d, 0x64, 0x20, 0x2f, 0x64, 0x65,\n-  0x76, 0x2f, 0x74, 0x74, 0x79, 0x53, 0x33, 0x20, 0x2d, 0x6d, 0x20, 0x61,\n-  0x6c, 0x6c, 0x20, 0x26, 0x0a, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x53, 0x74,\n-  0x61, 0x72, 0x74, 0x20, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x20,\n-  0x74, 0x6f, 0x20, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x53, 0x44, 0x20, 0x69,\n-  0x66, 0x20, 0x77, 0x65, 0x20, 0x63, 0x61, 0x6e, 0x0a, 0x23, 0x0a, 0x73,\n-  0x68, 0x20, 0x2f, 0x65, 0x74, 0x63, 0x2f, 0x69, 0x6e, 0x69, 0x74, 0x2e,\n-  0x64, 0x2f, 0x72, 0x63, 0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67,\n-  0x0a, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x5b, 0x69, 0x6e, 0x69,\n-  0x74, 0x5d, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x20, 0x64,\n-  0x6f, 0x6e, 0x65, 0x22, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a,\n+  0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x62, 0x65, 0x20, 0x27, 0x3c,\n+  0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3e, 0x20, 0x73, 0x74, 0x61,\n+  0x72, 0x74, 0x27, 0x2e, 0x0a, 0x23, 0x0a, 0x23, 0x61, 0x74, 0x74, 0x69,\n+  0x74, 0x75, 0x64, 0x65, 0x5f, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74,\n+  0x6f, 0x72, 0x5f, 0x62, 0x6d, 0x20, 0x26, 0x0a, 0x23, 0x70, 0x6f, 0x73,\n+  0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61,\n+  0x74, 0x6f, 0x72, 0x20, 0x26, 0x0a, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x53,\n+  0x74, 0x61, 0x72, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x78,\n+  0x65, 0x64, 0x2d, 0x77, 0x69, 0x6e, 0x67, 0x20, 0x63, 0x6f, 0x6e, 0x74,\n+  0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x0a, 0x23, 0x0a, 0x23, 0x20,\n+  0x58, 0x58, 0x58, 0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x74,\n+  0x68, 0x69, 0x73, 0x20, 0x62, 0x65, 0x20, 0x6c, 0x6f, 0x6f, 0x6b, 0x69,\n+  0x6e, 0x67, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69,\n+  0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 0x6f, 0x20,\n+  0x64, 0x65, 0x63, 0x69, 0x64, 0x65, 0x0a, 0x23, 0x20, 0x77, 0x68, 0x65,\n+  0x74, 0x68, 0x65, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x62, 0x6f, 0x61,\n+  0x72, 0x64, 0x20, 0x69, 0x73, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,\n+  0x75, 0x72, 0x65, 0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x66, 0x69, 0x78,\n+  0x65, 0x64, 0x2d, 0x77, 0x69, 0x6e, 0x67, 0x20, 0x75, 0x73, 0x65, 0x3f,\n+  0x0a, 0x23, 0x0a, 0x23, 0x20, 0x58, 0x58, 0x58, 0x20, 0x74, 0x68, 0x69,\n+  0x73, 0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x62, 0x65, 0x20,\n+  0x27, 0x66, 0x69, 0x78, 0x65, 0x64, 0x77, 0x69, 0x6e, 0x67, 0x5f, 0x63,\n+  0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74,\n+  0x27, 0x2e, 0x0a, 0x23, 0x0a, 0x23, 0x66, 0x69, 0x78, 0x65, 0x64, 0x77,\n+  0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x20,\n+  0x26, 0x0a, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x43, 0x6f, 0x6e, 0x66, 0x69,\n+  0x67, 0x75, 0x72, 0x65, 0x20, 0x46, 0x4d, 0x55, 0x20, 0x66, 0x6f, 0x72,\n+  0x20, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x6c, 0x6f, 0x6e, 0x65, 0x20,\n+  0x6d, 0x6f, 0x64, 0x65, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x58, 0x58, 0x58,\n+  0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x3f, 0x0a,\n+  0x23, 0x0a, 0x23, 0x70, 0x78, 0x34, 0x66, 0x6d, 0x75, 0x20, 0x73, 0x74,\n+  0x61, 0x72, 0x74, 0x0a, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x53, 0x74, 0x61,\n+  0x72, 0x74, 0x20, 0x6c, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x20, 0x66,\n+  0x6f, 0x72, 0x20, 0x61, 0x20, 0x47, 0x50, 0x53, 0x2e, 0x0a, 0x23, 0x0a,\n+  0x23, 0x20, 0x58, 0x58, 0x58, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x73,\n+  0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x6e, 0x65,\n+  0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x62, 0x65, 0x20, 0x62, 0x61, 0x63,\n+  0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x0a, 0x23, 0x0a,\n+  0x23, 0x67, 0x70, 0x73, 0x20, 0x2d, 0x64, 0x20, 0x2f, 0x64, 0x65, 0x76,\n+  0x2f, 0x74, 0x74, 0x79, 0x53, 0x33, 0x20, 0x2d, 0x6d, 0x20, 0x61, 0x6c,\n+  0x6c, 0x20, 0x26, 0x0a, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x53, 0x74, 0x61,\n+  0x72, 0x74, 0x20, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x20, 0x74,\n+  0x6f, 0x20, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x53, 0x44, 0x20, 0x69, 0x66,\n+  0x20, 0x77, 0x65, 0x20, 0x63, 0x61, 0x6e, 0x0a, 0x23, 0x0a, 0x73, 0x68,\n+  0x20, 0x2f, 0x65, 0x74, 0x63, 0x2f, 0x69, 0x6e, 0x69, 0x74, 0x2e, 0x64,\n+  0x2f, 0x72, 0x63, 0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x0a,\n+  0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x5b, 0x69, 0x6e, 0x69, 0x74,\n+  0x5d, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x20, 0x64, 0x6f,\n+  0x6e, 0x65, 0x22, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a,\n   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x76, 0x8d, 0x9c, 0xa3, 0x80,\n   0x72, 0x63, 0x53, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n   0x00, 0x00, 0x00, 0x00, 0x23, 0x21, 0x6e, 0x73, 0x68, 0x0a, 0x23, 0x0a,"},{"sha":"2a6d04306a2e4651a10a970572cac443cec0bd76","filename":"nuttx/configs/px4fmu/src/drv_hmc5833l.c","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/139cd091768c57272fe1f80d725d4a3a24d2e3d0/nuttx%2Fconfigs%2Fpx4fmu%2Fsrc%2Fdrv_hmc5833l.c","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/139cd091768c57272fe1f80d725d4a3a24d2e3d0/nuttx%2Fconfigs%2Fpx4fmu%2Fsrc%2Fdrv_hmc5833l.c","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/nuttx%2Fconfigs%2Fpx4fmu%2Fsrc%2Fdrv_hmc5833l.c?ref=139cd091768c57272fe1f80d725d4a3a24d2e3d0","patch":"@@ -204,7 +204,7 @@ read_values(int16_t *data)\n \t\t\tint hmc_status = hmc5883l_read_reg(ADDR_STATUS);\n \t\t\tif (hmc_status < 0)\n \t\t\t  {\n-\t\t\t  \tif (ret == ETIMEDOUT) hmc5883l_reset();\n+\t\t\t  \tif (hmc_status == ETIMEDOUT) hmc5883l_reset();\n \t\t\t  \tret = hmc_status;\n \t\t\t  }\n \t\t\telse"},{"sha":"c7e91c5ead89acc7172b3dd709e06df804a07e2c","filename":"nuttx/configs/px4fmu/src/drv_ms5611.c","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/139cd091768c57272fe1f80d725d4a3a24d2e3d0/nuttx%2Fconfigs%2Fpx4fmu%2Fsrc%2Fdrv_ms5611.c","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/139cd091768c57272fe1f80d725d4a3a24d2e3d0/nuttx%2Fconfigs%2Fpx4fmu%2Fsrc%2Fdrv_ms5611.c","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/nuttx%2Fconfigs%2Fpx4fmu%2Fsrc%2Fdrv_ms5611.c?ref=139cd091768c57272fe1f80d725d4a3a24d2e3d0","patch":"@@ -123,6 +123,16 @@ static FAR struct {\n \n static int ms5611_read_prom(void);\n \n+int ms5611_reset()\n+{\n+\tint ret;\n+\tprintf(\"[ms5611 drv] Resettet I2C2 BUS\\n\");\n+\tup_i2cuninitialize(ms5611_dev.i2c);\n+\tms5611_dev.i2c = up_i2cinitialize(2);\n+\tI2C_SETFREQUENCY(ms5611_dev.i2c, 400000);\n+\treturn ret;\n+}\n+\n static bool\n read_values(float *data)\n {\n@@ -279,6 +289,7 @@ read_values(float *data)\n \telse\n \t{\n \t\terrno = -ret;\n+\t\tif (errno == ETIMEDOUT || ret == ETIMEDOUT) ms5611_reset();\n \t\treturn ret;\n \t}\n }"}]}