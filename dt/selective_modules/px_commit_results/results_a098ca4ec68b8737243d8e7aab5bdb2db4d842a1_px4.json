{"sha":"a098ca4ec68b8737243d8e7aab5bdb2db4d842a1","node_id":"MDY6Q29tbWl0NTI5ODc5MDphMDk4Y2E0ZWM2OGI4NzM3MjQzZDhlN2FhYjViZGIyZGI0ZDg0MmEx","commit":{"author":{"name":"Lorenz Meier","email":"lm@inf.ethz.ch","date":"2015-03-28T20:06:05Z"},"committer":{"name":"Lorenz Meier","email":"lm@inf.ethz.ch","date":"2015-03-28T20:07:01Z"},"message":"Move autosave into the 1-second timeout check.","tree":{"sha":"e38a2352011906435abdcf296a1dc2d7893d8949","url":"https://api.github.com/repos/PX4/PX4-Autopilot/git/trees/e38a2352011906435abdcf296a1dc2d7893d8949"},"url":"https://api.github.com/repos/PX4/PX4-Autopilot/git/commits/a098ca4ec68b8737243d8e7aab5bdb2db4d842a1","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/a098ca4ec68b8737243d8e7aab5bdb2db4d842a1","html_url":"https://github.com/PX4/PX4-Autopilot/commit/a098ca4ec68b8737243d8e7aab5bdb2db4d842a1","comments_url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/a098ca4ec68b8737243d8e7aab5bdb2db4d842a1/comments","author":{"login":"LorenzMeier","id":1208119,"node_id":"MDQ6VXNlcjEyMDgxMTk=","avatar_url":"https://avatars.githubusercontent.com/u/1208119?v=4","gravatar_id":"","url":"https://api.github.com/users/LorenzMeier","html_url":"https://github.com/LorenzMeier","followers_url":"https://api.github.com/users/LorenzMeier/followers","following_url":"https://api.github.com/users/LorenzMeier/following{/other_user}","gists_url":"https://api.github.com/users/LorenzMeier/gists{/gist_id}","starred_url":"https://api.github.com/users/LorenzMeier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LorenzMeier/subscriptions","organizations_url":"https://api.github.com/users/LorenzMeier/orgs","repos_url":"https://api.github.com/users/LorenzMeier/repos","events_url":"https://api.github.com/users/LorenzMeier/events{/privacy}","received_events_url":"https://api.github.com/users/LorenzMeier/received_events","type":"User","site_admin":false},"committer":{"login":"LorenzMeier","id":1208119,"node_id":"MDQ6VXNlcjEyMDgxMTk=","avatar_url":"https://avatars.githubusercontent.com/u/1208119?v=4","gravatar_id":"","url":"https://api.github.com/users/LorenzMeier","html_url":"https://github.com/LorenzMeier","followers_url":"https://api.github.com/users/LorenzMeier/followers","following_url":"https://api.github.com/users/LorenzMeier/following{/other_user}","gists_url":"https://api.github.com/users/LorenzMeier/gists{/gist_id}","starred_url":"https://api.github.com/users/LorenzMeier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LorenzMeier/subscriptions","organizations_url":"https://api.github.com/users/LorenzMeier/orgs","repos_url":"https://api.github.com/users/LorenzMeier/repos","events_url":"https://api.github.com/users/LorenzMeier/events{/privacy}","received_events_url":"https://api.github.com/users/LorenzMeier/received_events","type":"User","site_admin":false},"parents":[{"sha":"f8fd67d3e17e8f32b7ee5a7d9e112bf944e2735f","url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/f8fd67d3e17e8f32b7ee5a7d9e112bf944e2735f","html_url":"https://github.com/PX4/PX4-Autopilot/commit/f8fd67d3e17e8f32b7ee5a7d9e112bf944e2735f"}],"stats":{"total":307,"additions":152,"deletions":155},"files":[{"sha":"35f538b23054577e64355233727119acacbb7c49","filename":"src/modules/commander/commander.cpp","status":"modified","additions":152,"deletions":155,"changes":307,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/a098ca4ec68b8737243d8e7aab5bdb2db4d842a1/src%2Fmodules%2Fcommander%2Fcommander.cpp","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/a098ca4ec68b8737243d8e7aab5bdb2db4d842a1/src%2Fmodules%2Fcommander%2Fcommander.cpp","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/src%2Fmodules%2Fcommander%2Fcommander.cpp?ref=a098ca4ec68b8737243d8e7aab5bdb2db4d842a1","patch":"@@ -2549,216 +2549,213 @@ void *commander_low_prio_loop(void *arg)\n \tfds[0].events = POLLIN;\n \n \twhile (!thread_should_exit) {\n-\t\t/* wait for up to 200ms for data */\n-\t\tint pret = poll(&fds[0], (sizeof(fds) / sizeof(fds[0])), 200);\n+\t\t/* wait for up to 1000ms for data */\n+\t\tint pret = poll(&fds[0], (sizeof(fds) / sizeof(fds[0])), 1000);\n \n \t\t/* timed out - periodic check for thread_should_exit, etc. */\n \t\tif (pret == 0) {\n-\t\t\tcontinue;\n-\t\t}\n+\t\t\t/* trigger a param autosave if required */\n+\t\t\tif (_param_autosave) {\n+\t\t\t\tif (_param_autosave_timeout > 0 && hrt_elapsed_time(&_param_autosave_timeout) > 200000ULL) {\n+\t\t\t\t\tint ret = param_save_default();\n+\n+\t\t\t\t\tif (ret == OK) {\n+\t\t\t\t\t\tmavlink_and_console_log_info(mavlink_fd, \"settings autosaved\");\n \n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tmavlink_and_console_log_critical(mavlink_fd, \"settings save error\");\n+\t\t\t\t\t}\n+\n+\t\t\t\t\t_param_autosave = false;\n+\t\t\t\t\t_param_autosave_timeout = 0;\n+\t\t\t\t} else {\n+\t\t\t\t\t_param_autosave_timeout = hrt_absolute_time();\n+\t\t\t\t}\n+\t\t\t}\n+\t\t} else if (pret < 0) {\n \t\t/* this is undesirable but not much we can do - might want to flag unhappy status */\n-\t\tif (pret < 0) {\n \t\t\twarn(\"poll error %d, %d\", pret, errno);\n \t\t\tcontinue;\n-\t\t}\n+\t\t} else {\n \n-\t\t/* if we reach here, we have a valid command */\n-\t\torb_copy(ORB_ID(vehicle_command), cmd_sub, &cmd);\n+\t\t\t/* if we reach here, we have a valid command */\n+\t\t\torb_copy(ORB_ID(vehicle_command), cmd_sub, &cmd);\n \n-\t\t/* ignore commands the high-prio loop handles */\n-\t\tif (cmd.command == VEHICLE_CMD_DO_SET_MODE ||\n-\t\t    cmd.command == VEHICLE_CMD_COMPONENT_ARM_DISARM ||\n-\t\t    cmd.command == VEHICLE_CMD_NAV_TAKEOFF ||\n-\t\t    cmd.command == VEHICLE_CMD_DO_SET_SERVO) {\n-\t\t\tcontinue;\n-\t\t}\n+\t\t\t/* ignore commands the high-prio loop handles */\n+\t\t\tif (cmd.command == VEHICLE_CMD_DO_SET_MODE ||\n+\t\t\t    cmd.command == VEHICLE_CMD_COMPONENT_ARM_DISARM ||\n+\t\t\t    cmd.command == VEHICLE_CMD_NAV_TAKEOFF ||\n+\t\t\t    cmd.command == VEHICLE_CMD_DO_SET_SERVO) {\n+\t\t\t\tcontinue;\n+\t\t\t}\n \n-\t\t/* only handle low-priority commands here */\n-\t\tswitch (cmd.command) {\n+\t\t\t/* only handle low-priority commands here */\n+\t\t\tswitch (cmd.command) {\n \n-\t\tcase VEHICLE_CMD_PREFLIGHT_REBOOT_SHUTDOWN:\n-\t\t\tif (is_safe(&status, &safety, &armed)) {\n+\t\t\tcase VEHICLE_CMD_PREFLIGHT_REBOOT_SHUTDOWN:\n+\t\t\t\tif (is_safe(&status, &safety, &armed)) {\n+\n+\t\t\t\t\tif (((int)(cmd.param1)) == 1) {\n+\t\t\t\t\t\tanswer_command(cmd, VEHICLE_CMD_RESULT_ACCEPTED);\n+\t\t\t\t\t\tusleep(100000);\n+\t\t\t\t\t\t/* reboot */\n+\t\t\t\t\t\tsystemreset(false);\n \n-\t\t\t\tif (((int)(cmd.param1)) == 1) {\n-\t\t\t\t\tanswer_command(cmd, VEHICLE_CMD_RESULT_ACCEPTED);\n-\t\t\t\t\tusleep(100000);\n-\t\t\t\t\t/* reboot */\n-\t\t\t\t\tsystemreset(false);\n+\t\t\t\t\t} else if (((int)(cmd.param1)) == 3) {\n+\t\t\t\t\t\tanswer_command(cmd, VEHICLE_CMD_RESULT_ACCEPTED);\n+\t\t\t\t\t\tusleep(100000);\n+\t\t\t\t\t\t/* reboot to bootloader */\n+\t\t\t\t\t\tsystemreset(true);\n \n-\t\t\t\t} else if (((int)(cmd.param1)) == 3) {\n-\t\t\t\t\tanswer_command(cmd, VEHICLE_CMD_RESULT_ACCEPTED);\n-\t\t\t\t\tusleep(100000);\n-\t\t\t\t\t/* reboot to bootloader */\n-\t\t\t\t\tsystemreset(true);\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tanswer_command(cmd, VEHICLE_CMD_RESULT_DENIED);\n+\t\t\t\t\t}\n \n \t\t\t\t} else {\n \t\t\t\t\tanswer_command(cmd, VEHICLE_CMD_RESULT_DENIED);\n \t\t\t\t}\n \n-\t\t\t} else {\n-\t\t\t\tanswer_command(cmd, VEHICLE_CMD_RESULT_DENIED);\n-\t\t\t}\n+\t\t\t\tbreak;\n \n-\t\t\tbreak;\n+\t\t\tcase VEHICLE_CMD_PREFLIGHT_CALIBRATION: {\n \n-\t\tcase VEHICLE_CMD_PREFLIGHT_CALIBRATION: {\n+\t\t\t\t\tint calib_ret = ERROR;\n \n-\t\t\t\tint calib_ret = ERROR;\n+\t\t\t\t\t/* try to go to INIT/PREFLIGHT arming state */\n+\t\t\t\t\tif (TRANSITION_DENIED == arming_state_transition(&status, &safety, vehicle_status_s::ARMING_STATE_INIT, &armed,\n+\t\t\t\t\t\t\ttrue /* fRunPreArmChecks */, mavlink_fd)) {\n+\t\t\t\t\t\tanswer_command(cmd, VEHICLE_CMD_RESULT_DENIED);\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\t}\n \n-\t\t\t\t/* try to go to INIT/PREFLIGHT arming state */\n-\t\t\t\tif (TRANSITION_DENIED == arming_state_transition(&status, &safety, vehicle_status_s::ARMING_STATE_INIT, &armed,\n-\t\t\t\t\t\ttrue /* fRunPreArmChecks */, mavlink_fd)) {\n-\t\t\t\t\tanswer_command(cmd, VEHICLE_CMD_RESULT_DENIED);\n-\t\t\t\t\tbreak;\n-\t\t\t\t}\n+\t\t\t\t\tif ((int)(cmd.param1) == 1) {\n+\t\t\t\t\t\t/* gyro calibration */\n+\t\t\t\t\t\tanswer_command(cmd, VEHICLE_CMD_RESULT_ACCEPTED);\n+\t\t\t\t\t\tcalib_ret = do_gyro_calibration(mavlink_fd);\n \n-\t\t\t\tif ((int)(cmd.param1) == 1) {\n-\t\t\t\t\t/* gyro calibration */\n-\t\t\t\t\tanswer_command(cmd, VEHICLE_CMD_RESULT_ACCEPTED);\n-\t\t\t\t\tcalib_ret = do_gyro_calibration(mavlink_fd);\n+\t\t\t\t\t} else if ((int)(cmd.param2) == 1) {\n+\t\t\t\t\t\t/* magnetometer calibration */\n+\t\t\t\t\t\tanswer_command(cmd, VEHICLE_CMD_RESULT_ACCEPTED);\n+\t\t\t\t\t\tcalib_ret = do_mag_calibration(mavlink_fd);\n \n-\t\t\t\t} else if ((int)(cmd.param2) == 1) {\n-\t\t\t\t\t/* magnetometer calibration */\n-\t\t\t\t\tanswer_command(cmd, VEHICLE_CMD_RESULT_ACCEPTED);\n-\t\t\t\t\tcalib_ret = do_mag_calibration(mavlink_fd);\n+\t\t\t\t\t} else if ((int)(cmd.param3) == 1) {\n+\t\t\t\t\t\t/* zero-altitude pressure calibration */\n+\t\t\t\t\t\tanswer_command(cmd, VEHICLE_CMD_RESULT_DENIED);\n \n-\t\t\t\t} else if ((int)(cmd.param3) == 1) {\n-\t\t\t\t\t/* zero-altitude pressure calibration */\n-\t\t\t\t\tanswer_command(cmd, VEHICLE_CMD_RESULT_DENIED);\n+\t\t\t\t\t} else if ((int)(cmd.param4) == 1) {\n+\t\t\t\t\t\t/* RC calibration */\n+\t\t\t\t\t\tanswer_command(cmd, VEHICLE_CMD_RESULT_ACCEPTED);\n+\t\t\t\t\t\t/* disable RC control input completely */\n+\t\t\t\t\t\tstatus.rc_input_blocked = true;\n+\t\t\t\t\t\tcalib_ret = OK;\n+\t\t\t\t\t\tmavlink_log_info(mavlink_fd, \"CAL: Disabling RC IN\");\n+\n+\t\t\t\t\t} else if ((int)(cmd.param4) == 2) {\n+\t\t\t\t\t\t/* RC trim calibration */\n+\t\t\t\t\t\tanswer_command(cmd, VEHICLE_CMD_RESULT_ACCEPTED);\n+\t\t\t\t\t\tcalib_ret = do_trim_calibration(mavlink_fd);\n+\n+\t\t\t\t\t} else if ((int)(cmd.param5) == 1) {\n+\t\t\t\t\t\t/* accelerometer calibration */\n+\t\t\t\t\t\tanswer_command(cmd, VEHICLE_CMD_RESULT_ACCEPTED);\n+\t\t\t\t\t\tcalib_ret = do_accel_calibration(mavlink_fd);\n \n-\t\t\t\t} else if ((int)(cmd.param4) == 1) {\n-\t\t\t\t\t/* RC calibration */\n-\t\t\t\t\tanswer_command(cmd, VEHICLE_CMD_RESULT_ACCEPTED);\n-\t\t\t\t\t/* disable RC control input completely */\n-\t\t\t\t\tstatus.rc_input_blocked = true;\n-\t\t\t\t\tcalib_ret = OK;\n-\t\t\t\t\tmavlink_log_info(mavlink_fd, \"CAL: Disabling RC IN\");\n-\n-\t\t\t\t} else if ((int)(cmd.param4) == 2) {\n-\t\t\t\t\t/* RC trim calibration */\n-\t\t\t\t\tanswer_command(cmd, VEHICLE_CMD_RESULT_ACCEPTED);\n-\t\t\t\t\tcalib_ret = do_trim_calibration(mavlink_fd);\n-\n-\t\t\t\t} else if ((int)(cmd.param5) == 1) {\n-\t\t\t\t\t/* accelerometer calibration */\n-\t\t\t\t\tanswer_command(cmd, VEHICLE_CMD_RESULT_ACCEPTED);\n-\t\t\t\t\tcalib_ret = do_accel_calibration(mavlink_fd);\n-\n-\t\t\t\t} else if ((int)(cmd.param6) == 1) {\n-\t\t\t\t\t/* airspeed calibration */\n-\t\t\t\t\tanswer_command(cmd, VEHICLE_CMD_RESULT_ACCEPTED);\n-\t\t\t\t\tcalib_ret = do_airspeed_calibration(mavlink_fd);\n-\n-\t\t\t\t} else if ((int)(cmd.param4) == 0) {\n-\t\t\t\t\t/* RC calibration ended - have we been in one worth confirming? */\n-\t\t\t\t\tif (status.rc_input_blocked) {\n+\t\t\t\t\t} else if ((int)(cmd.param6) == 1) {\n+\t\t\t\t\t\t/* airspeed calibration */\n \t\t\t\t\t\tanswer_command(cmd, VEHICLE_CMD_RESULT_ACCEPTED);\n-\t\t\t\t\t\t/* enable RC control input */\n-\t\t\t\t\t\tstatus.rc_input_blocked = false;\n-\t\t\t\t\t\tmavlink_log_info(mavlink_fd, \"CAL: Re-enabling RC IN\");\n+\t\t\t\t\t\tcalib_ret = do_airspeed_calibration(mavlink_fd);\n+\n+\t\t\t\t\t} else if ((int)(cmd.param4) == 0) {\n+\t\t\t\t\t\t/* RC calibration ended - have we been in one worth confirming? */\n+\t\t\t\t\t\tif (status.rc_input_blocked) {\n+\t\t\t\t\t\t\tanswer_command(cmd, VEHICLE_CMD_RESULT_ACCEPTED);\n+\t\t\t\t\t\t\t/* enable RC control input */\n+\t\t\t\t\t\t\tstatus.rc_input_blocked = false;\n+\t\t\t\t\t\t\tmavlink_log_info(mavlink_fd, \"CAL: Re-enabling RC IN\");\n+\t\t\t\t\t\t}\n+\n+\t\t\t\t\t\t/* this always succeeds */\n+\t\t\t\t\t\tcalib_ret = OK;\n+\n \t\t\t\t\t}\n \n-\t\t\t\t\t/* this always succeeds */\n-\t\t\t\t\tcalib_ret = OK;\n+\t\t\t\t\tif (calib_ret == OK) {\n+\t\t\t\t\t\ttune_positive(true);\n \n-\t\t\t\t}\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\ttune_negative(true);\n+\t\t\t\t\t}\n \n-\t\t\t\tif (calib_ret == OK) {\n-\t\t\t\t\ttune_positive(true);\n+\t\t\t\t\tarming_state_transition(&status, &safety, vehicle_status_s::ARMING_STATE_STANDBY, &armed, true /* fRunPreArmChecks */, mavlink_fd);\n \n-\t\t\t\t} else {\n-\t\t\t\t\ttune_negative(true);\n+\t\t\t\t\tbreak;\n \t\t\t\t}\n \n-\t\t\t\tarming_state_transition(&status, &safety, vehicle_status_s::ARMING_STATE_STANDBY, &armed, true /* fRunPreArmChecks */, mavlink_fd);\n+\t\t\tcase VEHICLE_CMD_PREFLIGHT_STORAGE: {\n \n-\t\t\t\tbreak;\n-\t\t\t}\n+\t\t\t\t\tif (((int)(cmd.param1)) == 0) {\n+\t\t\t\t\t\tint ret = param_load_default();\n \n-\t\tcase VEHICLE_CMD_PREFLIGHT_STORAGE: {\n+\t\t\t\t\t\tif (ret == OK) {\n+\t\t\t\t\t\t\tmavlink_log_info(mavlink_fd, \"settings loaded\");\n+\t\t\t\t\t\t\tanswer_command(cmd, VEHICLE_CMD_RESULT_ACCEPTED);\n \n-\t\t\t\tif (((int)(cmd.param1)) == 0) {\n-\t\t\t\t\tint ret = param_load_default();\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\tmavlink_log_critical(mavlink_fd, \"settings load ERROR\");\n \n-\t\t\t\t\tif (ret == OK) {\n-\t\t\t\t\t\tmavlink_log_info(mavlink_fd, \"settings loaded\");\n-\t\t\t\t\t\tanswer_command(cmd, VEHICLE_CMD_RESULT_ACCEPTED);\n+\t\t\t\t\t\t\t/* convenience as many parts of NuttX use negative errno */\n+\t\t\t\t\t\t\tif (ret < 0) {\n+\t\t\t\t\t\t\t\tret = -ret;\n+\t\t\t\t\t\t\t}\n \n-\t\t\t\t\t} else {\n-\t\t\t\t\t\tmavlink_log_critical(mavlink_fd, \"settings load ERROR\");\n+\t\t\t\t\t\t\tif (ret < 1000) {\n+\t\t\t\t\t\t\t\tmavlink_log_critical(mavlink_fd, \"ERROR: %s\", strerror(ret));\n+\t\t\t\t\t\t\t}\n \n-\t\t\t\t\t\t/* convenience as many parts of NuttX use negative errno */\n-\t\t\t\t\t\tif (ret < 0) {\n-\t\t\t\t\t\t\tret = -ret;\n+\t\t\t\t\t\t\tanswer_command(cmd, VEHICLE_CMD_RESULT_FAILED);\n \t\t\t\t\t\t}\n \n-\t\t\t\t\t\tif (ret < 1000) {\n-\t\t\t\t\t\t\tmavlink_log_critical(mavlink_fd, \"ERROR: %s\", strerror(ret));\n-\t\t\t\t\t\t}\n+\t\t\t\t\t} else if (((int)(cmd.param1)) == 1) {\n+\t\t\t\t\t\tint ret = param_save_default();\n \n-\t\t\t\t\t\tanswer_command(cmd, VEHICLE_CMD_RESULT_FAILED);\n-\t\t\t\t\t}\n+\t\t\t\t\t\tif (ret == OK) {\n+\t\t\t\t\t\t\tmavlink_log_info(mavlink_fd, \"settings saved\");\n+\t\t\t\t\t\t\tanswer_command(cmd, VEHICLE_CMD_RESULT_ACCEPTED);\n \n-\t\t\t\t} else if (((int)(cmd.param1)) == 1) {\n-\t\t\t\t\tint ret = param_save_default();\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\tmavlink_log_critical(mavlink_fd, \"settings save error\");\n \n-\t\t\t\t\tif (ret == OK) {\n-\t\t\t\t\t\tmavlink_log_info(mavlink_fd, \"settings saved\");\n-\t\t\t\t\t\tanswer_command(cmd, VEHICLE_CMD_RESULT_ACCEPTED);\n+\t\t\t\t\t\t\t/* convenience as many parts of NuttX use negative errno */\n+\t\t\t\t\t\t\tif (ret < 0) {\n+\t\t\t\t\t\t\t\tret = -ret;\n+\t\t\t\t\t\t\t}\n \n-\t\t\t\t\t} else {\n-\t\t\t\t\t\tmavlink_log_critical(mavlink_fd, \"settings save error\");\n+\t\t\t\t\t\t\tif (ret < 1000) {\n+\t\t\t\t\t\t\t\tmavlink_log_critical(mavlink_fd, \"ERROR: %s\", strerror(ret));\n+\t\t\t\t\t\t\t}\n \n-\t\t\t\t\t\t/* convenience as many parts of NuttX use negative errno */\n-\t\t\t\t\t\tif (ret < 0) {\n-\t\t\t\t\t\t\tret = -ret;\n+\t\t\t\t\t\t\tanswer_command(cmd, VEHICLE_CMD_RESULT_FAILED);\n \t\t\t\t\t\t}\n-\n-\t\t\t\t\t\tif (ret < 1000) {\n-\t\t\t\t\t\t\tmavlink_log_critical(mavlink_fd, \"ERROR: %s\", strerror(ret));\n-\t\t\t\t\t\t}\n-\n-\t\t\t\t\t\tanswer_command(cmd, VEHICLE_CMD_RESULT_FAILED);\n \t\t\t\t\t}\n+\n+\t\t\t\t\tbreak;\n \t\t\t\t}\n \n+\t\t\tcase VEHICLE_CMD_START_RX_PAIR:\n+\t\t\t\t/* handled in the IO driver */\n \t\t\t\tbreak;\n-\t\t\t}\n-\n-\t\tcase VEHICLE_CMD_START_RX_PAIR:\n-\t\t\t/* handled in the IO driver */\n-\t\t\tbreak;\n-\n-\t\tdefault:\n-\t\t\t/* don't answer on unsupported commands, it will be done in main loop */\n-\t\t\tbreak;\n-\t\t}\n \n-\t\t/* trigger a param autosave if required */\n-\t\tif (_param_autosave) {\n-\t\t\tif (_param_autosave_timeout > 0 && hrt_elapsed_time(&_param_autosave_timeout) > 200000ULL) {\n-\t\t\t\tint ret = param_save_default();\n-\n-\t\t\t\tif (ret == OK) {\n-\t\t\t\t\tmavlink_and_console_log_info(mavlink_fd, \"settings autosaved\");\n-\n-\t\t\t\t} else {\n-\t\t\t\t\tmavlink_and_console_log_critical(mavlink_fd, \"settings save error\");\n-\t\t\t\t}\n-\n-\t\t\t\t_param_autosave = false;\n-\t\t\t\t_param_autosave_timeout = 0;\n-\t\t\t} else {\n-\t\t\t\t_param_autosave_timeout = hrt_absolute_time();\n+\t\t\tdefault:\n+\t\t\t\t/* don't answer on unsupported commands, it will be done in main loop */\n+\t\t\t\tbreak;\n \t\t\t}\n-\t\t}\n \n-\t\t/* send any requested ACKs */\n-\t\tif (cmd.confirmation > 0 && cmd.command != VEHICLE_CMD_DO_SET_MODE\n-\t\t    && cmd.command != VEHICLE_CMD_COMPONENT_ARM_DISARM) {\n-\t\t\t/* send acknowledge command */\n-\t\t\t// XXX TODO\n+\t\t\t/* send any requested ACKs */\n+\t\t\tif (cmd.confirmation > 0 && cmd.command != VEHICLE_CMD_DO_SET_MODE\n+\t\t\t    && cmd.command != VEHICLE_CMD_COMPONENT_ARM_DISARM) {\n+\t\t\t\t/* send acknowledge command */\n+\t\t\t\t// XXX TODO\n+\t\t\t}\n \t\t}\n \t}\n "}]}