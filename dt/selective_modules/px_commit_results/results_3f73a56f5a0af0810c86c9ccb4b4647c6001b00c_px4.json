{"sha":"3f73a56f5a0af0810c86c9ccb4b4647c6001b00c","node_id":"MDY6Q29tbWl0NTI5ODc5MDozZjczYTU2ZjVhMGFmMDgxMGM4NmM5Y2NiNGI0NjQ3YzYwMDFiMDBj","commit":{"author":{"name":"Dennis Mannhart","email":"dennis.mannhart@gmail.com","date":"2017-06-01T12:59:17Z"},"committer":{"name":"Lorenz Meier","email":"lorenz@px4.io","date":"2017-09-11T09:08:22Z"},"message":"mc_pos_control: accelerate faster in auto and increase speed at 90degrees angle","tree":{"sha":"cce9b76f87d51f9fb68c7752bbb590e45f5db9ae","url":"https://api.github.com/repos/PX4/PX4-Autopilot/git/trees/cce9b76f87d51f9fb68c7752bbb590e45f5db9ae"},"url":"https://api.github.com/repos/PX4/PX4-Autopilot/git/commits/3f73a56f5a0af0810c86c9ccb4b4647c6001b00c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/3f73a56f5a0af0810c86c9ccb4b4647c6001b00c","html_url":"https://github.com/PX4/PX4-Autopilot/commit/3f73a56f5a0af0810c86c9ccb4b4647c6001b00c","comments_url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/3f73a56f5a0af0810c86c9ccb4b4647c6001b00c/comments","author":{"login":"Stifael","id":13449161,"node_id":"MDQ6VXNlcjEzNDQ5MTYx","avatar_url":"https://avatars.githubusercontent.com/u/13449161?v=4","gravatar_id":"","url":"https://api.github.com/users/Stifael","html_url":"https://github.com/Stifael","followers_url":"https://api.github.com/users/Stifael/followers","following_url":"https://api.github.com/users/Stifael/following{/other_user}","gists_url":"https://api.github.com/users/Stifael/gists{/gist_id}","starred_url":"https://api.github.com/users/Stifael/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Stifael/subscriptions","organizations_url":"https://api.github.com/users/Stifael/orgs","repos_url":"https://api.github.com/users/Stifael/repos","events_url":"https://api.github.com/users/Stifael/events{/privacy}","received_events_url":"https://api.github.com/users/Stifael/received_events","type":"User","site_admin":false},"committer":{"login":"LorenzMeier","id":1208119,"node_id":"MDQ6VXNlcjEyMDgxMTk=","avatar_url":"https://avatars.githubusercontent.com/u/1208119?v=4","gravatar_id":"","url":"https://api.github.com/users/LorenzMeier","html_url":"https://github.com/LorenzMeier","followers_url":"https://api.github.com/users/LorenzMeier/followers","following_url":"https://api.github.com/users/LorenzMeier/following{/other_user}","gists_url":"https://api.github.com/users/LorenzMeier/gists{/gist_id}","starred_url":"https://api.github.com/users/LorenzMeier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LorenzMeier/subscriptions","organizations_url":"https://api.github.com/users/LorenzMeier/orgs","repos_url":"https://api.github.com/users/LorenzMeier/repos","events_url":"https://api.github.com/users/LorenzMeier/events{/privacy}","received_events_url":"https://api.github.com/users/LorenzMeier/received_events","type":"User","site_admin":false},"parents":[{"sha":"540c0bdafb181b790136737041b7c443545665ab","url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/540c0bdafb181b790136737041b7c443545665ab","html_url":"https://github.com/PX4/PX4-Autopilot/commit/540c0bdafb181b790136737041b7c443545665ab"}],"stats":{"total":24,"additions":12,"deletions":12},"files":[{"sha":"03ce9cc47ee650b13e8d76e0e57811a21bf9f815","filename":"src/modules/mc_pos_control/mc_pos_control_main.cpp","status":"modified","additions":12,"deletions":12,"changes":24,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/3f73a56f5a0af0810c86c9ccb4b4647c6001b00c/src%2Fmodules%2Fmc_pos_control%2Fmc_pos_control_main.cpp","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/3f73a56f5a0af0810c86c9ccb4b4647c6001b00c/src%2Fmodules%2Fmc_pos_control%2Fmc_pos_control_main.cpp","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/src%2Fmodules%2Fmc_pos_control%2Fmc_pos_control_main.cpp?ref=3f73a56f5a0af0810c86c9ccb4b4647c6001b00c","patch":"@@ -905,11 +905,11 @@ MulticopterPositionControl::get_vel_close(const matrix::Vector2f &unit_prev_to_c\n \t * angle = 2 -> vel_close = min_cruising_speed */\n \n \t/* middle cruise speed is a number between maximum cruising speed and minimum cruising speed and corresponds to speed at angle = 1.0 = 90degrees */\n-\tfloat middle_cruise_speed = 2.0f * _min_cruise_speed.get();\n+\tfloat middle_cruise_speed = 3.0f * (_min_cruise_speed.get() + SIGMA_NORM);\n \n \t/* sanity check: make sure middle cruise speed is always in between min and max*/\n-\tmiddle_cruise_speed = ((_min_cruise_speed.get() < middle_cruise_speed)\n-\t\t\t       && (get_cruising_speed_xy() > middle_cruise_speed)) ? middle_cruise_speed : _min_cruise_speed.get() + SIGMA_NORM;\n+\tmiddle_cruise_speed = (get_cruising_speed_xy() > middle_cruise_speed) ? middle_cruise_speed : get_cruising_speed_xy() -\n+\t\t\t      SIGMA_NORM;\n \n \t/* from maximum cruise speed, minimum cruise speed and middle cruise speed compute constants a, b and c */\n \tfloat a = -((middle_cruise_speed -  get_cruising_speed_xy()) * (middle_cruise_speed -  get_cruising_speed_xy())) /\n@@ -1606,22 +1606,22 @@ void MulticopterPositionControl::control_auto(float dt)\n \n \t\t\t\t\t} else {\n \n-\t\t\t\t\t\t/* we want to accelerate in half the target threshold distance */\n-\t\t\t\t\t\tfloat slope = (final_cruise_speed - vel_sp_along_track_prev)  / (target_threshold);\n-\t\t\t\t\t\tvel_sp_along_track =  slope * (vec_prev_to_pos.length()) + vel_sp_along_track_prev;\n+\t\t\t\t\t\tvel_sp_along_track = final_cruise_speed;\n \n+\t\t\t\t\t\t/* we want to accelerate not too fast\n+\t\t\t\t\t\t * TODO: change the name acceleration_hor_man to something that can\n+\t\t\t\t\t\t * be used by auto and manual */\n+\t\t\t\t\t\tfloat acc_track = (final_cruise_speed - vel_sp_along_track_prev) / dt;\n+\n+\t\t\t\t\t\tif (acc_track > _acceleration_hor_manual.get()) {\n+\t\t\t\t\t\t\tvel_sp_along_track = _acceleration_hor_manual.get() * dt + vel_sp_along_track_prev;\n+\t\t\t\t\t\t}\n \t\t\t\t\t}\n \n \t\t\t\t\t/* enforce minimum cruise speed */\n \t\t\t\t\tvel_sp_along_track  = (vel_sp_along_track < SIGMA_NORM) ? SIGMA_NORM : vel_sp_along_track;\n \t\t\t\t\tvel_sp_along_track \t= (vel_sp_along_track > final_cruise_speed) ? final_cruise_speed : vel_sp_along_track;\n \n-\t\t\t\t\t/* take over the previous velocity setpoint along track if larger since we want to accelerate */\n-\t\t\t\t\tif (vel_sp_along_track_prev > vel_sp_along_track) {\n-\t\t\t\t\t\tvel_sp_along_track = vel_sp_along_track_prev;\n-\t\t\t\t\t}\n-\n-\n \t\t\t\t} else if (close_to_current) {\n \t\t\t\t\t/* slow down when close to current setpoint */\n "}]}