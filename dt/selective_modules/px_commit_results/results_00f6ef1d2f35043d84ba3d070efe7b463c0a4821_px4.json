{"sha":"00f6ef1d2f35043d84ba3d070efe7b463c0a4821","node_id":"MDY6Q29tbWl0NTI5ODc5MDowMGY2ZWYxZDJmMzUwNDNkODRiYTNkMDcwZWZlN2I0NjNjMGE0ODIx","commit":{"author":{"name":"acfloria","email":"florian.achermann@mavt.ethz.ch","date":"2018-01-10T15:04:14Z"},"committer":{"name":"Beat KÃ¼ng","email":"beat-kueng@gmx.net","date":"2018-04-11T13:15:28Z"},"message":"Style fix and iridium signal check rate fix","tree":{"sha":"bd455297eb1dc637307e2fbafd0790b1f3762787","url":"https://api.github.com/repos/PX4/PX4-Autopilot/git/trees/bd455297eb1dc637307e2fbafd0790b1f3762787"},"url":"https://api.github.com/repos/PX4/PX4-Autopilot/git/commits/00f6ef1d2f35043d84ba3d070efe7b463c0a4821","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/00f6ef1d2f35043d84ba3d070efe7b463c0a4821","html_url":"https://github.com/PX4/PX4-Autopilot/commit/00f6ef1d2f35043d84ba3d070efe7b463c0a4821","comments_url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/00f6ef1d2f35043d84ba3d070efe7b463c0a4821/comments","author":{"login":"acfloria","id":6713722,"node_id":"MDQ6VXNlcjY3MTM3MjI=","avatar_url":"https://avatars.githubusercontent.com/u/6713722?v=4","gravatar_id":"","url":"https://api.github.com/users/acfloria","html_url":"https://github.com/acfloria","followers_url":"https://api.github.com/users/acfloria/followers","following_url":"https://api.github.com/users/acfloria/following{/other_user}","gists_url":"https://api.github.com/users/acfloria/gists{/gist_id}","starred_url":"https://api.github.com/users/acfloria/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/acfloria/subscriptions","organizations_url":"https://api.github.com/users/acfloria/orgs","repos_url":"https://api.github.com/users/acfloria/repos","events_url":"https://api.github.com/users/acfloria/events{/privacy}","received_events_url":"https://api.github.com/users/acfloria/received_events","type":"User","site_admin":false},"committer":{"login":"bkueng","id":281593,"node_id":"MDQ6VXNlcjI4MTU5Mw==","avatar_url":"https://avatars.githubusercontent.com/u/281593?v=4","gravatar_id":"","url":"https://api.github.com/users/bkueng","html_url":"https://github.com/bkueng","followers_url":"https://api.github.com/users/bkueng/followers","following_url":"https://api.github.com/users/bkueng/following{/other_user}","gists_url":"https://api.github.com/users/bkueng/gists{/gist_id}","starred_url":"https://api.github.com/users/bkueng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bkueng/subscriptions","organizations_url":"https://api.github.com/users/bkueng/orgs","repos_url":"https://api.github.com/users/bkueng/repos","events_url":"https://api.github.com/users/bkueng/events{/privacy}","received_events_url":"https://api.github.com/users/bkueng/received_events","type":"User","site_admin":false},"parents":[{"sha":"1223a9abd520b8167cb5c9c9985b153e14fa7fda","url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/1223a9abd520b8167cb5c9c9985b153e14fa7fda","html_url":"https://github.com/PX4/PX4-Autopilot/commit/1223a9abd520b8167cb5c9c9985b153e14fa7fda"}],"stats":{"total":23,"additions":15,"deletions":8},"files":[{"sha":"19a7ec7fdcbf8e662432e6a1ef2c8d5b3fb13ca3","filename":"src/drivers/telemetry/iridiumsbd/IridiumSBD.cpp","status":"modified","additions":15,"deletions":8,"changes":23,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/00f6ef1d2f35043d84ba3d070efe7b463c0a4821/src%2Fdrivers%2Ftelemetry%2Firidiumsbd%2FIridiumSBD.cpp","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/00f6ef1d2f35043d84ba3d070efe7b463c0a4821/src%2Fdrivers%2Ftelemetry%2Firidiumsbd%2FIridiumSBD.cpp","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/src%2Fdrivers%2Ftelemetry%2Firidiumsbd%2FIridiumSBD.cpp?ref=00f6ef1d2f35043d84ba3d070efe7b463c0a4821","patch":"@@ -78,7 +78,7 @@ int IridiumSBD::start(int argc, char *argv[])\n \tIridiumSBD::instance = new IridiumSBD();\n \n \tIridiumSBD::task_handle = px4_task_spawn_cmd(\"iridiumsbd\", SCHED_DEFAULT,\n-\t\t\t\t  SCHED_PRIORITY_SLOW_DRIVER, 1150, (main_t)&IridiumSBD::main_loop_helper, argv);\n+\t\t\t\t  SCHED_PRIORITY_SLOW_DRIVER, 1200, (main_t)&IridiumSBD::main_loop_helper, argv);\n \n \treturn OK;\n }\n@@ -253,9 +253,9 @@ void IridiumSBD::main_loop(int argc, char *argv[])\n \tparam_pointer = param_find(\"ISBD_READ_INT\");\n \tparam_get(param_pointer, &param_read_interval_s);\n \n-\tif (param_read_interval_s < 0) {\n-\t\tparam_read_interval_s = 10;\n-\t}\n+//\tif (param_read_interval_s < 0) {\n+//\t\tparam_read_interval_s = 10;\n+//\t}\n \n \tparam_pointer = param_find(\"ISBD_SBD_TIMEOUT\");\n \tparam_get(param_pointer, &param_session_timeout_s);\n@@ -325,7 +325,7 @@ void IridiumSBD::standby_loop(void)\n \t// check for incoming SBDRING, handled inside read_at_command()\n \tread_at_command();\n \n-\tif (param_read_interval_s != 0 && ((int64_t)(hrt_absolute_time() - last_read_time) > param_read_interval_s * 1000000)) {\n+\tif (param_read_interval_s > 0 && ((int64_t)(hrt_absolute_time() - last_read_time) > param_read_interval_s * 1000000)) {\n \t\trx_session_pending = true;\n \t}\n \n@@ -387,7 +387,6 @@ void IridiumSBD::csq_loop(void)\n \t}\n \n \tsignal_quality = rx_command_buf[5] - 48;\n-\tlast_signal_check = hrt_absolute_time();\n \n \tVERBOSE_INFO(\"SIGNAL QUALITY: %d\", signal_quality);\n \n@@ -401,7 +400,10 @@ void IridiumSBD::sbdsession_loop(void)\n \tint res = read_at_command();\n \n \tif (res == SATCOM_RESULT_NA) {\n-\t\tif ((int64_t)((hrt_absolute_time() - session_start_time)) > param_session_timeout_s * 1000000) {\n+\t\tif ((param_session_timeout_s > 0)\n+\t\t    && ((int64_t)((hrt_absolute_time() - session_start_time))\n+\t\t\t> param_session_timeout_s * 1000000)) {\n+\n \t\t\tPX4_WARN(\"SBD SESSION: TIMEOUT!\");\n \t\t\tnew_state = SATCOM_STATE_STANDBY;\n \t\t}\n@@ -506,6 +508,8 @@ void IridiumSBD::start_csq(void)\n {\n \tVERBOSE_INFO(\"UPDATING SIGNAL QUALITY\");\n \n+\tlast_signal_check = hrt_absolute_time();\n+\n \tif (!is_modem_ready()) {\n \t\tVERBOSE_INFO(\"UPDATE SIGNAL QUALITY: MODEM NOT READY!\");\n \t\treturn;\n@@ -526,6 +530,7 @@ void IridiumSBD::start_sbd_session(void)\n \n \tif (ring_pending) {\n \t\twrite_at(\"AT+SBDIXA\");\n+\n \t} else {\n \t\twrite_at(\"AT+SBDIX\");\n \t}\n@@ -559,6 +564,7 @@ void IridiumSBD::start_test(void)\n \t\t\tPX4_INFO(\"TEST %s\", test_command);\n \t\t\twrite_at(test_command);\n \t\t\tnew_state = SATCOM_STATE_TEST;\n+\n \t\t} else {\n \t\t\tPX4_WARN(\"The test command does not include AT or at: %s, ignoring it.\", test_command);\n \t\t\tnew_state = SATCOM_STATE_STANDBY;\n@@ -861,7 +867,8 @@ pollevent_t IridiumSBD::poll_state(struct file *filp)\n \treturn pollstate;\n }\n \n-void IridiumSBD::publish_telemetry_status() {\n+void IridiumSBD::publish_telemetry_status()\n+{\n \t// publish telemetry status for logger\n \tstruct telemetry_status_s tstatus = {};\n "}]}