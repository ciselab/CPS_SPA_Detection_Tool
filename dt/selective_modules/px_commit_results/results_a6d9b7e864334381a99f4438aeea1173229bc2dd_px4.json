{"sha":"a6d9b7e864334381a99f4438aeea1173229bc2dd","node_id":"MDY6Q29tbWl0NTI5ODc5MDphNmQ5YjdlODY0MzM0MzgxYTk5ZjQ0MzhhZWVhMTE3MzIyOWJjMmRk","commit":{"author":{"name":"Lorenz Meier","email":"lm@inf.ethz.ch","date":"2014-03-10T18:06:54Z"},"committer":{"name":"Lorenz Meier","email":"lm@inf.ethz.ch","date":"2014-03-10T18:06:54Z"},"message":"Merged stack size changes","tree":{"sha":"0267d758dc50621881f31429653fb93de3776770","url":"https://api.github.com/repos/PX4/PX4-Autopilot/git/trees/0267d758dc50621881f31429653fb93de3776770"},"url":"https://api.github.com/repos/PX4/PX4-Autopilot/git/commits/a6d9b7e864334381a99f4438aeea1173229bc2dd","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/a6d9b7e864334381a99f4438aeea1173229bc2dd","html_url":"https://github.com/PX4/PX4-Autopilot/commit/a6d9b7e864334381a99f4438aeea1173229bc2dd","comments_url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/a6d9b7e864334381a99f4438aeea1173229bc2dd/comments","author":{"login":"LorenzMeier","id":1208119,"node_id":"MDQ6VXNlcjEyMDgxMTk=","avatar_url":"https://avatars.githubusercontent.com/u/1208119?v=4","gravatar_id":"","url":"https://api.github.com/users/LorenzMeier","html_url":"https://github.com/LorenzMeier","followers_url":"https://api.github.com/users/LorenzMeier/followers","following_url":"https://api.github.com/users/LorenzMeier/following{/other_user}","gists_url":"https://api.github.com/users/LorenzMeier/gists{/gist_id}","starred_url":"https://api.github.com/users/LorenzMeier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LorenzMeier/subscriptions","organizations_url":"https://api.github.com/users/LorenzMeier/orgs","repos_url":"https://api.github.com/users/LorenzMeier/repos","events_url":"https://api.github.com/users/LorenzMeier/events{/privacy}","received_events_url":"https://api.github.com/users/LorenzMeier/received_events","type":"User","site_admin":false},"committer":{"login":"LorenzMeier","id":1208119,"node_id":"MDQ6VXNlcjEyMDgxMTk=","avatar_url":"https://avatars.githubusercontent.com/u/1208119?v=4","gravatar_id":"","url":"https://api.github.com/users/LorenzMeier","html_url":"https://github.com/LorenzMeier","followers_url":"https://api.github.com/users/LorenzMeier/followers","following_url":"https://api.github.com/users/LorenzMeier/following{/other_user}","gists_url":"https://api.github.com/users/LorenzMeier/gists{/gist_id}","starred_url":"https://api.github.com/users/LorenzMeier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LorenzMeier/subscriptions","organizations_url":"https://api.github.com/users/LorenzMeier/orgs","repos_url":"https://api.github.com/users/LorenzMeier/repos","events_url":"https://api.github.com/users/LorenzMeier/events{/privacy}","received_events_url":"https://api.github.com/users/LorenzMeier/received_events","type":"User","site_admin":false},"parents":[{"sha":"7de6513950e7e66606cc34e92a6e0dfb6fc55c9d","url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/7de6513950e7e66606cc34e92a6e0dfb6fc55c9d","html_url":"https://github.com/PX4/PX4-Autopilot/commit/7de6513950e7e66606cc34e92a6e0dfb6fc55c9d"},{"sha":"368c2390cf98980e317171d2a44622f1b6ec9c33","url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/368c2390cf98980e317171d2a44622f1b6ec9c33","html_url":"https://github.com/PX4/PX4-Autopilot/commit/368c2390cf98980e317171d2a44622f1b6ec9c33"}],"stats":{"total":241,"additions":190,"deletions":51},"files":[{"sha":"ceef9f9be76474e8f501fc80fac8545e174d19f0","filename":"Tools/px_romfs_pruner.py","status":"added","additions":83,"deletions":0,"changes":83,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/a6d9b7e864334381a99f4438aeea1173229bc2dd/Tools%2Fpx_romfs_pruner.py","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/a6d9b7e864334381a99f4438aeea1173229bc2dd/Tools%2Fpx_romfs_pruner.py","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/Tools%2Fpx_romfs_pruner.py?ref=a6d9b7e864334381a99f4438aeea1173229bc2dd","patch":"@@ -0,0 +1,83 @@\n+#!/usr/bin/env python\n+############################################################################\n+#\n+#   Copyright (C) 2014 PX4 Development Team. All rights reserved.\n+#   Author: Julian Oes <joes@student.ethz.ch>\n+\n+# Redistribution and use in source and binary forms, with or without\n+# modification, are permitted provided that the following conditions\n+# are met:\n+#\n+# 1. Redistributions of source code must retain the above copyright\n+#    notice, this list of conditions and the following disclaimer.\n+# 2. Redistributions in binary form must reproduce the above copyright\n+#    notice, this list of conditions and the following disclaimer in\n+#    the documentation and/or other materials provided with the\n+#    distribution.\n+# 3. Neither the name PX4 nor the names of its contributors may be\n+#    used to endorse or promote products derived from this software\n+#    without specific prior written permission.\n+#\n+# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n+# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n+# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n+# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n+# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n+# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n+# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS\n+# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED\n+# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n+# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n+# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+# POSSIBILITY OF SUCH DAMAGE.\n+#\n+############################################################################\n+\n+\n+\"\"\"\n+px_romfs_pruner.py:\n+Delete all comments and newlines before ROMFS is converted to an image\n+\"\"\"\n+\n+from __future__ import print_function\n+import argparse\n+import os\n+\n+def main():\n+    \n+        # Parse commandline arguments\n+        parser = argparse.ArgumentParser(description=\"ROMFS pruner.\")\n+        parser.add_argument('--folder', action=\"store\", help=\"ROMFS scratch folder.\")\n+        args = parser.parse_args()\n+    \n+        print(\"Pruning ROMFS files.\")\n+        \n+        # go through \n+        for (root, dirs, files) in os.walk(args.folder):\n+                for file in files:\n+                        # only prune text files\n+                        if \".zip\" in file or \".bin\" in file:\n+                                continue\n+                        \n+                        file_path = os.path.join(root, file)                        \n+                        \n+                        # read file line by line\n+                        pruned_content = \"\"\n+                        with open(file_path, \"r\") as f:\n+                                for line in  f:\n+                                        \n+                                        # handle mixer files differently than startup files\n+                                        if file_path.endswith(\".mix\"):\n+                                                if line.startswith((\"Z:\", \"M:\", \"R: \", \"O:\", \"S:\")):\n+                                                        pruned_content += line\n+                                        else:\n+                                                if not line.isspace() and not line.strip().startswith(\"#\"):\n+                                                        pruned_content += line\n+                        \n+                        # overwrite old scratch file\n+                        with open(file_path, \"w\") as f:\n+                                f.write(pruned_content)\n+                        \n+    \n+if __name__ == '__main__':\n+        main()\n\\ No newline at end of file"},{"sha":"1b646d9e00675ab7838025666a5d728d4032727c","filename":"makefiles/firmware.mk","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/a6d9b7e864334381a99f4438aeea1173229bc2dd/makefiles%2Ffirmware.mk","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/a6d9b7e864334381a99f4438aeea1173229bc2dd/makefiles%2Ffirmware.mk","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/makefiles%2Ffirmware.mk?ref=a6d9b7e864334381a99f4438aeea1173229bc2dd","patch":"@@ -355,6 +355,9 @@ ROMFS_OBJ\t\t = $(ROMFS_CSRC:.c=.o)\n LIBS\t\t\t+= $(ROMFS_OBJ)\n LINK_DEPS\t\t+= $(ROMFS_OBJ)\n \n+# Remove all comments from startup and mixer files\n+ROMFS_PRUNER\t = $(PX4_BASE)/Tools/px_romfs_pruner.py\n+\n # Turn the ROMFS image into an object file\n $(ROMFS_OBJ): $(ROMFS_IMG) $(GLOBAL_DEPS)\n \t$(call BIN_TO_OBJ,$<,$@,romfs_img)\n@@ -372,6 +375,7 @@ ifneq ($(ROMFS_EXTRA_FILES),)\n \t$(Q) $(MKDIR) -p $(ROMFS_SCRATCH)/extras\n \t$(Q) $(COPY) $(ROMFS_EXTRA_FILES) $(ROMFS_SCRATCH)/extras\n endif\n+\t$(Q) $(PYTHON) -u $(ROMFS_PRUNER) --folder $(ROMFS_SCRATCH)\n \n EXTRA_CLEANS\t\t+= $(ROMGS_OBJ) $(ROMFS_IMG)\n "},{"sha":"00bf83bd50bb2ebf0968d741550958983875fd8a","filename":"nuttx-configs/px4fmu-v1/nsh/defconfig","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/a6d9b7e864334381a99f4438aeea1173229bc2dd/nuttx-configs%2Fpx4fmu-v1%2Fnsh%2Fdefconfig","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/a6d9b7e864334381a99f4438aeea1173229bc2dd/nuttx-configs%2Fpx4fmu-v1%2Fnsh%2Fdefconfig","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/nuttx-configs%2Fpx4fmu-v1%2Fnsh%2Fdefconfig?ref=a6d9b7e864334381a99f4438aeea1173229bc2dd","patch":"@@ -417,7 +417,7 @@ CONFIG_PREALLOC_TIMERS=50\n #\n # Stack and heap information\n #\n-CONFIG_IDLETHREAD_STACKSIZE=6000\n+CONFIG_IDLETHREAD_STACKSIZE=4096\n CONFIG_USERMAIN_STACKSIZE=4096\n CONFIG_PTHREAD_STACK_MIN=512\n CONFIG_PTHREAD_STACK_DEFAULT=2048\n@@ -720,11 +720,11 @@ CONFIG_SCHED_WORKQUEUE=y\n CONFIG_SCHED_HPWORK=y\n CONFIG_SCHED_WORKPRIORITY=192\n CONFIG_SCHED_WORKPERIOD=5000\n-CONFIG_SCHED_WORKSTACKSIZE=2000\n+CONFIG_SCHED_WORKSTACKSIZE=2048\n CONFIG_SCHED_LPWORK=y\n CONFIG_SCHED_LPWORKPRIORITY=50\n CONFIG_SCHED_LPWORKPERIOD=50000\n-CONFIG_SCHED_LPWORKSTACKSIZE=2000\n+CONFIG_SCHED_LPWORKSTACKSIZE=2048\n # CONFIG_LIB_KBDCODEC is not set\n # CONFIG_LIB_SLCDCODEC is not set\n "},{"sha":"12f80c4a370ecb1fe41987a5d4a999612176d7bc","filename":"src/lib/launchdetection/CatapultLaunchMethod.cpp","status":"modified","additions":9,"deletions":8,"changes":17,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/a6d9b7e864334381a99f4438aeea1173229bc2dd/src%2Flib%2Flaunchdetection%2FCatapultLaunchMethod.cpp","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/a6d9b7e864334381a99f4438aeea1173229bc2dd/src%2Flib%2Flaunchdetection%2FCatapultLaunchMethod.cpp","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/src%2Flib%2Flaunchdetection%2FCatapultLaunchMethod.cpp?ref=a6d9b7e864334381a99f4438aeea1173229bc2dd","patch":"@@ -41,12 +41,16 @@\n #include \"CatapultLaunchMethod.h\"\n #include <systemlib/err.h>\n \n-CatapultLaunchMethod::CatapultLaunchMethod() :\n+namespace launchdetection\n+{\n+\n+CatapultLaunchMethod::CatapultLaunchMethod(SuperBlock *parent) :\n+\tSuperBlock(parent, \"CAT\"),\n \tlast_timestamp(hrt_absolute_time()),\n \tintegrator(0.0f),\n \tlaunchDetected(false),\n-\tthreshold_accel(NULL, \"LAUN_CAT_A\", false),\n-\tthreshold_time(NULL, \"LAUN_CAT_T\", false)\n+\tthreshold_accel(this, \"A\"),\n+\tthreshold_time(this, \"T\")\n {\n \n }\n@@ -83,14 +87,11 @@ bool CatapultLaunchMethod::getLaunchDetected()\n \treturn launchDetected;\n }\n \n-void CatapultLaunchMethod::updateParams()\n-{\n-\tthreshold_accel.update();\n-\tthreshold_time.update();\n-}\n \n void CatapultLaunchMethod::reset()\n {\n \tintegrator = 0.0f;\n \tlaunchDetected = false;\n }\n+\n+}"},{"sha":"55c46ff3f3d8a98037059f2aee02f6253c6a945e","filename":"src/lib/launchdetection/CatapultLaunchMethod.h","status":"modified","additions":8,"deletions":3,"changes":11,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/a6d9b7e864334381a99f4438aeea1173229bc2dd/src%2Flib%2Flaunchdetection%2FCatapultLaunchMethod.h","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/a6d9b7e864334381a99f4438aeea1173229bc2dd/src%2Flib%2Flaunchdetection%2FCatapultLaunchMethod.h","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/src%2Flib%2Flaunchdetection%2FCatapultLaunchMethod.h?ref=a6d9b7e864334381a99f4438aeea1173229bc2dd","patch":"@@ -44,17 +44,20 @@\n #include \"LaunchMethod.h\"\n \n #include <drivers/drv_hrt.h>\n+#include <controllib/blocks.hpp>\n #include <controllib/block/BlockParam.hpp>\n \n-class CatapultLaunchMethod : public LaunchMethod\n+namespace launchdetection\n+{\n+\n+class CatapultLaunchMethod : public LaunchMethod, public control::SuperBlock\n {\n public:\n-\tCatapultLaunchMethod();\n+\tCatapultLaunchMethod(SuperBlock *parent);\n \t~CatapultLaunchMethod();\n \n \tvoid update(float accel_x);\n \tbool getLaunchDetected();\n-\tvoid updateParams();\n \tvoid reset();\n \n private:\n@@ -68,3 +71,5 @@ class CatapultLaunchMethod : public LaunchMethod\n };\n \n #endif /* CATAPULTLAUNCHMETHOD_H_ */\n+\n+}"},{"sha":"bf539701b8ce44e731c826ec020c922587115e59","filename":"src/lib/launchdetection/LaunchDetector.cpp","status":"modified","additions":7,"deletions":11,"changes":18,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/a6d9b7e864334381a99f4438aeea1173229bc2dd/src%2Flib%2Flaunchdetection%2FLaunchDetector.cpp","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/a6d9b7e864334381a99f4438aeea1173229bc2dd/src%2Flib%2Flaunchdetection%2FLaunchDetector.cpp","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/src%2Flib%2Flaunchdetection%2FLaunchDetector.cpp?ref=a6d9b7e864334381a99f4438aeea1173229bc2dd","patch":"@@ -42,12 +42,16 @@\n #include \"CatapultLaunchMethod.h\"\n #include <systemlib/err.h>\n \n+namespace launchdetection\n+{\n+\n LaunchDetector::LaunchDetector() :\n-\tlaunchdetection_on(NULL, \"LAUN_ALL_ON\", false),\n-\tthrottlePreTakeoff(NULL, \"LAUN_THR_PRE\", false)\n+\tSuperBlock(NULL, \"LAUN\"),\n+\tlaunchdetection_on(this, \"ALL_ON\"),\n+\tthrottlePreTakeoff(this, \"THR_PRE\")\n {\n \t/* init all detectors */\n-\tlaunchMethods[0] = new CatapultLaunchMethod();\n+\tlaunchMethods[0] = new CatapultLaunchMethod(this);\n \n \n \t/* update all parameters of all detectors */\n@@ -87,12 +91,4 @@ bool LaunchDetector::getLaunchDetected()\n \treturn false;\n }\n \n-void LaunchDetector::updateParams() {\n-\n-\tlaunchdetection_on.update();\n-\tthrottlePreTakeoff.update();\n-\n-\tfor (uint8_t i = 0; i < sizeof(launchMethods)/sizeof(LaunchMethod); i++) {\n-\t\tlaunchMethods[i]->updateParams();\n-\t}\n }"},{"sha":"8066ebab36fd64d3a0c7376df0d4eb51255ebe56","filename":"src/lib/launchdetection/LaunchDetector.h","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/a6d9b7e864334381a99f4438aeea1173229bc2dd/src%2Flib%2Flaunchdetection%2FLaunchDetector.h","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/a6d9b7e864334381a99f4438aeea1173229bc2dd/src%2Flib%2Flaunchdetection%2FLaunchDetector.h","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/src%2Flib%2Flaunchdetection%2FLaunchDetector.h?ref=a6d9b7e864334381a99f4438aeea1173229bc2dd","patch":"@@ -45,10 +45,13 @@\n #include <stdint.h>\n \n #include \"LaunchMethod.h\"\n-\n+#include <controllib/blocks.hpp>\n #include <controllib/block/BlockParam.hpp>\n \n-class __EXPORT LaunchDetector\n+namespace launchdetection\n+{\n+\n+class __EXPORT LaunchDetector : public control::SuperBlock\n {\n public:\n \tLaunchDetector();\n@@ -57,7 +60,6 @@ class __EXPORT LaunchDetector\n \n \tvoid update(float accel_x);\n \tbool getLaunchDetected();\n-\tvoid updateParams();\n \tbool launchDetectionEnabled() { return (bool)launchdetection_on.get(); };\n \n \tfloat getThrottlePreTakeoff() {return throttlePreTakeoff.get(); }\n@@ -72,5 +74,6 @@ class __EXPORT LaunchDetector\n \n };\n \n+}\n \n #endif // LAUNCHDETECTOR_H"},{"sha":"01fa7050e688c0a3117ff93df72a35e616e87532","filename":"src/lib/launchdetection/LaunchMethod.h","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/a6d9b7e864334381a99f4438aeea1173229bc2dd/src%2Flib%2Flaunchdetection%2FLaunchMethod.h","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/a6d9b7e864334381a99f4438aeea1173229bc2dd/src%2Flib%2Flaunchdetection%2FLaunchMethod.h","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/src%2Flib%2Flaunchdetection%2FLaunchMethod.h?ref=a6d9b7e864334381a99f4438aeea1173229bc2dd","patch":"@@ -41,15 +41,20 @@\n #ifndef LAUNCHMETHOD_H_\n #define LAUNCHMETHOD_H_\n \n+namespace launchdetection\n+{\n+\n class LaunchMethod\n {\n public:\n \tvirtual void update(float accel_x) = 0;\n \tvirtual bool getLaunchDetected() = 0;\n-\tvirtual void updateParams() = 0;\n \tvirtual void reset() = 0;\n+\n protected:\n private:\n };\n \n+}\n+\n #endif /* LAUNCHMETHOD_H_ */"},{"sha":"5ade835ff579a1890fbf678f4a52747f02e56d7d","filename":"src/modules/fw_att_control/fw_att_control_main.cpp","status":"modified","additions":45,"deletions":11,"changes":56,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/a6d9b7e864334381a99f4438aeea1173229bc2dd/src%2Fmodules%2Ffw_att_control%2Ffw_att_control_main.cpp","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/a6d9b7e864334381a99f4438aeea1173229bc2dd/src%2Fmodules%2Ffw_att_control%2Ffw_att_control_main.cpp","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/src%2Fmodules%2Ffw_att_control%2Ffw_att_control_main.cpp?ref=a6d9b7e864334381a99f4438aeea1173229bc2dd","patch":"@@ -166,6 +166,15 @@ class FixedwingAttitudeControl\n \t\tfloat airspeed_min;\n \t\tfloat airspeed_trim;\n \t\tfloat airspeed_max;\n+\n+\t\tfloat trim_roll;\n+\t\tfloat trim_pitch;\n+\t\tfloat trim_yaw;\n+\t\tfloat rollsp_offset_deg;\t\t\t/**< Roll Setpoint Offset in deg */\n+\t\tfloat pitchsp_offset_deg;\t\t\t/**< Pitch Setpoint Offset in deg */\n+\t\tfloat rollsp_offset_rad;\t\t\t/**< Roll Setpoint Offset in rad */\n+\t\tfloat pitchsp_offset_rad;\t\t\t/**< Pitch Setpoint Offset in rad */\n+\n \t}\t\t_parameters;\t\t\t/**< local copies of interesting parameters */\n \n \tstruct {\n@@ -197,6 +206,12 @@ class FixedwingAttitudeControl\n \t\tparam_t airspeed_min;\n \t\tparam_t airspeed_trim;\n \t\tparam_t airspeed_max;\n+\n+\t\tparam_t trim_roll;\n+\t\tparam_t trim_pitch;\n+\t\tparam_t trim_yaw;\n+\t\tparam_t rollsp_offset_deg;\n+\t\tparam_t pitchsp_offset_deg;\n \t}\t\t_parameter_handles;\t\t/**< handles for interesting parameters */\n \n \n@@ -335,6 +350,12 @@ FixedwingAttitudeControl::FixedwingAttitudeControl() :\n \n \t_parameter_handles.y_coordinated_min_speed = param_find(\"FW_YCO_VMIN\");\n \n+\t_parameter_handles.trim_roll = param_find(\"TRIM_ROLL\");\n+\t_parameter_handles.trim_pitch = param_find(\"TRIM_PITCH\");\n+\t_parameter_handles.trim_yaw = param_find(\"TRIM_YAW\");\n+\t_parameter_handles.rollsp_offset_deg = param_find(\"FW_RSP_OFF\");\n+\t_parameter_handles.pitchsp_offset_deg = param_find(\"FW_PSP_OFF\");\n+\n \t/* fetch initial parameter values */\n \tparameters_update();\n }\n@@ -395,6 +416,15 @@ FixedwingAttitudeControl::parameters_update()\n \tparam_get(_parameter_handles.airspeed_trim, &(_parameters.airspeed_trim));\n \tparam_get(_parameter_handles.airspeed_max, &(_parameters.airspeed_max));\n \n+\tparam_get(_parameter_handles.trim_roll, &(_parameters.trim_roll));\n+\tparam_get(_parameter_handles.trim_pitch, &(_parameters.trim_pitch));\n+\tparam_get(_parameter_handles.trim_yaw, &(_parameters.trim_yaw));\n+\tparam_get(_parameter_handles.rollsp_offset_deg, &(_parameters.rollsp_offset_deg));\n+\tparam_get(_parameter_handles.pitchsp_offset_deg, &(_parameters.pitchsp_offset_deg));\n+\t_parameters.rollsp_offset_rad = math::radians(_parameters.rollsp_offset_deg);\n+\t_parameters.pitchsp_offset_rad = math::radians(_parameters.pitchsp_offset_deg);\n+\n+\n \t/* pitch control parameters */\n \t_pitch_ctrl.set_time_constant(_parameters.tconst);\n \t_pitch_ctrl.set_k_p(_parameters.p_p);\n@@ -648,13 +678,13 @@ FixedwingAttitudeControl::task_main()\n \t\t\t\tfloat airspeed_scaling = _parameters.airspeed_trim / airspeed;\n \t\t\t\t//warnx(\"aspd scale: %6.2f act scale: %6.2f\", airspeed_scaling, actuator_scaling);\n \n-\t\t\t\tfloat roll_sp = 0.0f;\n-\t\t\t\tfloat pitch_sp = 0.0f;\n+\t\t\t\tfloat roll_sp = _parameters.rollsp_offset_rad;\n+\t\t\t\tfloat pitch_sp = _parameters.pitchsp_offset_rad;\n \t\t\t\tfloat throttle_sp = 0.0f;\n \n \t\t\t\tif (_vcontrol_mode.flag_control_velocity_enabled || _vcontrol_mode.flag_control_position_enabled) {\n-\t\t\t\t\troll_sp = _att_sp.roll_body;\n-\t\t\t\t\tpitch_sp = _att_sp.pitch_body;\n+\t\t\t\t\troll_sp = _att_sp.roll_body + _parameters.rollsp_offset_rad;\n+\t\t\t\t\tpitch_sp = _att_sp.pitch_body + _parameters.pitchsp_offset_rad;\n \t\t\t\t\tthrottle_sp = _att_sp.thrust;\n \n \t\t\t\t\t/* reset integrals where needed */\n@@ -670,9 +700,13 @@ FixedwingAttitudeControl::task_main()\n \t\t\t\t\t * With this mapping the stick angle is a 1:1 representation of\n \t\t\t\t\t * the commanded attitude. If more than 45 degrees are desired,\n \t\t\t\t\t * a scaling parameter can be applied to the remote.\n+\t\t\t\t\t *\n+\t\t\t\t\t * The trim gets subtracted here from the manual setpoint to get\n+\t\t\t\t\t * the intended attitude setpoint. Later, after the rate control step the\n+\t\t\t\t\t * trim is added again to the control signal.\n \t\t\t\t\t */\n-\t\t\t\t\troll_sp = _manual.roll * 0.75f;\n-\t\t\t\t\tpitch_sp = _manual.pitch * 0.75f;\n+\t\t\t\t\troll_sp = (_manual.roll - _parameters.trim_roll) * 0.75f + _parameters.rollsp_offset_rad;\n+\t\t\t\t\tpitch_sp = (_manual.pitch - _parameters.trim_pitch) * 0.75f + _parameters.pitchsp_offset_rad;\n \t\t\t\t\tthrottle_sp = _manual.throttle;\n \t\t\t\t\t_actuators.control[4] = _manual.flaps;\n \n@@ -685,7 +719,7 @@ FixedwingAttitudeControl::task_main()\n \t\t\t\t\tatt_sp.timestamp = hrt_absolute_time();\n \t\t\t\t\tatt_sp.roll_body = roll_sp;\n \t\t\t\t\tatt_sp.pitch_body = pitch_sp;\n-\t\t\t\t\tatt_sp.yaw_body = 0.0f;\n+\t\t\t\t\tatt_sp.yaw_body = 0.0f - _parameters.trim_yaw;\n \t\t\t\t\tatt_sp.thrust = throttle_sp;\n \n \t\t\t\t\t/* lazily publish the setpoint only once available */\n@@ -719,12 +753,12 @@ FixedwingAttitudeControl::task_main()\n \t\t\t\t\t\t\tspeed_body_u, speed_body_v, speed_body_w,\n \t\t\t\t\t\t\t_roll_ctrl.get_desired_rate(), _pitch_ctrl.get_desired_rate()); //runs last, because is depending on output of roll and pitch attitude\n \n-\t\t\t\t\t/* Run attitude RATE controllers which need the desired attitudes from above */\n+\t\t\t\t\t/* Run attitude RATE controllers which need the desired attitudes from above, add trim */\n \t\t\t\t\tfloat roll_u = _roll_ctrl.control_bodyrate(_att.pitch,\n \t\t\t\t\t\t\t_att.rollspeed, _att.yawspeed,\n \t\t\t\t\t\t\t_yaw_ctrl.get_desired_rate(),\n \t\t\t\t\t\t\t_parameters.airspeed_min, _parameters.airspeed_max, airspeed, airspeed_scaling, lock_integrator);\n-\t\t\t\t\t_actuators.control[0] = (isfinite(roll_u)) ? roll_u : 0.0f;\n+\t\t\t\t\t_actuators.control[0] = (isfinite(roll_u)) ? roll_u + _parameters.trim_roll : _parameters.trim_roll;\n \t\t\t\t\tif (!isfinite(roll_u)) {\n \t\t\t\t\t\twarnx(\"roll_u %.4f\", roll_u);\n \t\t\t\t\t}\n@@ -733,7 +767,7 @@ FixedwingAttitudeControl::task_main()\n \t\t\t\t\t\t\t_att.pitchspeed, _att.yawspeed,\n \t\t\t\t\t\t\t_yaw_ctrl.get_desired_rate(),\n \t\t\t\t\t\t\t_parameters.airspeed_min, _parameters.airspeed_max, airspeed, airspeed_scaling, lock_integrator);\n-\t\t\t\t\t_actuators.control[1] = (isfinite(pitch_u)) ? pitch_u : 0.0f;\n+\t\t\t\t\t_actuators.control[1] = (isfinite(pitch_u)) ? pitch_u + _parameters.trim_pitch : _parameters.trim_pitch;\n \t\t\t\t\tif (!isfinite(pitch_u)) {\n \t\t\t\t\t\twarnx(\"pitch_u %.4f, _yaw_ctrl.get_desired_rate() %.4f, airspeed %.4f, airspeed_scaling %.4f, roll_sp %.4f, pitch_sp %.4f, _roll_ctrl.get_desired_rate() %.4f, _pitch_ctrl.get_desired_rate() %.4f att_sp.roll_body %.4f\",\n \t\t\t\t\t\t\t\tpitch_u, _yaw_ctrl.get_desired_rate(), airspeed, airspeed_scaling, roll_sp, pitch_sp, _roll_ctrl.get_desired_rate(), _pitch_ctrl.get_desired_rate(), _att_sp.roll_body);\n@@ -743,7 +777,7 @@ FixedwingAttitudeControl::task_main()\n \t\t\t\t\t\t\t_att.pitchspeed, _att.yawspeed,\n \t\t\t\t\t\t\t_pitch_ctrl.get_desired_rate(),\n \t\t\t\t\t\t\t_parameters.airspeed_min, _parameters.airspeed_max, airspeed, airspeed_scaling, lock_integrator);\n-\t\t\t\t\t_actuators.control[2] = (isfinite(yaw_u)) ? yaw_u : 0.0f;\n+\t\t\t\t\t_actuators.control[2] = (isfinite(yaw_u)) ? yaw_u + _parameters.trim_yaw : _parameters.trim_yaw;\n \t\t\t\t\tif (!isfinite(yaw_u)) {\n \t\t\t\t\t\twarnx(\"yaw_u %.4f\", yaw_u);\n \t\t\t\t\t}"},{"sha":"c80a44f2a5a9b911490961322803cda7ed55767c","filename":"src/modules/fw_att_control/fw_att_control_params.c","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/a6d9b7e864334381a99f4438aeea1173229bc2dd/src%2Fmodules%2Ffw_att_control%2Ffw_att_control_params.c","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/a6d9b7e864334381a99f4438aeea1173229bc2dd/src%2Fmodules%2Ffw_att_control%2Ffw_att_control_params.c","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/src%2Fmodules%2Ffw_att_control%2Ffw_att_control_params.c?ref=a6d9b7e864334381a99f4438aeea1173229bc2dd","patch":"@@ -176,3 +176,13 @@ PARAM_DEFINE_FLOAT(FW_AIRSPD_TRIM, 20.0f);\n // @Description\t\tIf the airspeed is above this value the TECS controller will try to decrease airspeed more aggressively\n // @Range\t\t0.0 to 30\n PARAM_DEFINE_FLOAT(FW_AIRSPD_MAX, 50.0f);\n+\n+// @DisplayName\t\tRoll Setpoint Offset\n+// @Description\t\tAn airframe specific offset of the roll setpoint in degrees, the value is added to the roll setpoint and should correspond to the typical cruise speed of the airframe\n+// @Range\t\t-90.0 to 90.0\n+PARAM_DEFINE_FLOAT(FW_RSP_OFF, 0.0f);\n+\n+// @DisplayName\t\tPitch Setpoint Offset\n+// @Description\t\tAn airframe specific offset of the pitch setpoint in degrees, the value is added to the pitch setpoint and should correspond to the typical cruise speed of the airframe\n+// @Range\t\t-90.0 to 90.0\n+PARAM_DEFINE_FLOAT(FW_PSP_OFF, 0.0f);"},{"sha":"8ba8f2ccbff7a6f50f9d35c480138bfe7ec55c80","filename":"src/modules/fw_pos_control_l1/fw_pos_control_l1_main.cpp","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/a6d9b7e864334381a99f4438aeea1173229bc2dd/src%2Fmodules%2Ffw_pos_control_l1%2Ffw_pos_control_l1_main.cpp","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/a6d9b7e864334381a99f4438aeea1173229bc2dd/src%2Fmodules%2Ffw_pos_control_l1%2Ffw_pos_control_l1_main.cpp","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/src%2Fmodules%2Ffw_pos_control_l1%2Ffw_pos_control_l1_main.cpp?ref=a6d9b7e864334381a99f4438aeea1173229bc2dd","patch":"@@ -186,7 +186,7 @@ class FixedwingPositionControl\n \tfloat target_bearing;\n \n \t/* Launch detection */\n-\tLaunchDetector launchDetector;\n+\tlaunchdetection::LaunchDetector launchDetector;\n \n \t/* throttle and airspeed states */\n \tfloat _airspeed_error;\t\t\t\t///< airspeed error to setpoint in m/s\n@@ -989,6 +989,7 @@ FixedwingPositionControl::control_position(const math::Vector<2> &current_positi\n \t\t\t\t} else\t{\n \t\t\t\t\t/* no takeoff detection --> fly */\n \t\t\t\t\tlaunch_detected = true;\n+\t\t\t\t\twarnx(\"launchdetection off\");\n \t\t\t\t}\n \t\t\t}\n "},{"sha":"f452a85f7c36aa8753d73da20b076ac8572a88c0","filename":"src/modules/navigator/geofence.cpp","status":"modified","additions":4,"deletions":7,"changes":11,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/a6d9b7e864334381a99f4438aeea1173229bc2dd/src%2Fmodules%2Fnavigator%2Fgeofence.cpp","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/a6d9b7e864334381a99f4438aeea1173229bc2dd/src%2Fmodules%2Fnavigator%2Fgeofence.cpp","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/src%2Fmodules%2Fnavigator%2Fgeofence.cpp?ref=a6d9b7e864334381a99f4438aeea1173229bc2dd","patch":"@@ -55,11 +55,13 @@\n #endif\n static const int ERROR = -1;\n \n-Geofence::Geofence() : _fence_pub(-1),\n+Geofence::Geofence() :\n+\t\tSuperBlock(NULL, \"GF\"),\n+\t\t_fence_pub(-1),\n \t\t_altitude_min(0),\n \t\t_altitude_max(0),\n \t\t_verticesCount(0),\n-\t\tparam_geofence_on(NULL, \"GF_ON\", false)\n+\t\tparam_geofence_on(this, \"ON\")\n {\n \t/* Load initial params */\n \tupdateParams();\n@@ -292,8 +294,3 @@ int Geofence::clearDm()\n {\n \tdm_clear(DM_KEY_FENCE_POINTS);\n }\n-\n-void Geofence::updateParams()\n-{\n-\tparam_geofence_on.update();\n-}"},{"sha":"9628b72711755122137ddc5f5912baa5b3af95a9","filename":"src/modules/navigator/geofence.h","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/a6d9b7e864334381a99f4438aeea1173229bc2dd/src%2Fmodules%2Fnavigator%2Fgeofence.h","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/a6d9b7e864334381a99f4438aeea1173229bc2dd/src%2Fmodules%2Fnavigator%2Fgeofence.h","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/src%2Fmodules%2Fnavigator%2Fgeofence.h?ref=a6d9b7e864334381a99f4438aeea1173229bc2dd","patch":"@@ -41,11 +41,13 @@\n #define GEOFENCE_H_\n \n #include <uORB/topics/fence.h>\n+#include <controllib/blocks.hpp>\n #include <controllib/block/BlockParam.hpp>\n \n #define GEOFENCE_FILENAME \"/fs/microsd/etc/geofence.txt\"\n \n-class Geofence {\n+class Geofence : public control::SuperBlock\n+{\n private:\n \torb_advert_t\t_fence_pub;\t\t\t/**< publish fence topic */\n \n@@ -85,8 +87,6 @@ class Geofence {\n \tint loadFromFile(const char *filename);\n \n \tbool isEmpty() {return _verticesCount == 0;}\n-\n-\tvoid updateParams();\n };\n \n "}]}