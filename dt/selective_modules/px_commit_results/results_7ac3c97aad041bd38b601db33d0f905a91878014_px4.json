{"sha":"7ac3c97aad041bd38b601db33d0f905a91878014","node_id":"MDY6Q29tbWl0NTI5ODc5MDo3YWMzYzk3YWFkMDQxYmQzOGI2MDFkYjMzZDBmOTA1YTkxODc4MDE0","commit":{"author":{"name":"barzanisar","email":"nisarb@student.ethz.ch","date":"2018-02-22T16:41:02Z"},"committer":{"name":"Lorenz Meier","email":"lorenz@px4.io","date":"2018-04-05T16:11:03Z"},"message":"Improve the Crazyflie MAVLink tunnel to increase efficiency\n\nThis change fragments MAVLink packets more efficiently and therefore increases the net throughput. This in turn makes the connection significantly more stable and the Crazyflie experience overall more usable.","tree":{"sha":"0a628aaa5718a5e1e766192e032bdc29ed3a0b32","url":"https://api.github.com/repos/PX4/PX4-Autopilot/git/trees/0a628aaa5718a5e1e766192e032bdc29ed3a0b32"},"url":"https://api.github.com/repos/PX4/PX4-Autopilot/git/commits/7ac3c97aad041bd38b601db33d0f905a91878014","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/7ac3c97aad041bd38b601db33d0f905a91878014","html_url":"https://github.com/PX4/PX4-Autopilot/commit/7ac3c97aad041bd38b601db33d0f905a91878014","comments_url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/7ac3c97aad041bd38b601db33d0f905a91878014/comments","author":null,"committer":{"login":"LorenzMeier","id":1208119,"node_id":"MDQ6VXNlcjEyMDgxMTk=","avatar_url":"https://avatars.githubusercontent.com/u/1208119?v=4","gravatar_id":"","url":"https://api.github.com/users/LorenzMeier","html_url":"https://github.com/LorenzMeier","followers_url":"https://api.github.com/users/LorenzMeier/followers","following_url":"https://api.github.com/users/LorenzMeier/following{/other_user}","gists_url":"https://api.github.com/users/LorenzMeier/gists{/gist_id}","starred_url":"https://api.github.com/users/LorenzMeier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LorenzMeier/subscriptions","organizations_url":"https://api.github.com/users/LorenzMeier/orgs","repos_url":"https://api.github.com/users/LorenzMeier/repos","events_url":"https://api.github.com/users/LorenzMeier/events{/privacy}","received_events_url":"https://api.github.com/users/LorenzMeier/received_events","type":"User","site_admin":false},"parents":[{"sha":"d6a86dfa56fc2d7ed566b0c065262acd1af91878","url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/d6a86dfa56fc2d7ed566b0c065262acd1af91878","html_url":"https://github.com/PX4/PX4-Autopilot/commit/d6a86dfa56fc2d7ed566b0c065262acd1af91878"}],"stats":{"total":56,"additions":34,"deletions":22},"files":[{"sha":"c30fa72cf707f07ea10dcba6fa44ef341f1fdb36","filename":"platforms/nuttx/nuttx-configs/crazyflie/nsh/defconfig","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/7ac3c97aad041bd38b601db33d0f905a91878014/platforms%2Fnuttx%2Fnuttx-configs%2Fcrazyflie%2Fnsh%2Fdefconfig","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/7ac3c97aad041bd38b601db33d0f905a91878014/platforms%2Fnuttx%2Fnuttx-configs%2Fcrazyflie%2Fnsh%2Fdefconfig","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/platforms%2Fnuttx%2Fnuttx-configs%2Fcrazyflie%2Fnsh%2Fdefconfig?ref=7ac3c97aad041bd38b601db33d0f905a91878014","patch":"@@ -931,7 +931,7 @@ CONFIG_DEV_FIFO_SIZE=1024\n # CONFIG_POWER is not set\n # CONFIG_SENSORS is not set\n CONFIG_SERIAL=y\n-# CONFIG_DEV_LOWCONSOLE is not set\n+CONFIG_DEV_LOWCONSOLE=y\n CONFIG_SERIAL_REMOVABLE=y\n # CONFIG_SERIAL_CONSOLE is not set\n # CONFIG_16550_UART is not set"},{"sha":"2000b7e81aecad9b639d3f4fe2ef96ba3a0cdbbf","filename":"src/drivers/boards/crazyflie/board_config.h","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/7ac3c97aad041bd38b601db33d0f905a91878014/src%2Fdrivers%2Fboards%2Fcrazyflie%2Fboard_config.h","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/7ac3c97aad041bd38b601db33d0f905a91878014/src%2Fdrivers%2Fboards%2Fcrazyflie%2Fboard_config.h","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/src%2Fdrivers%2Fboards%2Fcrazyflie%2Fboard_config.h?ref=7ac3c97aad041bd38b601db33d0f905a91878014","patch":"@@ -168,7 +168,7 @@\n #define PX4_PWM_ALTERNATE_RANGES\n #define PWM_LOWEST_MIN 0\n #define PWM_MOTOR_OFF\t0\n-#define PWM_DEFAULT_MIN 0\n+#define PWM_DEFAULT_MIN 20\n #define PWM_HIGHEST_MIN 0\n #define PWM_HIGHEST_MAX 255\n #define PWM_DEFAULT_MAX 255"},{"sha":"d3300a735572aa00056e8cff4aff9aa7c0c42643","filename":"src/modules/syslink/syslink_bridge.cpp","status":"modified","additions":22,"deletions":13,"changes":35,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/7ac3c97aad041bd38b601db33d0f905a91878014/src%2Fmodules%2Fsyslink%2Fsyslink_bridge.cpp","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/7ac3c97aad041bd38b601db33d0f905a91878014/src%2Fmodules%2Fsyslink%2Fsyslink_bridge.cpp","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/src%2Fmodules%2Fsyslink%2Fsyslink_bridge.cpp?ref=7ac3c97aad041bd38b601db33d0f905a91878014","patch":"@@ -48,8 +48,10 @@ SyslinkBridge::SyslinkBridge(Syslink *link) :\n \t_link(link),\n \t_readbuffer(16, sizeof(crtp_message_t))\n {\n-\n-\n+\t_msg_to_send.header = 0;\n+\t_msg_to_send.size = sizeof(_msg_to_send.header);\n+\t_msg_to_send.port = CRTP_PORT_MAVLINK;\n+\t_msg_to_send_size_remaining = CRTP_MAX_DATA_SIZE - 1;\n }\n \n SyslinkBridge::~SyslinkBridge()\n@@ -111,21 +113,28 @@ SyslinkBridge::read(struct file *filp, char *buffer, size_t buflen)\n ssize_t\n SyslinkBridge::write(struct file *filp, const char *buffer, size_t buflen)\n {\n-\tcrtp_message_t msg;\n-\n-\t// Queue and send next time we get a RAW radio packet\n-\tint remaining = buflen;\n+\tint buflen_rem = buflen;\n \n-\twhile (remaining > 0) {\n-\t\tint datasize = MIN(remaining, CRTP_MAX_DATA_SIZE);\n-\t\tmsg.size = datasize + sizeof(msg.header);\n-\t\tmsg.port = CRTP_PORT_MAVLINK;\n-\t\tmemcpy(&msg.data, buffer, datasize);\n+\twhile (buflen_rem > 0) {\n \n-\t\t_link->_writebuffer.force(&msg, sizeof(crtp_message_t));\n+\t\tint datasize = MIN(_msg_to_send_size_remaining, buflen_rem);\n+\t\t_msg_to_send.size += datasize;\n+\t\tmemcpy(&_msg_to_send.data[CRTP_MAX_DATA_SIZE - 1 - _msg_to_send_size_remaining], buffer, datasize);\n \n \t\tbuffer += datasize;\n-\t\tremaining -= datasize;\n+\t\t_msg_to_send_size_remaining -= datasize;\n+\t\tbuflen_rem -= datasize;\n+\n+\n+\t\tif (_msg_to_send_size_remaining == 0) {\n+\n+\t\t\tif (_link->_writebuffer.force(&_msg_to_send, sizeof(crtp_message_t))) {\n+\t\t\t\tPX4_WARN(\"write buffer overflow\");\n+\t\t\t}\n+\n+\t\t\t_msg_to_send.size = sizeof(_msg_to_send.header);\n+\t\t\t_msg_to_send_size_remaining = CRTP_MAX_DATA_SIZE - 1;\n+\t\t}\n \t}\n \n \treturn buflen;"},{"sha":"69b6a41fa502d641cfbf370ce0fd96094eba2a91","filename":"src/modules/syslink/syslink_main.cpp","status":"modified","additions":8,"deletions":7,"changes":15,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/7ac3c97aad041bd38b601db33d0f905a91878014/src%2Fmodules%2Fsyslink%2Fsyslink_main.cpp","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/7ac3c97aad041bd38b601db33d0f905a91878014/src%2Fmodules%2Fsyslink%2Fsyslink_main.cpp","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/src%2Fmodules%2Fsyslink%2Fsyslink_main.cpp?ref=7ac3c97aad041bd38b601db33d0f905a91878014","patch":"@@ -47,7 +47,6 @@\n #include <string.h>\n #include <fcntl.h>\n #include <sys/ioctl.h>\n-#include <poll.h>\n #include <termios.h>\n #include <sys/types.h>\n #include <sys/stat.h>\n@@ -70,6 +69,7 @@\n #include \"drv_deck.h\"\n \n \n+\n __BEGIN_DECLS\n extern void led_init(void);\n extern void led_on(int led);\n@@ -254,7 +254,7 @@ Syslink::open_serial(const char *dev)\n \ttcgetattr(fd, &config);\n \n \t// clear ONLCR flag (which appends a CR for every LF)\n-\tconfig.c_oflag &= 0;\n+\tconfig.c_oflag = 0;\n \tconfig.c_lflag &= ~(ECHO | ECHONL | ICANON | IEXTEN | ISIG);\n \n \t// Disable hardware flow control\n@@ -336,15 +336,16 @@ Syslink::task_main()\n \n \tsyslink_parse_init(&state);\n \n-\t// setup initial parameters\n+\t//setup initial parameters\n \tupdate_params(true);\n \n \twhile (_task_running) {\n-\t\tint poll_ret = px4_poll(fds, 2, 1000);\n+\t\tint poll_ret = px4_poll(fds, 2, 500);\n \n \t\t/* handle the poll result */\n \t\tif (poll_ret == 0) {\n-\t\t\t/* this means none of our providers is giving us data */\n+\t\t\t/* timeout: this means none of our providers is giving us data */\n+\n \t\t} else if (poll_ret < 0) {\n \t\t\t/* this is seriously bad - should be an emergency */\n \t\t\tif (error_counter < 10 || error_counter % 50 == 0) {\n@@ -374,6 +375,7 @@ Syslink::task_main()\n \t\t\t\tupdate_params(false);\n \t\t\t}\n \t\t}\n+\n \t}\n \n \tclose(_fd);\n@@ -460,7 +462,7 @@ Syslink::handle_message(syslink_message_t *msg)\n \t\tPX4_INFO(\"GOT %d\", msg->type);\n \t}\n \n-\t// Send queued messages\n+\t//Send queued messages\n \tif (!_queue.empty()) {\n \t\t_queue.get(msg, sizeof(syslink_message_t));\n \t\tsend_message(msg);\n@@ -706,7 +708,6 @@ Syslink::send_bytes(const void *data, size_t len)\n {\n \t// TODO: This could be way more efficient\n \t//       Using interrupts/DMA/polling would be much better\n-\n \tfor (size_t i = 0; i < len; i++) {\n \t\t// Block until we can send a byte\n \t\twhile (px4_arch_gpioread(GPIO_NRF_TXEN)) ;"},{"sha":"b335396dd59fe43fe4af7d1cfd1dd41b51a8dd02","filename":"src/modules/syslink/syslink_main.h","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/7ac3c97aad041bd38b601db33d0f905a91878014/src%2Fmodules%2Fsyslink%2Fsyslink_main.h","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/7ac3c97aad041bd38b601db33d0f905a91878014/src%2Fmodules%2Fsyslink%2Fsyslink_main.h","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/src%2Fmodules%2Fsyslink%2Fsyslink_main.h?ref=7ac3c97aad041bd38b601db33d0f905a91878014","patch":"@@ -181,6 +181,8 @@ class SyslinkBridge : public device::CDev\n \t// Stores data that was received from syslink but not yet read by another driver\n \tringbuffer::RingBuffer _readbuffer;\n \n+\tcrtp_message_t _msg_to_send;\n+\tint _msg_to_send_size_remaining;\n \n };\n "}]}