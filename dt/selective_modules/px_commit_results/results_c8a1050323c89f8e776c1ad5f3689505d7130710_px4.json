{"sha":"c8a1050323c89f8e776c1ad5f3689505d7130710","node_id":"MDY6Q29tbWl0NTI5ODc5MDpjOGExMDUwMzIzYzg5ZjhlNzc2YzFhZDVmMzY4OTUwNWQ3MTMwNzEw","commit":{"author":{"name":"Simone Guscetti","email":"simone@px4.io","date":"2018-01-16T16:54:43Z"},"committer":{"name":"Beat KÃ¼ng","email":"beat-kueng@gmx.net","date":"2018-01-19T10:55:39Z"},"message":"libled: allow infinite flashing mode","tree":{"sha":"fc18865f86486d89aeaa74da79b791d01060ebde","url":"https://api.github.com/repos/PX4/PX4-Autopilot/git/trees/fc18865f86486d89aeaa74da79b791d01060ebde"},"url":"https://api.github.com/repos/PX4/PX4-Autopilot/git/commits/c8a1050323c89f8e776c1ad5f3689505d7130710","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/c8a1050323c89f8e776c1ad5f3689505d7130710","html_url":"https://github.com/PX4/PX4-Autopilot/commit/c8a1050323c89f8e776c1ad5f3689505d7130710","comments_url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/c8a1050323c89f8e776c1ad5f3689505d7130710/comments","author":null,"committer":{"login":"bkueng","id":281593,"node_id":"MDQ6VXNlcjI4MTU5Mw==","avatar_url":"https://avatars.githubusercontent.com/u/281593?v=4","gravatar_id":"","url":"https://api.github.com/users/bkueng","html_url":"https://github.com/bkueng","followers_url":"https://api.github.com/users/bkueng/followers","following_url":"https://api.github.com/users/bkueng/following{/other_user}","gists_url":"https://api.github.com/users/bkueng/gists{/gist_id}","starred_url":"https://api.github.com/users/bkueng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bkueng/subscriptions","organizations_url":"https://api.github.com/users/bkueng/orgs","repos_url":"https://api.github.com/users/bkueng/repos","events_url":"https://api.github.com/users/bkueng/events{/privacy}","received_events_url":"https://api.github.com/users/bkueng/received_events","type":"User","site_admin":false},"parents":[{"sha":"bda929bebb9f158ea7c52bb70d73043e64cda017","url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/bda929bebb9f158ea7c52bb70d73043e64cda017","html_url":"https://github.com/PX4/PX4-Autopilot/commit/bda929bebb9f158ea7c52bb70d73043e64cda017"}],"stats":{"total":13,"additions":6,"deletions":7},"files":[{"sha":"1a0bb6f06bbd27acf0da0ce0fa4edef42e42e55d","filename":"msg/led_control.msg","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/c8a1050323c89f8e776c1ad5f3689505d7130710/msg%2Fled_control.msg","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/c8a1050323c89f8e776c1ad5f3689505d7130710/msg%2Fled_control.msg","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/msg%2Fled_control.msg?ref=c8a1050323c89f8e776c1ad5f3689505d7130710","patch":"@@ -29,5 +29,5 @@ uint8 led_mask # bitmask which LED(s) to control, set to 0xff for all\n uint8 color # see COLOR_*\n uint8 mode # see MODE_*\n uint8 num_blinks # how many times to blink (number of on-off cycles if mode is one of MODE_BLINK_*) . Set to 0 for infinite\n-                 # in MODE_FLASH it is the number of cycles (infinite is not possible)\n+                 # in MODE_FLASH it is the number of cycles. Max number of blinks: 122 and max number of flash cycles: 20\n uint8 priority # priority: higher priority events will override current lower priority events (see MAX_PRIORITY)"},{"sha":"120a8eb4f916ca248bfcc340708ffa178d0064b8","filename":"src/lib/led/led.cpp","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/c8a1050323c89f8e776c1ad5f3689505d7130710/src%2Flib%2Fled%2Fled.cpp","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/c8a1050323c89f8e776c1ad5f3689505d7130710/src%2Flib%2Fled%2Fled.cpp","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/src%2Flib%2Fled%2Fled.cpp?ref=c8a1050323c89f8e776c1ad5f3689505d7130710","patch":"@@ -140,14 +140,13 @@ int LedController::update(LedControlData &control_data)\n \t\t\t\tif ((_states[i].current_blinking_time += blink_delta_t) > current_blink_duration) {\n \t\t\t\t\t_states[i].current_blinking_time -= current_blink_duration;\n \n-\t\t\t\t\tif (cur_data.blink_times_left == 254) {\n-\t\t\t\t\t\t// handle toggling for infinite case: toggle between 254 and 255\n+\t\t\t\t\tif (cur_data.blink_times_left == 246) {\n+\t\t\t\t\t\t// handle toggling for infinite case: decrease between 255 and 246\n+\t\t\t\t\t\t// In order to handle the flash mode infinite case it needs a\n+\t\t\t\t\t\t// total of 10 steps.\n \t\t\t\t\t\tcur_data.blink_times_left = 255;\n \t\t\t\t\t\t++num_blinking_do_not_change_state;\n \n-\t\t\t\t\t} else if (cur_data.blink_times_left == 255) {\n-\t\t\t\t\t\tcur_data.blink_times_left = 254;\n-\n \t\t\t\t\t} else if (--cur_data.blink_times_left == 0) {\n \t\t\t\t\t\tcur_data.mode = led_control_s::MODE_DISABLED;\n \t\t\t\t\t\t_states[i].current_blinking_time = 0;"},{"sha":"e6cc84482b634dd4e8b8963dbc6c907ce203e3ff","filename":"src/lib/led/led.h","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/c8a1050323c89f8e776c1ad5f3689505d7130710/src%2Flib%2Fled%2Fled.h","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/c8a1050323c89f8e776c1ad5f3689505d7130710/src%2Flib%2Fled%2Fled.h","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/src%2Flib%2Fled%2Fled.h?ref=c8a1050323c89f8e776c1ad5f3689505d7130710","patch":"@@ -158,7 +158,7 @@ class LedController\n \n \t\t\tif (priority[next_priority].blink_times_left == 0) {\n \t\t\t\t// handle infinite case\n-\t\t\t\tpriority[next_priority].blink_times_left = 254;\n+\t\t\t\tpriority[next_priority].blink_times_left = 246;\n \t\t\t}\n \n "}]}