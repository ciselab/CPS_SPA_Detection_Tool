{"sha":"f49fd2acc75608bc9962897435ab84f4d57e35c6","node_id":"MDY6Q29tbWl0NTI5ODc5MDpmNDlmZDJhY2M3NTYwOGJjOTk2Mjg5NzQzNWFiODRmNGQ1N2UzNWM2","commit":{"author":{"name":"DanielePettenuzzo","email":"daniele@px4.io","date":"2018-05-09T08:34:08Z"},"committer":{"name":"Beat KÃ¼ng","email":"beat-kueng@gmx.net","date":"2018-05-22T10:21:45Z"},"message":"crazyflie: increase imu reading rate","tree":{"sha":"a0660dc8b1620046144a7a6241b159541a4b3679","url":"https://api.github.com/repos/PX4/PX4-Autopilot/git/trees/a0660dc8b1620046144a7a6241b159541a4b3679"},"url":"https://api.github.com/repos/PX4/PX4-Autopilot/git/commits/f49fd2acc75608bc9962897435ab84f4d57e35c6","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/f49fd2acc75608bc9962897435ab84f4d57e35c6","html_url":"https://github.com/PX4/PX4-Autopilot/commit/f49fd2acc75608bc9962897435ab84f4d57e35c6","comments_url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/f49fd2acc75608bc9962897435ab84f4d57e35c6/comments","author":{"login":"DanielePettenuzzo","id":35664507,"node_id":"MDQ6VXNlcjM1NjY0NTA3","avatar_url":"https://avatars.githubusercontent.com/u/35664507?v=4","gravatar_id":"","url":"https://api.github.com/users/DanielePettenuzzo","html_url":"https://github.com/DanielePettenuzzo","followers_url":"https://api.github.com/users/DanielePettenuzzo/followers","following_url":"https://api.github.com/users/DanielePettenuzzo/following{/other_user}","gists_url":"https://api.github.com/users/DanielePettenuzzo/gists{/gist_id}","starred_url":"https://api.github.com/users/DanielePettenuzzo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DanielePettenuzzo/subscriptions","organizations_url":"https://api.github.com/users/DanielePettenuzzo/orgs","repos_url":"https://api.github.com/users/DanielePettenuzzo/repos","events_url":"https://api.github.com/users/DanielePettenuzzo/events{/privacy}","received_events_url":"https://api.github.com/users/DanielePettenuzzo/received_events","type":"User","site_admin":false},"committer":{"login":"bkueng","id":281593,"node_id":"MDQ6VXNlcjI4MTU5Mw==","avatar_url":"https://avatars.githubusercontent.com/u/281593?v=4","gravatar_id":"","url":"https://api.github.com/users/bkueng","html_url":"https://github.com/bkueng","followers_url":"https://api.github.com/users/bkueng/followers","following_url":"https://api.github.com/users/bkueng/following{/other_user}","gists_url":"https://api.github.com/users/bkueng/gists{/gist_id}","starred_url":"https://api.github.com/users/bkueng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bkueng/subscriptions","organizations_url":"https://api.github.com/users/bkueng/orgs","repos_url":"https://api.github.com/users/bkueng/repos","events_url":"https://api.github.com/users/bkueng/events{/privacy}","received_events_url":"https://api.github.com/users/bkueng/received_events","type":"User","site_admin":false},"parents":[{"sha":"2359b73d1ffe508880546d8030bb893d3e8dbb8c","url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/2359b73d1ffe508880546d8030bb893d3e8dbb8c","html_url":"https://github.com/PX4/PX4-Autopilot/commit/2359b73d1ffe508880546d8030bb893d3e8dbb8c"}],"stats":{"total":108,"additions":71,"deletions":37},"files":[{"sha":"315108a6af9193d4783febcfe00863369cf67016","filename":"ROMFS/px4fmu_common/init.d/rc.sensors","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/f49fd2acc75608bc9962897435ab84f4d57e35c6/ROMFS%2Fpx4fmu_common%2Finit.d%2Frc.sensors","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/f49fd2acc75608bc9962897435ab84f4d57e35c6/ROMFS%2Fpx4fmu_common%2Finit.d%2Frc.sensors","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/ROMFS%2Fpx4fmu_common%2Finit.d%2Frc.sensors?ref=f49fd2acc75608bc9962897435ab84f4d57e35c6","patch":"@@ -252,6 +252,11 @@ then\n \n \t# I2C bypass of mpu\n \tlps25h start\n+\n+\t# Optical flow deck\n+\tvl53lxx start\n+\t#pmw3901 start\n+\n fi\n \n if ver hwcmp AEROFC_V1"},{"sha":"e5a77a0c324465f196834cf48e142572cfe8cc10","filename":"ROMFS/px4fmu_common/init.d/rcS","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/f49fd2acc75608bc9962897435ab84f4d57e35c6/ROMFS%2Fpx4fmu_common%2Finit.d%2FrcS","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/f49fd2acc75608bc9962897435ab84f4d57e35c6/ROMFS%2Fpx4fmu_common%2Finit.d%2FrcS","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/ROMFS%2Fpx4fmu_common%2Finit.d%2FrcS?ref=f49fd2acc75608bc9962897435ab84f4d57e35c6","patch":"@@ -988,10 +988,6 @@ fi\n \n \tsh /etc/init.d/rc.logging\n \n-\t#vl53lxx start\n-\t#pmw3901 start\n-\t\n-\n # End of autostart\n fi\n "},{"sha":"25a9f1daa71ddc101ef16a13368f0df0eff20007","filename":"src/drivers/distance_sensor/vl53lxx/vl53lxx.cpp","status":"modified","additions":40,"deletions":25,"changes":65,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/f49fd2acc75608bc9962897435ab84f4d57e35c6/src%2Fdrivers%2Fdistance_sensor%2Fvl53lxx%2Fvl53lxx.cpp","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/f49fd2acc75608bc9962897435ab84f4d57e35c6/src%2Fdrivers%2Fdistance_sensor%2Fvl53lxx%2Fvl53lxx.cpp","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/src%2Fdrivers%2Fdistance_sensor%2Fvl53lxx%2Fvl53lxx.cpp?ref=f49fd2acc75608bc9962897435ab84f4d57e35c6","patch":"@@ -73,10 +73,10 @@\n #include <board_config.h>\n \n /* Configuration Constants */\n-#ifdef PX4_I2C_BUS_EXPANSION3\n-#define VL53LXX_BUS \t\t\t\tPX4_I2C_BUS_EXPANSION3\t\t// I2C port (I2C4) on fmu-v5\n+#ifdef PX4_I2C_BUS_EXPANSION\n+#define VL53LXX_BUS \t\t\t\tPX4_I2C_BUS_EXPANSION\n #else\n-#define VL53LXX_BUS \t\t\t\tPX4_I2C_BUS_EXPANSION \t\t// I2C on all others\n+#define VL53LXX_BUS \t\t\t\t0\n #endif\n \n #define VL53LXX_BASEADDR      \t\t0b0101001 \t\t\t\t\t// 7-bit address \n@@ -101,8 +101,8 @@\n #define SYSTEM_INTERRUPT_CLEAR_REG\t\t\t\t\t\t\t0x0B\n #define RESULT_RANGE_STATUS_REG\t\t\t\t\t\t\t\t0x14\n \n-#define VL53LXX_CONVERSION_INTERVAL \t\t\t\t\t\t1000 \t/*  1ms */\n-#define VL53LXX_SAMPLE_RATE\t\t\t\t\t\t\t\t\t20000 \t/* 20ms */\n+#define VL53LXX_CONVERSION_INTERVAL \t\t\t\t\t\t1000 \t\t/*  1ms */\n+#define VL53LXX_SAMPLE_RATE\t\t\t\t\t\t\t\t\t50000 \t\t/* 50ms */\n \n #define VL53LXX_MAX_RANGING_DISTANCE\t\t\t\t\t\t2.0f\n #define VL53LXX_MIN_RANGING_DISTANCE\t\t\t\t\t\t0.0f\n@@ -138,6 +138,7 @@ class VL53LXX : public device::I2C\n \tint\t\t\t\t\t\t\t_measure_ticks;\n \tbool \t\t\t\t\t\t_collect_phase;\n \tbool \t\t\t\t\t\t_new_measurement;\n+\tbool \t\t\t\t\t\t_measurement_started;\n \n \tint\t\t\t\t\t\t\t_class_instance;\n \tint\t\t\t\t\t\t\t_orb_class_instance;\n@@ -200,21 +201,22 @@ class VL53LXX : public device::I2C\n extern \"C\" __EXPORT int vl53lxx_main(int argc, char *argv[]);\n \n VL53LXX::VL53LXX(uint8_t rotation, int bus, int address) :\n-\tI2C(\"VL53LXX\", VL53LXX_DEVICE_PATH, bus, address, 400000),\t\t// 400 kHz only for Crazyflie (other boards use max 100 kHz)\n+\tI2C(\"VL53LXX\", VL53LXX_DEVICE_PATH, bus, address, 400000),\n \t_rotation(rotation),\n \t_reports(nullptr),\n \t_sensor_ok(false),\n \t_measure_ticks(0),\n \t_collect_phase(false),\n \t_new_measurement(true),\n+\t_measurement_started(false),\n \t_class_instance(-1),\n \t_orb_class_instance(-1),\n \t_distance_sensor_topic(nullptr),\n-\t_sample_perf(perf_alloc(PC_ELAPSED, \"tr1_read\")),\n-\t_comms_errors(perf_alloc(PC_COUNT, \"tr1_com_err\"))\n+\t_sample_perf(perf_alloc(PC_ELAPSED, \"vl53lxx_read\")),\n+\t_comms_errors(perf_alloc(PC_COUNT, \"vl53lxx_com_err\"))\n {\n \t// up the retries since the device misses the first measure attempts\n-\tI2C::_retries = 3;\n+\tI2C::_retries = 2;\n \n \t// enable debug() calls\n \t_debug_enabled = false;\n@@ -233,6 +235,10 @@ VL53LXX::~VL53LXX()\n \t\tdelete _reports;\n \t}\n \n+\tif (_distance_sensor_topic != nullptr) {\n+\t\torb_unadvertise(_distance_sensor_topic);\n+\t}\n+\n \tif (_class_instance != -1) {\n \t\tunregister_class_devname(RANGE_FINDER_BASE_DEVICE_PATH, _class_instance);\n \t}\n@@ -469,9 +475,6 @@ VL53LXX::readRegister(uint8_t reg_address, uint8_t &value)\n \t\treturn ret;\n \t}\n \n-\t/* wait for it to complete */\n-\tusleep(VL53LXX_CONVERSION_INTERVAL);\n-\n \t/* read from the sensor */\n \tret = transfer(nullptr, 0, &val, 1);\n \n@@ -501,9 +504,6 @@ VL53LXX::readRegisterMulti(uint8_t reg_address, uint8_t *value, uint8_t length)\n \t\treturn ret;\n \t}\n \n-\t/* wait for it to complete */\n-\tusleep(VL53LXX_CONVERSION_INTERVAL);\n-\n \t/* read from the sensor */\n \tret = transfer(nullptr, 0, &val[0], length);\n \n@@ -597,17 +597,37 @@ VL53LXX::measure()\n \t\twriteRegister(0xFF, 0x00);\n \t\twriteRegister(0x80, 0x00);\n \n-\t\twriteRegister(SYSRANGE_START_REG, 0x01);\t\t// maybe could be removed by putting sensor\n-\t\t// in continuous mode\n+\t\twriteRegister(SYSRANGE_START_REG, 0x01);\n \n \t\treadRegister(SYSRANGE_START_REG, system_start);\n \n-\t\twhile ((system_start & 0x01) == 1) {\n-\t\t\treadRegister(SYSRANGE_START_REG, system_start);\n+\t\tif ((system_start & 0x01) == 1) {\n+\t\t\twork_queue(HPWORK, &_work, (worker_t)&VL53LXX::cycle_trampoline, this,\n+\t\t\t\t   1000);\t\t// reschedule every 1 ms until measurement is ready\n+\t\t\tret = OK;\n+\t\t\treturn ret;\n+\n+\t\t} else {\n+\t\t\t_measurement_started = true;\n \t\t}\n \n \t}\n \n+\tif (!_collect_phase && !_measurement_started) {\n+\n+\t\treadRegister(SYSRANGE_START_REG, system_start);\n+\n+\t\tif ((system_start & 0x01) == 1) {\n+\t\t\twork_queue(HPWORK, &_work, (worker_t)&VL53LXX::cycle_trampoline, this,\n+\t\t\t\t   1000);\t\t// reschedule every 1 ms until measurement is ready\n+\t\t\tret = OK;\n+\t\t\treturn ret;\n+\n+\t\t} else {\n+\t\t\t_measurement_started = true;\n+\t\t}\n+\t}\n+\n \treadRegister(RESULT_INTERRUPT_STATUS_REG, wait_for_measurement);\n \n \tif ((wait_for_measurement & 0x07) == 0) {\n@@ -662,12 +682,7 @@ VL53LXX::collect()\n \treport.type = distance_sensor_s::MAV_DISTANCE_SENSOR_LASER;\n \treport.orientation = _rotation;\n \n-\tif (distance_m > 2.0f) {\n-\t\treport.current_distance = 2.0f;\n-\n-\t} else {\n-\t\treport.current_distance = distance_m;\n-\t}\n+\treport.current_distance = distance_m;\n \n \treport.min_distance = VL53LXX_MIN_RANGING_DISTANCE;\n \treport.max_distance = VL53LXX_MAX_RANGING_DISTANCE;"},{"sha":"0ab770e75b22d9fa5ce88e6853f7958a53ed232b","filename":"src/drivers/imu/mpu9250/mpu9250.cpp","status":"modified","additions":7,"deletions":3,"changes":10,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/f49fd2acc75608bc9962897435ab84f4d57e35c6/src%2Fdrivers%2Fimu%2Fmpu9250%2Fmpu9250.cpp","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/f49fd2acc75608bc9962897435ab84f4d57e35c6/src%2Fdrivers%2Fimu%2Fmpu9250%2Fmpu9250.cpp","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/src%2Fdrivers%2Fimu%2Fmpu9250%2Fmpu9250.cpp?ref=f49fd2acc75608bc9962897435ab84f4d57e35c6","patch":"@@ -139,7 +139,11 @@ MPU9250::MPU9250(device::Device *interface, device::Device *mag_interface, const\n \t_gyro_range_scale(0.0f),\n \t_gyro_range_rad_s(0.0f),\n \t_dlpf_freq(MPU9250_DEFAULT_ONCHIP_FILTER_FREQ),\n+#ifdef CRAZYFLIE\n+\t_sample_rate(250),\n+#else\n \t_sample_rate(1000),\n+#endif\n \t_accel_reads(perf_alloc(PC_COUNT, \"mpu9250_acc_read\")),\n \t_gyro_reads(perf_alloc(PC_COUNT, \"mpu9250_gyro_read\")),\n \t_sample_perf(perf_alloc(PC_ELAPSED, \"mpu9250_read\")),\n@@ -156,8 +160,8 @@ MPU9250::MPU9250(device::Device *interface, device::Device *mag_interface, const\n \t_gyro_filter_x(MPU9250_GYRO_DEFAULT_RATE, MPU9250_GYRO_DEFAULT_DRIVER_FILTER_FREQ),\n \t_gyro_filter_y(MPU9250_GYRO_DEFAULT_RATE, MPU9250_GYRO_DEFAULT_DRIVER_FILTER_FREQ),\n \t_gyro_filter_z(MPU9250_GYRO_DEFAULT_RATE, MPU9250_GYRO_DEFAULT_DRIVER_FILTER_FREQ),\n-\t_accel_int(1000000 / MPU9250_ACCEL_MAX_OUTPUT_RATE),\n-\t_gyro_int(1000000 / MPU9250_GYRO_MAX_OUTPUT_RATE, true),\n+\t_accel_int(1000000 / MPU9250_ACCEL_MAX_OUTPUT_RATE / 2),\n+\t_gyro_int(1000000 / MPU9250_GYRO_MAX_OUTPUT_RATE / 2, true),\n \t_rotation(rotation),\n \t_checked_next(0),\n \t_last_temperature(0),\n@@ -1157,7 +1161,7 @@ MPU9250::cycle()\n \t\t\t   &_work,\n \t\t\t   (worker_t)&MPU9250::cycle_trampoline,\n \t\t\t   this,\n-\t\t\t   USEC2TICK(_call_interval - MPU9250_TIMER_REDUCTION));\n+\t\t\t   USEC2TICK(900));\n \t}\n }\n #endif"},{"sha":"08f721bd7dbf6407b12823611f3e3406553f129a","filename":"src/drivers/imu/mpu9250/mpu9250.h","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/f49fd2acc75608bc9962897435ab84f4d57e35c6/src%2Fdrivers%2Fimu%2Fmpu9250%2Fmpu9250.h","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/f49fd2acc75608bc9962897435ab84f4d57e35c6/src%2Fdrivers%2Fimu%2Fmpu9250%2Fmpu9250.h","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/src%2Fdrivers%2Fimu%2Fmpu9250%2Fmpu9250.h?ref=f49fd2acc75608bc9962897435ab84f4d57e35c6","patch":"@@ -181,6 +181,11 @@\n #define MPU_WHOAMI_6500\t\t\t0x70\n \n #define MPU9250_ACCEL_DEFAULT_RATE\t1000\n+// #ifdef CRAZYFLIE\n+// #define MPU9250_ACCEL_MAX_OUTPUT_RATE\t\t\t3*280\n+// #else\n+// #define MPU9250_ACCEL_MAX_OUTPUT_RATE\t\t\t280\n+// #endif\n #define MPU9250_ACCEL_MAX_OUTPUT_RATE\t\t\t280\n #define MPU9250_ACCEL_DEFAULT_DRIVER_FILTER_FREQ 30\n #define MPU9250_GYRO_DEFAULT_RATE\t1000"},{"sha":"8bfd9c30f491036a0345ec5d23b5972d16d2f820","filename":"src/drivers/pmw3901/pmw3901.cpp","status":"modified","additions":14,"deletions":5,"changes":19,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/f49fd2acc75608bc9962897435ab84f4d57e35c6/src%2Fdrivers%2Fpmw3901%2Fpmw3901.cpp","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/f49fd2acc75608bc9962897435ab84f4d57e35c6/src%2Fdrivers%2Fpmw3901%2Fpmw3901.cpp","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/src%2Fdrivers%2Fpmw3901%2Fpmw3901.cpp?ref=f49fd2acc75608bc9962897435ab84f4d57e35c6","patch":"@@ -78,11 +78,15 @@\n \n /* Configuration Constants */\n #ifdef PX4_SPI_BUS_EXPANSION\n-#define PMW3901_BUS \t\t\t\t\t\t\tPX4_SPI_BUS_EXPANSION\t\t\t\t/* fmu-v4pro: PX4_SPI_BUS_EXT1 | fmu-v5: PX4_SPI_BUS_EXTERNAL1  */\n+#define PMW3901_BUS \t\t\t\t\t\t\tPX4_SPI_BUS_EXPANSION\n+#else\n+#define PMW3901_BUS \t\t\t\t\t\t\t0\n #endif\n \n #ifdef PX4_SPIDEV_EXPANSION_2\n-#define PMW3901_SPIDEV \t\t\t\t\t\t\tPX4_SPIDEV_EXPANSION_2\t\t\t\t/* fmu-v4pro: PX4_SPIDEV_EXT0  | fmu-v5: PX4_SPIDEV_EXTERNAL1_1 */\n+#define PMW3901_SPIDEV \t\t\t\t\t\t\tPX4_SPIDEV_EXPANSION_2\n+#else\n+#define PMW3901_SPIDEV \t\t\t\t\t\t\t0\n #endif\n \n #define PMW3901_SPI_BUS_SPEED    \t\t\t\t(2000000L)      \t\t\t// 2MHz\n@@ -235,7 +239,8 @@ PMW3901::sensorInit()\n \tuint8_t data[5];\n \n \t// initialize pmw3901 flow sensor\n-\treadRegister(0x00, &data[0], 1); // chip idreadRegister(0x5F, &data[1], 1); // inverse chip id\n+\treadRegister(0x00, &data[0], 1); // chip id\n+\treadRegister(0x5F, &data[1], 1); // inverse chip id\n \n \t// Power on reset\n \twriteRegister(0x3A, 0x5A);\n@@ -331,6 +336,10 @@ PMW3901::sensorInit()\n \twriteRegister(0x5A, 0x50);\n \twriteRegister(0x40, 0x80);\n \n+\twriteRegister(0x7F, 0x00);\n+\twriteRegister(0x5A, 0x10);\n+\twriteRegister(0x54, 0x00);\n+\n \tret = OK;\n \n \treturn ret;\n@@ -643,7 +652,7 @@ PMW3901::start()\n \t_reports->flush();\n \n \t/* schedule a cycle to start things */\n-\twork_queue(HPWORK, &_work, (worker_t)&PMW3901::cycle_trampoline, this, 1000);\n+\twork_queue(LPWORK, &_work, (worker_t)&PMW3901::cycle_trampoline, this, 1000);\n \n \t/* notify about state change */\n \tstruct subsystem_info_s info = {};\n@@ -682,7 +691,7 @@ PMW3901::cycle()\n \tcollect();\n \n \t/* schedule a fresh cycle call when the measurement is done */\n-\twork_queue(HPWORK,\n+\twork_queue(LPWORK,\n \t\t   &_work,\n \t\t   (worker_t)&PMW3901::cycle_trampoline,\n \t\t   this,"}]}