{"sha":"b98602df8b3317fbe2bb055e728777d3bdb5dee4","node_id":"MDY6Q29tbWl0NTI5ODc5MDpiOTg2MDJkZjhiMzMxN2ZiZTJiYjA1NWU3Mjg3NzdkM2JkYjVkZWU0","commit":{"author":{"name":"tumbili","email":"bapstr@ethz.ch","date":"2016-02-23T14:32:57Z"},"committer":{"name":"Lorenz Meier","email":"lm@inf.ethz.ch","date":"2016-02-27T10:51:05Z"},"message":"sdlog2:\nincrease stack size and fix indentation","tree":{"sha":"dadb6638e726645bc31d7f8d65d8db1abf3f047b","url":"https://api.github.com/repos/PX4/PX4-Autopilot/git/trees/dadb6638e726645bc31d7f8d65d8db1abf3f047b"},"url":"https://api.github.com/repos/PX4/PX4-Autopilot/git/commits/b98602df8b3317fbe2bb055e728777d3bdb5dee4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/b98602df8b3317fbe2bb055e728777d3bdb5dee4","html_url":"https://github.com/PX4/PX4-Autopilot/commit/b98602df8b3317fbe2bb055e728777d3bdb5dee4","comments_url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/b98602df8b3317fbe2bb055e728777d3bdb5dee4/comments","author":{"login":"RomanBapst","id":7610489,"node_id":"MDQ6VXNlcjc2MTA0ODk=","avatar_url":"https://avatars.githubusercontent.com/u/7610489?v=4","gravatar_id":"","url":"https://api.github.com/users/RomanBapst","html_url":"https://github.com/RomanBapst","followers_url":"https://api.github.com/users/RomanBapst/followers","following_url":"https://api.github.com/users/RomanBapst/following{/other_user}","gists_url":"https://api.github.com/users/RomanBapst/gists{/gist_id}","starred_url":"https://api.github.com/users/RomanBapst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RomanBapst/subscriptions","organizations_url":"https://api.github.com/users/RomanBapst/orgs","repos_url":"https://api.github.com/users/RomanBapst/repos","events_url":"https://api.github.com/users/RomanBapst/events{/privacy}","received_events_url":"https://api.github.com/users/RomanBapst/received_events","type":"User","site_admin":false},"committer":{"login":"LorenzMeier","id":1208119,"node_id":"MDQ6VXNlcjEyMDgxMTk=","avatar_url":"https://avatars.githubusercontent.com/u/1208119?v=4","gravatar_id":"","url":"https://api.github.com/users/LorenzMeier","html_url":"https://github.com/LorenzMeier","followers_url":"https://api.github.com/users/LorenzMeier/followers","following_url":"https://api.github.com/users/LorenzMeier/following{/other_user}","gists_url":"https://api.github.com/users/LorenzMeier/gists{/gist_id}","starred_url":"https://api.github.com/users/LorenzMeier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LorenzMeier/subscriptions","organizations_url":"https://api.github.com/users/LorenzMeier/orgs","repos_url":"https://api.github.com/users/LorenzMeier/repos","events_url":"https://api.github.com/users/LorenzMeier/events{/privacy}","received_events_url":"https://api.github.com/users/LorenzMeier/received_events","type":"User","site_admin":false},"parents":[{"sha":"527f9886f97c7df1a687eb9f445fd5ed834986fb","url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/527f9886f97c7df1a687eb9f445fd5ed834986fb","html_url":"https://github.com/PX4/PX4-Autopilot/commit/527f9886f97c7df1a687eb9f445fd5ed834986fb"}],"stats":{"total":129,"additions":63,"deletions":66},"files":[{"sha":"e0c7e7cf0f5eaf10f13c340d78517079a992a4ef","filename":"src/modules/sdlog2/sdlog2.c","status":"modified","additions":63,"deletions":66,"changes":129,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/b98602df8b3317fbe2bb055e728777d3bdb5dee4/src%2Fmodules%2Fsdlog2%2Fsdlog2.c","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/b98602df8b3317fbe2bb055e728777d3bdb5dee4/src%2Fmodules%2Fsdlog2%2Fsdlog2.c","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/src%2Fmodules%2Fsdlog2%2Fsdlog2.c?ref=b98602df8b3317fbe2bb055e728777d3bdb5dee4","patch":"@@ -337,7 +337,7 @@ int sdlog2_main(int argc, char *argv[])\n \t\tdeamon_task = px4_task_spawn_cmd(\"sdlog2\",\n \t\t\t\t\t\t SCHED_DEFAULT,\n \t\t\t\t\t\t task_priority,\n-\t\t\t\t\t\t 3300,\n+\t\t\t\t\t\t 4200,\n \t\t\t\t\t\t sdlog2_thread_main,\n \t\t\t\t\t\t (char * const *)argv);\n \n@@ -1474,90 +1474,87 @@ int sdlog2_thread_main(int argc, char *argv[])\n \t\t\tlog_msg.body.log_RPL2.vel_d_m_s = buf.replay.vel_d_m_s;\n \t\t\tlog_msg.body.log_RPL2.vel_ned_valid = buf.replay.vel_ned_valid;\n \t\t\tLOGBUFFER_WRITE_AND_COUNT(RPL2);\n-\t\t}\t\n-\n-\t\t/* --- VTOL VEHICLE STATUS --- */\n-\t\tif(copy_if_updated(ORB_ID(vtol_vehicle_status), &subs.vtol_status_sub, &buf.vtol_status)) {\n-\t\t\tlog_msg.msg_type = LOG_VTOL_MSG;\n-\t\t\tlog_msg.body.log_VTOL.airspeed_tot = buf.vtol_status.airspeed_tot;\n-\t\t\tlog_msg.body.log_VTOL.rw_mode = (uint8_t) buf.vtol_status.vtol_in_rw_mode;\n-\t\t\tlog_msg.body.log_VTOL.trans_mode = (uint8_t) buf.vtol_status.vtol_in_trans_mode;\n-\t\t\tlog_msg.body.log_VTOL.failsafe_mode = (uint8_t) buf.vtol_status.vtol_transition_failsafe;\n-\t\t\tLOGBUFFER_WRITE_AND_COUNT(VTOL);\n \t\t}\n \n-\t\t/* --- GPS POSITION - UNIT #1 --- */\n-\t\tif (gps_pos_updated) {\n-\n-\t\t\tlog_msg.msg_type = LOG_GPS_MSG;\n-\t\t\tlog_msg.body.log_GPS.gps_time = buf_gps_pos.time_utc_usec;\n-\t\t\tlog_msg.body.log_GPS.fix_type = buf_gps_pos.fix_type;\n-\t\t\tlog_msg.body.log_GPS.eph = buf_gps_pos.eph;\n-\t\t\tlog_msg.body.log_GPS.epv = buf_gps_pos.epv;\n-\t\t\tlog_msg.body.log_GPS.lat = buf_gps_pos.lat;\n-\t\t\tlog_msg.body.log_GPS.lon = buf_gps_pos.lon;\n-\t\t\tlog_msg.body.log_GPS.alt = buf_gps_pos.alt * 0.001f;\n-\t\t\tlog_msg.body.log_GPS.vel_n = buf_gps_pos.vel_n_m_s;\n-\t\t\tlog_msg.body.log_GPS.vel_e = buf_gps_pos.vel_e_m_s;\n-\t\t\tlog_msg.body.log_GPS.vel_d = buf_gps_pos.vel_d_m_s;\n-\t\t\tlog_msg.body.log_GPS.cog = buf_gps_pos.cog_rad;\n-\t\t\tlog_msg.body.log_GPS.sats = buf_gps_pos.satellites_used;\n-\t\t\tlog_msg.body.log_GPS.snr_mean = snr_mean;\n-\t\t\tlog_msg.body.log_GPS.noise_per_ms = buf_gps_pos.noise_per_ms;\n-\t\t\tlog_msg.body.log_GPS.jamming_indicator = buf_gps_pos.jamming_indicator;\n-\t\t\tLOGBUFFER_WRITE_AND_COUNT(GPS);\n-\t\t}\n+\t\tif (!record_replay_log) {\n+\t\t\t/* --- VTOL VEHICLE STATUS --- */\n+\t\t\tif(copy_if_updated(ORB_ID(vtol_vehicle_status), &subs.vtol_status_sub, &buf.vtol_status)) {\n+\t\t\t\tlog_msg.msg_type = LOG_VTOL_MSG;\n+\t\t\t\tlog_msg.body.log_VTOL.airspeed_tot = buf.vtol_status.airspeed_tot;\n+\t\t\t\tLOGBUFFER_WRITE_AND_COUNT(VTOL);\n+\t\t\t}\n+\n+\t\t\t/* --- GPS POSITION - UNIT #1 --- */\n+\t\t\tif (gps_pos_updated) {\n+\n+\t\t\t\tlog_msg.msg_type = LOG_GPS_MSG;\n+\t\t\t\tlog_msg.body.log_GPS.gps_time = buf_gps_pos.time_utc_usec;\n+\t\t\t\tlog_msg.body.log_GPS.fix_type = buf_gps_pos.fix_type;\n+\t\t\t\tlog_msg.body.log_GPS.eph = buf_gps_pos.eph;\n+\t\t\t\tlog_msg.body.log_GPS.epv = buf_gps_pos.epv;\n+\t\t\t\tlog_msg.body.log_GPS.lat = buf_gps_pos.lat;\n+\t\t\t\tlog_msg.body.log_GPS.lon = buf_gps_pos.lon;\n+\t\t\t\tlog_msg.body.log_GPS.alt = buf_gps_pos.alt * 0.001f;\n+\t\t\t\tlog_msg.body.log_GPS.vel_n = buf_gps_pos.vel_n_m_s;\n+\t\t\t\tlog_msg.body.log_GPS.vel_e = buf_gps_pos.vel_e_m_s;\n+\t\t\t\tlog_msg.body.log_GPS.vel_d = buf_gps_pos.vel_d_m_s;\n+\t\t\t\tlog_msg.body.log_GPS.cog = buf_gps_pos.cog_rad;\n+\t\t\t\tlog_msg.body.log_GPS.sats = buf_gps_pos.satellites_used;\n+\t\t\t\tlog_msg.body.log_GPS.snr_mean = snr_mean;\n+\t\t\t\tlog_msg.body.log_GPS.noise_per_ms = buf_gps_pos.noise_per_ms;\n+\t\t\t\tlog_msg.body.log_GPS.jamming_indicator = buf_gps_pos.jamming_indicator;\n+\t\t\t\tLOGBUFFER_WRITE_AND_COUNT(GPS);\n+\t\t\t}\n \n-\t\t/* --- SATELLITE INFO - UNIT #1 --- */\n-\t\tif (_extended_logging) {\n+\t\t\t/* --- SATELLITE INFO - UNIT #1 --- */\n+\t\t\tif (_extended_logging) {\n \n-\t\t\tif (copy_if_updated(ORB_ID(satellite_info), &subs.sat_info_sub, &buf.sat_info)) {\n+\t\t\t\tif (copy_if_updated(ORB_ID(satellite_info), &subs.sat_info_sub, &buf.sat_info)) {\n \n-\t\t\t\t/* log the SNR of each satellite for a detailed view of signal quality */\n-\t\t\t\tunsigned sat_info_count = SDLOG_MIN(buf.sat_info.count, sizeof(buf.sat_info.snr) / sizeof(buf.sat_info.snr[0]));\n-\t\t\t\tunsigned log_max_snr = sizeof(log_msg.body.log_GS0A.satellite_snr) / sizeof(log_msg.body.log_GS0A.satellite_snr[0]);\n+\t\t\t\t\t/* log the SNR of each satellite for a detailed view of signal quality */\n+\t\t\t\t\tunsigned sat_info_count = SDLOG_MIN(buf.sat_info.count, sizeof(buf.sat_info.snr) / sizeof(buf.sat_info.snr[0]));\n+\t\t\t\t\tunsigned log_max_snr = sizeof(log_msg.body.log_GS0A.satellite_snr) / sizeof(log_msg.body.log_GS0A.satellite_snr[0]);\n \n-\t\t\t\tlog_msg.msg_type = LOG_GS0A_MSG;\n-\t\t\t\tmemset(&log_msg.body.log_GS0A, 0, sizeof(log_msg.body.log_GS0A));\n-\t\t\t\tsnr_mean = 0.0f;\n+\t\t\t\t\tlog_msg.msg_type = LOG_GS0A_MSG;\n+\t\t\t\t\tmemset(&log_msg.body.log_GS0A, 0, sizeof(log_msg.body.log_GS0A));\n+\t\t\t\t\tsnr_mean = 0.0f;\n \n-\t\t\t\t/* fill set A and calculate mean SNR */\n-\t\t\t\tfor (unsigned i = 0; i < sat_info_count; i++) {\n+\t\t\t\t\t/* fill set A and calculate mean SNR */\n+\t\t\t\t\tfor (unsigned i = 0; i < sat_info_count; i++) {\n \n-\t\t\t\t\tsnr_mean += buf.sat_info.snr[i];\n+\t\t\t\t\t\tsnr_mean += buf.sat_info.snr[i];\n \n-\t\t\t\t\tint satindex = buf.sat_info.svid[i] - 1;\n+\t\t\t\t\t\tint satindex = buf.sat_info.svid[i] - 1;\n \n-\t\t\t\t\t/* handles index exceeding and wraps to to arithmetic errors */\n-\t\t\t\t\tif ((satindex >= 0) && (satindex < (int)log_max_snr)) {\n-\t\t\t\t\t\t/* map satellites by their ID so that logs from two receivers can be compared */\n-\t\t\t\t\t\tlog_msg.body.log_GS0A.satellite_snr[satindex] = buf.sat_info.snr[i];\n+\t\t\t\t\t\t/* handles index exceeding and wraps to to arithmetic errors */\n+\t\t\t\t\t\tif ((satindex >= 0) && (satindex < (int)log_max_snr)) {\n+\t\t\t\t\t\t\t/* map satellites by their ID so that logs from two receivers can be compared */\n+\t\t\t\t\t\t\tlog_msg.body.log_GS0A.satellite_snr[satindex] = buf.sat_info.snr[i];\n+\t\t\t\t\t\t}\n \t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t\tLOGBUFFER_WRITE_AND_COUNT(GS0A);\n-\t\t\t\tsnr_mean /= sat_info_count;\n+\t\t\t\t\tLOGBUFFER_WRITE_AND_COUNT(GS0A);\n+\t\t\t\t\tsnr_mean /= sat_info_count;\n \n-\t\t\t\tlog_msg.msg_type = LOG_GS0B_MSG;\n-\t\t\t\tmemset(&log_msg.body.log_GS0B, 0, sizeof(log_msg.body.log_GS0B));\n+\t\t\t\t\tlog_msg.msg_type = LOG_GS0B_MSG;\n+\t\t\t\t\tmemset(&log_msg.body.log_GS0B, 0, sizeof(log_msg.body.log_GS0B));\n \n-\t\t\t\t/* fill set B */\n-\t\t\t\tfor (unsigned i = 0; i < sat_info_count; i++) {\n+\t\t\t\t\t/* fill set B */\n+\t\t\t\t\tfor (unsigned i = 0; i < sat_info_count; i++) {\n \n-\t\t\t\t\t/* get second bank of satellites, thus deduct bank size from index */\n-\t\t\t\t\tint satindex = buf.sat_info.svid[i] - 1 - log_max_snr;\n+\t\t\t\t\t\t/* get second bank of satellites, thus deduct bank size from index */\n+\t\t\t\t\t\tint satindex = buf.sat_info.svid[i] - 1 - log_max_snr;\n \n-\t\t\t\t\t/* handles index exceeding and wraps to to arithmetic errors */\n-\t\t\t\t\tif ((satindex >= 0) && (satindex < (int)log_max_snr)) {\n-\t\t\t\t\t\t/* map satellites by their ID so that logs from two receivers can be compared */\n-\t\t\t\t\t\tlog_msg.body.log_GS0B.satellite_snr[satindex] = buf.sat_info.snr[i];\n+\t\t\t\t\t\t/* handles index exceeding and wraps to to arithmetic errors */\n+\t\t\t\t\t\tif ((satindex >= 0) && (satindex < (int)log_max_snr)) {\n+\t\t\t\t\t\t\t/* map satellites by their ID so that logs from two receivers can be compared */\n+\t\t\t\t\t\t\tlog_msg.body.log_GS0B.satellite_snr[satindex] = buf.sat_info.snr[i];\n+\t\t\t\t\t\t}\n \t\t\t\t\t}\n+\t\t\t\t\tLOGBUFFER_WRITE_AND_COUNT(GS0B);\n \t\t\t\t}\n-\t\t\t\tLOGBUFFER_WRITE_AND_COUNT(GS0B);\n \t\t\t}\n-\t\t}\n \n-\t\t/* --- SENSOR COMBINED --- */\n-\t\tif (!record_replay_log) {\n+\t\t\t/* --- SENSOR COMBINED --- */\n \t\t\tif (copy_if_updated(ORB_ID(sensor_combined), &subs.sensor_sub, &buf.sensor)) {\n \t\t\t\t\n "}]}