{"sha":"57769ec4371df6ceabacf11aa130c4e8f4eb0240","node_id":"MDY6Q29tbWl0NTI5ODc5MDo1Nzc2OWVjNDM3MWRmNmNlYWJhY2YxMWFhMTMwYzRlOGY0ZWIwMjQw","commit":{"author":{"name":"Lorenz Meier","email":"lm@inf.ethz.ch","date":"2013-09-10T12:09:09Z"},"committer":{"name":"Lorenz Meier","email":"lm@inf.ethz.ch","date":"2013-09-10T12:09:09Z"},"message":"Reducing timeout to 0.5 seconds","tree":{"sha":"b4dfdd5308fbaf6d8a4408e419e70393bf2d788f","url":"https://api.github.com/repos/PX4/PX4-Autopilot/git/trees/b4dfdd5308fbaf6d8a4408e419e70393bf2d788f"},"url":"https://api.github.com/repos/PX4/PX4-Autopilot/git/commits/57769ec4371df6ceabacf11aa130c4e8f4eb0240","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/57769ec4371df6ceabacf11aa130c4e8f4eb0240","html_url":"https://github.com/PX4/PX4-Autopilot/commit/57769ec4371df6ceabacf11aa130c4e8f4eb0240","comments_url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/57769ec4371df6ceabacf11aa130c4e8f4eb0240/comments","author":{"login":"LorenzMeier","id":1208119,"node_id":"MDQ6VXNlcjEyMDgxMTk=","avatar_url":"https://avatars.githubusercontent.com/u/1208119?v=4","gravatar_id":"","url":"https://api.github.com/users/LorenzMeier","html_url":"https://github.com/LorenzMeier","followers_url":"https://api.github.com/users/LorenzMeier/followers","following_url":"https://api.github.com/users/LorenzMeier/following{/other_user}","gists_url":"https://api.github.com/users/LorenzMeier/gists{/gist_id}","starred_url":"https://api.github.com/users/LorenzMeier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LorenzMeier/subscriptions","organizations_url":"https://api.github.com/users/LorenzMeier/orgs","repos_url":"https://api.github.com/users/LorenzMeier/repos","events_url":"https://api.github.com/users/LorenzMeier/events{/privacy}","received_events_url":"https://api.github.com/users/LorenzMeier/received_events","type":"User","site_admin":false},"committer":{"login":"LorenzMeier","id":1208119,"node_id":"MDQ6VXNlcjEyMDgxMTk=","avatar_url":"https://avatars.githubusercontent.com/u/1208119?v=4","gravatar_id":"","url":"https://api.github.com/users/LorenzMeier","html_url":"https://github.com/LorenzMeier","followers_url":"https://api.github.com/users/LorenzMeier/followers","following_url":"https://api.github.com/users/LorenzMeier/following{/other_user}","gists_url":"https://api.github.com/users/LorenzMeier/gists{/gist_id}","starred_url":"https://api.github.com/users/LorenzMeier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LorenzMeier/subscriptions","organizations_url":"https://api.github.com/users/LorenzMeier/orgs","repos_url":"https://api.github.com/users/LorenzMeier/repos","events_url":"https://api.github.com/users/LorenzMeier/events{/privacy}","received_events_url":"https://api.github.com/users/LorenzMeier/received_events","type":"User","site_admin":false},"parents":[{"sha":"c3b6cea77a1fe59e58b0019d1f8e5b95daf55494","url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/c3b6cea77a1fe59e58b0019d1f8e5b95daf55494","html_url":"https://github.com/PX4/PX4-Autopilot/commit/c3b6cea77a1fe59e58b0019d1f8e5b95daf55494"}],"stats":{"total":193,"additions":192,"deletions":1},"files":[{"sha":"1d80d4aa5be7643c59635245881cd263a756d9b6","filename":"Tools/com","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/57769ec4371df6ceabacf11aa130c4e8f4eb0240/Tools%2Fcom","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/57769ec4371df6ceabacf11aa130c4e8f4eb0240/Tools%2Fcom","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/Tools%2Fcom?ref=57769ec4371df6ceabacf11aa130c4e8f4eb0240"},{"sha":"fa52dcb61eaadeb22f504789b98e06fde5e7aa24","filename":"Tools/com.c","status":"added","additions":191,"deletions":0,"changes":191,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/57769ec4371df6ceabacf11aa130c4e8f4eb0240/Tools%2Fcom.c","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/57769ec4371df6ceabacf11aa130c4e8f4eb0240/Tools%2Fcom.c","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/Tools%2Fcom.c?ref=57769ec4371df6ceabacf11aa130c4e8f4eb0240","patch":"@@ -0,0 +1,191 @@\n+/*\n+ * Building: cc -o com com.c\n+ * Usage   : ./com /dev/device [speed]\n+ * Example : ./com /dev/ttyS0 [115200]\n+ * Keys    : Ctrl-A - exit, Ctrl-X - display control lines status\n+ * Darcs   : darcs get http://tinyserial.sf.net/\n+ * Homepage: http://tinyserial.sourceforge.net\n+ * Version : 2009-03-05\n+ *\n+ * Ivan Tikhonov, http://www.brokestream.com, kefeer@brokestream.com\n+ * Patches by Jim Kou, Henry Nestler, Jon Miner, Alan Horstmann\n+ *\n+ */\n+\n+\n+/* Copyright (C) 2007 Ivan Tikhonov\n+\n+  This software is provided 'as-is', without any express or implied\n+  warranty.  In no event will the authors be held liable for any damages\n+  arising from the use of this software.\n+\n+  Permission is granted to anyone to use this software for any purpose,\n+  including commercial applications, and to alter it and redistribute it\n+  freely, subject to the following restrictions:\n+\n+  1. The origin of this software must not be misrepresented; you must not\n+     claim that you wrote the original software. If you use this software\n+     in a product, an acknowledgment in the product documentation would be\n+     appreciated but is not required.\n+  2. Altered source versions must be plainly marked as such, and must not be\n+     misrepresented as being the original software.\n+  3. This notice may not be removed or altered from any source distribution.\n+\n+  Ivan Tikhonov, kefeer@brokestream.com\n+\n+*/\n+\n+#include <termios.h>\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <string.h>\n+#include <unistd.h>\n+#include <sys/signal.h>\n+#include <sys/types.h>\n+#include <sys/ioctl.h>\n+#include <fcntl.h>\n+#include <errno.h>\n+\n+int transfer_byte(int from, int to, int is_control);\n+\n+typedef struct {char *name; int flag; } speed_spec;\n+\n+\n+void print_status(int fd) {\n+\tint status;\n+\tunsigned int arg;\n+\tstatus = ioctl(fd, TIOCMGET, &arg);\n+\tfprintf(stderr, \"[STATUS]: \");\n+\tif(arg & TIOCM_RTS) fprintf(stderr, \"RTS \");\n+\tif(arg & TIOCM_CTS) fprintf(stderr, \"CTS \");\n+\tif(arg & TIOCM_DSR) fprintf(stderr, \"DSR \");\n+\tif(arg & TIOCM_CAR) fprintf(stderr, \"DCD \");\n+\tif(arg & TIOCM_DTR) fprintf(stderr, \"DTR \");\n+\tif(arg & TIOCM_RNG) fprintf(stderr, \"RI \");\n+\tfprintf(stderr, \"\\r\\n\");\n+}\n+\n+int main(int argc, char *argv[])\n+{\n+\tint comfd;\n+\tstruct termios oldtio, newtio;       //place for old and new port settings for serial port\n+\tstruct termios oldkey, newkey;       //place tor old and new port settings for keyboard teletype\n+\tchar *devicename = argv[1];\n+\tint need_exit = 0;\n+\tspeed_spec speeds[] =\n+\t{\n+\t\t{\"1200\", B1200},\n+\t\t{\"2400\", B2400},\n+\t\t{\"4800\", B4800},\n+\t\t{\"9600\", B9600},\n+\t\t{\"19200\", B19200},\n+\t\t{\"38400\", B38400},\n+\t\t{\"57600\", B57600},\n+\t\t{\"115200\", B115200},\n+\t\t{NULL, 0}\n+\t};\n+\tint speed = B9600;\n+\n+\tif(argc < 2) {\n+\t\tfprintf(stderr, \"example: %s /dev/ttyS0 [115200]\\n\", argv[0]);\n+\t\texit(1);\n+\t}\n+\n+\tcomfd = open(devicename, O_RDWR | O_NOCTTY | O_NONBLOCK);\n+\tif (comfd < 0)\n+\t{\n+\t\tperror(devicename);\n+\t\texit(-1);\n+\t}\n+\n+\tif(argc > 2) {\t\n+\t\tspeed_spec *s;\n+\t\tfor(s = speeds; s->name; s++) {\n+\t\t\tif(strcmp(s->name, argv[2]) == 0) {\n+\t\t\t\tspeed = s->flag;\n+\t\t\t\tfprintf(stderr, \"setting speed %s\\n\", s->name);\n+\t\t\t\tbreak;\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tfprintf(stderr, \"C-a exit, C-x modem lines status\\n\");\n+\n+\ttcgetattr(STDIN_FILENO,&oldkey);\n+\tnewkey.c_cflag = B9600 | CRTSCTS | CS8 | CLOCAL | CREAD;\n+\tnewkey.c_iflag = IGNPAR;\n+\tnewkey.c_oflag = 0;\n+\tnewkey.c_lflag = 0;\n+\tnewkey.c_cc[VMIN]=1;\n+\tnewkey.c_cc[VTIME]=0;\n+\ttcflush(STDIN_FILENO, TCIFLUSH);\n+\ttcsetattr(STDIN_FILENO,TCSANOW,&newkey);\n+\n+\n+\ttcgetattr(comfd,&oldtio); // save current port settings \n+\tnewtio.c_cflag = speed | CS8 | CLOCAL | CREAD;\n+\tnewtio.c_iflag = IGNPAR;\n+\tnewtio.c_oflag = 0;\n+\tnewtio.c_lflag = 0;\n+\tnewtio.c_cc[VMIN]=1;\n+\tnewtio.c_cc[VTIME]=0;\n+\ttcflush(comfd, TCIFLUSH);\n+\ttcsetattr(comfd,TCSANOW,&newtio);\n+\n+\tprint_status(comfd);\n+\n+\twhile(!need_exit) {\n+\t\tfd_set fds;\n+\t\tint ret;\n+\t\t\n+\t\tFD_ZERO(&fds);\n+\t\tFD_SET(STDIN_FILENO, &fds);\n+\t\tFD_SET(comfd, &fds);\n+\n+\n+\t\tret = select(comfd+1, &fds, NULL, NULL, NULL);\n+\t\tif(ret == -1) {\n+\t\t\tperror(\"select\");\n+\t\t} else if (ret > 0) {\n+\t\t\tif(FD_ISSET(STDIN_FILENO, &fds)) {\n+\t\t\t\tneed_exit = transfer_byte(STDIN_FILENO, comfd, 1);\n+\t\t\t}\n+\t\t\tif(FD_ISSET(comfd, &fds)) {\n+\t\t\t\tneed_exit = transfer_byte(comfd, STDIN_FILENO, 0);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\ttcsetattr(comfd,TCSANOW,&oldtio);\n+\ttcsetattr(STDIN_FILENO,TCSANOW,&oldkey);\n+\tclose(comfd);\n+\n+\treturn 0;\n+}\n+\n+\n+int transfer_byte(int from, int to, int is_control) {\n+\tchar c;\n+\tint ret;\n+\tdo {\n+\t\tret = read(from, &c, 1);\n+\t} while (ret < 0 && errno == EINTR);\n+\tif(ret == 1) {\n+\t\tif(is_control) {\n+\t\t\tif(c == '\\x01') { // C-a\n+\t\t\t\treturn -1;\n+\t\t\t} else if(c == '\\x18') { // C-x\n+\t\t\t\tprint_status(to);\n+\t\t\t\treturn 0;\n+\t\t\t}\n+\t\t}\n+\t\twhile(write(to, &c, 1) == -1) {\n+\t\t\tif(errno!=EAGAIN && errno!=EINTR) { perror(\"write failed\"); break; }\n+\t\t}\n+\t} else {\n+\t\tfprintf(stderr, \"\\nnothing to read. probably port disconnected.\\n\");\n+\t\treturn -2;\n+\t}\n+\treturn 0;\n+}\n+"},{"sha":"52d089360a8ff9840b27a47e6fa1658efdfe6dfd","filename":"Tools/px_uploader.py","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/57769ec4371df6ceabacf11aa130c4e8f4eb0240/Tools%2Fpx_uploader.py","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/57769ec4371df6ceabacf11aa130c4e8f4eb0240/Tools%2Fpx_uploader.py","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/Tools%2Fpx_uploader.py?ref=57769ec4371df6ceabacf11aa130c4e8f4eb0240","patch":"@@ -436,7 +436,7 @@ def send_reboot(self):\n                         print(\"attempting reboot on %s...\" % port)\n                         up.send_reboot()\n                         # wait for the reboot, without we might run into Serial I/O Error 5 \n-                        time.sleep(1.5)\n+                        time.sleep(0.5)\n                         continue\n \n                 try:"}]}