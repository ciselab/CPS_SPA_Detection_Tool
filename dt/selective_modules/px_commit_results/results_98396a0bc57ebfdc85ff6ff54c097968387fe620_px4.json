{"sha":"98396a0bc57ebfdc85ff6ff54c097968387fe620","node_id":"MDY6Q29tbWl0NTI5ODc5MDo5ODM5NmEwYmM1N2ViZmRjODVmZjZmZjU0YzA5Nzk2ODM4N2ZlNjIw","commit":{"author":{"name":"Beat Küng","email":"beat-kueng@gmx.net","date":"2017-07-31T13:40:15Z"},"committer":{"name":"Beat Küng","email":"beat-kueng@gmx.net","date":"2017-08-08T12:47:01Z"},"message":"frsky_telemetry: cleanup static vars, use less memory & fix process priority","tree":{"sha":"b96406878c7f74a0fcb19d68905b4dc26bd27ef1","url":"https://api.github.com/repos/PX4/PX4-Autopilot/git/trees/b96406878c7f74a0fcb19d68905b4dc26bd27ef1"},"url":"https://api.github.com/repos/PX4/PX4-Autopilot/git/commits/98396a0bc57ebfdc85ff6ff54c097968387fe620","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/98396a0bc57ebfdc85ff6ff54c097968387fe620","html_url":"https://github.com/PX4/PX4-Autopilot/commit/98396a0bc57ebfdc85ff6ff54c097968387fe620","comments_url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/98396a0bc57ebfdc85ff6ff54c097968387fe620/comments","author":{"login":"bkueng","id":281593,"node_id":"MDQ6VXNlcjI4MTU5Mw==","avatar_url":"https://avatars.githubusercontent.com/u/281593?v=4","gravatar_id":"","url":"https://api.github.com/users/bkueng","html_url":"https://github.com/bkueng","followers_url":"https://api.github.com/users/bkueng/followers","following_url":"https://api.github.com/users/bkueng/following{/other_user}","gists_url":"https://api.github.com/users/bkueng/gists{/gist_id}","starred_url":"https://api.github.com/users/bkueng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bkueng/subscriptions","organizations_url":"https://api.github.com/users/bkueng/orgs","repos_url":"https://api.github.com/users/bkueng/repos","events_url":"https://api.github.com/users/bkueng/events{/privacy}","received_events_url":"https://api.github.com/users/bkueng/received_events","type":"User","site_admin":false},"committer":{"login":"bkueng","id":281593,"node_id":"MDQ6VXNlcjI4MTU5Mw==","avatar_url":"https://avatars.githubusercontent.com/u/281593?v=4","gravatar_id":"","url":"https://api.github.com/users/bkueng","html_url":"https://github.com/bkueng","followers_url":"https://api.github.com/users/bkueng/followers","following_url":"https://api.github.com/users/bkueng/following{/other_user}","gists_url":"https://api.github.com/users/bkueng/gists{/gist_id}","starred_url":"https://api.github.com/users/bkueng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bkueng/subscriptions","organizations_url":"https://api.github.com/users/bkueng/orgs","repos_url":"https://api.github.com/users/bkueng/repos","events_url":"https://api.github.com/users/bkueng/events{/privacy}","received_events_url":"https://api.github.com/users/bkueng/received_events","type":"User","site_admin":false},"parents":[{"sha":"cb238173178008eac71aa6b2ccdcacb030094496","url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/cb238173178008eac71aa6b2ccdcacb030094496","html_url":"https://github.com/PX4/PX4-Autopilot/commit/cb238173178008eac71aa6b2ccdcacb030094496"}],"stats":{"total":76,"additions":38,"deletions":38},"files":[{"sha":"3e14dfccb4f50fa2ad233813f9117bbaebb67ffa","filename":"src/drivers/frsky_telemetry/frsky_telemetry.c","status":"modified","additions":38,"deletions":38,"changes":76,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/98396a0bc57ebfdc85ff6ff54c097968387fe620/src%2Fdrivers%2Ffrsky_telemetry%2Ffrsky_telemetry.c","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/98396a0bc57ebfdc85ff6ff54c097968387fe620/src%2Fdrivers%2Ffrsky_telemetry%2Ffrsky_telemetry.c","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/src%2Fdrivers%2Ffrsky_telemetry%2Ffrsky_telemetry.c?ref=98396a0bc57ebfdc85ff6ff54c097968387fe620","patch":"@@ -148,7 +148,7 @@ static int sPort_open_uart(const char *uart_name, struct termios *uart_config, s\n \tuart_config->c_oflag &= ~OPOST;\n \n \t/* Set baud rate */\n-\tstatic const speed_t speed = B9600;\n+\tconst speed_t speed = B9600;\n \n \tif (cfsetispeed(uart_config, speed) < 0 || cfsetospeed(uart_config, speed) < 0) {\n \t\twarnx(\"ERR: %s: %d (cfsetispeed, cfsetospeed)\\n\", uart_name, termios_state);\n@@ -200,7 +200,7 @@ static void usage()\n static int frsky_telemetry_thread_main(int argc, char *argv[])\n {\n \t/* Default values for arguments */\n-\tchar *device_name = \"/dev/ttyS6\"; /* USART8 */\n+\tconst char *device_name = \"/dev/ttyS6\"; /* USART8 */\n \n \t/* Work around some stupidity in task_create's argv handling */\n \targc -= 2;\n@@ -325,9 +325,20 @@ static int frsky_telemetry_thread_main(int argc, char *argv[])\n \t\t\terr(1, \"could not allocate memory\");\n \t\t}\n \n-\t\tstatic float filtered_alt = NAN;\n+\t\tfloat filtered_alt = NAN;\n+\t\tfloat last_baro_alt = 0.f;\n \t\tint sensor_sub = orb_subscribe(ORB_ID(sensor_baro));\n \n+\t\tuint32_t lastBATV_ms = 0;\n+\t\tuint32_t lastCUR_ms = 0;\n+\t\tuint32_t lastALT_ms = 0;\n+\t\tuint32_t lastSPD_ms = 0;\n+\t\tuint32_t lastFUEL_ms = 0;\n+\t\tuint32_t lastVSPD_ms = 0;\n+\t\tuint32_t lastGPS_ms = 0;\n+\t\tuint32_t lastNAV_STATE_ms = 0;\n+\t\tuint32_t lastGPS_FIX_ms = 0;\n+\n \t\t/* send S.port telemetry */\n \t\twhile (!thread_should_exit) {\n \n@@ -350,14 +361,13 @@ static int frsky_telemetry_thread_main(int argc, char *argv[])\n \n \t\t\tif (status < 1) { continue; }\n \n-\t\t\thrt_abstime now = hrt_absolute_time();\n+\t\t\tuint32_t now_ms = hrt_absolute_time() / 1000;\n \n \t\t\tnewBytes = read(uart, &sbuf[1], 1);\n \n \t\t\t/* get a local copy of the current sensor values\n \t\t\t * in order to apply a lowpass filter to baro pressure.\n \t\t\t */\n-\t\t\tstatic float last_baro_alt = 0;\n \t\t\tbool sensor_updated;\n \t\t\torb_check(sensor_sub, &sensor_updated);\n \n@@ -377,24 +387,14 @@ static int frsky_telemetry_thread_main(int argc, char *argv[])\n \n \t\t\tsPort_update_topics();\n \n-\t\t\tstatic hrt_abstime lastBATV = 0;\n-\t\t\tstatic hrt_abstime lastCUR = 0;\n-\t\t\tstatic hrt_abstime lastALT = 0;\n-\t\t\tstatic hrt_abstime lastSPD = 0;\n-\t\t\tstatic hrt_abstime lastFUEL = 0;\n-\t\t\tstatic hrt_abstime lastVSPD = 0;\n-\t\t\tstatic hrt_abstime lastGPS = 0;\n-\t\t\tstatic hrt_abstime lastNAV_STATE = 0;\n-\t\t\tstatic hrt_abstime lastGPS_FIX = 0;\n-\n \n \t\t\tswitch (sbuf[1]) {\n \n \t\t\tcase SMARTPORT_POLL_1:\n \n \t\t\t\t/* report BATV at 1Hz */\n-\t\t\t\tif (now - lastBATV > 1000 * 1000) {\n-\t\t\t\t\tlastBATV = now;\n+\t\t\t\tif (now_ms - lastBATV_ms > 1000) {\n+\t\t\t\t\tlastBATV_ms = now_ms;\n \t\t\t\t\t/* send battery voltage */\n \t\t\t\t\tsPort_send_BATV(uart);\n \t\t\t\t}\n@@ -405,8 +405,8 @@ static int frsky_telemetry_thread_main(int argc, char *argv[])\n \t\t\tcase SMARTPORT_POLL_2:\n \n \t\t\t\t/* report battery current at 5Hz */\n-\t\t\t\tif (now - lastCUR > 200 * 1000) {\n-\t\t\t\t\tlastCUR = now;\n+\t\t\t\tif (now_ms - lastCUR_ms > 200) {\n+\t\t\t\t\tlastCUR_ms = now_ms;\n \t\t\t\t\t/* send battery current */\n \t\t\t\t\tsPort_send_CUR(uart);\n \t\t\t\t}\n@@ -417,8 +417,8 @@ static int frsky_telemetry_thread_main(int argc, char *argv[])\n \t\t\tcase SMARTPORT_POLL_3:\n \n \t\t\t\t/* report altitude at 5Hz */\n-\t\t\t\tif (now - lastALT > 200 * 1000) {\n-\t\t\t\t\tlastALT = now;\n+\t\t\t\tif (now_ms - lastALT_ms > 200) {\n+\t\t\t\t\tlastALT_ms = now_ms;\n \t\t\t\t\t/* send altitude */\n \t\t\t\t\tsPort_send_ALT(uart);\n \t\t\t\t}\n@@ -429,8 +429,8 @@ static int frsky_telemetry_thread_main(int argc, char *argv[])\n \t\t\tcase SMARTPORT_POLL_4:\n \n \t\t\t\t/* report speed at 5Hz */\n-\t\t\t\tif (now - lastSPD > 200 * 1000) {\n-\t\t\t\t\tlastSPD = now;\n+\t\t\t\tif (now_ms - lastSPD_ms > 200) {\n+\t\t\t\t\tlastSPD_ms = now_ms;\n \t\t\t\t\t/* send speed */\n \t\t\t\t\tsPort_send_SPD(uart);\n \t\t\t\t}\n@@ -440,8 +440,8 @@ static int frsky_telemetry_thread_main(int argc, char *argv[])\n \t\t\tcase SMARTPORT_POLL_5:\n \n \t\t\t\t/* report fuel at 1Hz */\n-\t\t\t\tif (now - lastFUEL > 1000 * 1000) {\n-\t\t\t\t\tlastFUEL = now;\n+\t\t\t\tif (now_ms - lastFUEL_ms > 1000) {\n+\t\t\t\t\tlastFUEL_ms = now_ms;\n \t\t\t\t\t/* send fuel */\n \t\t\t\t\tsPort_send_FUEL(uart);\n \t\t\t\t}\n@@ -451,14 +451,14 @@ static int frsky_telemetry_thread_main(int argc, char *argv[])\n \t\t\tcase SMARTPORT_POLL_6:\n \n \t\t\t\t/* report vertical speed at 10Hz */\n-\t\t\t\tif (now - lastVSPD > 100 * 1000) {\n+\t\t\t\tif (now_ms - lastVSPD_ms > 100) {\n \t\t\t\t\t/* estimate vertical speed using first difference and delta t */\n-\t\t\t\t\tuint64_t dt = now - lastVSPD;\n-\t\t\t\t\tfloat speed  = (filtered_alt - last_baro_alt) / (1e-6f * (float)dt);\n+\t\t\t\t\tuint32_t dt = now_ms - lastVSPD_ms;\n+\t\t\t\t\tfloat speed  = (filtered_alt - last_baro_alt) / (1e-3f * (float)dt);\n \n \t\t\t\t\t/* save current alt and timestamp */\n \t\t\t\t\tlast_baro_alt = filtered_alt;\n-\t\t\t\t\tlastVSPD = now;\n+\t\t\t\t\tlastVSPD_ms = now_ms;\n \n \t\t\t\t\tsPort_send_VSPD(uart, speed);\n \t\t\t\t}\n@@ -468,7 +468,7 @@ static int frsky_telemetry_thread_main(int argc, char *argv[])\n \t\t\tcase SMARTPORT_POLL_7:\n \n \t\t\t\t/* report GPS data elements at 5*5Hz */\n-\t\t\t\tif (now - lastGPS > 100 * 1000) {\n+\t\t\t\tif (now_ms - lastGPS_ms > 100) {\n \t\t\t\t\tstatic int elementCount = 0;\n \n \t\t\t\t\tswitch (elementCount) {\n@@ -511,15 +511,15 @@ static int frsky_telemetry_thread_main(int argc, char *argv[])\n \t\t\tcase SMARTPORT_POLL_8:\n \n \t\t\t\t/* report nav_state as DIY_NAVSTATE 2Hz */\n-\t\t\t\tif (now - lastNAV_STATE > 500 * 1000) {\n-\t\t\t\t\tlastNAV_STATE = now;\n+\t\t\t\tif (now_ms - lastNAV_STATE_ms > 500) {\n+\t\t\t\t\tlastNAV_STATE_ms = now_ms;\n \t\t\t\t\t/* send T1 */\n \t\t\t\t\tsPort_send_NAV_STATE(uart);\n \t\t\t\t}\n \n \t\t\t\t/* report satcount and fix as DIY_GPSFIX at 2Hz */\n-\t\t\t\telse if (now - lastGPS_FIX > 500 * 1000) {\n-\t\t\t\t\tlastGPS_FIX = now;\n+\t\t\t\telse if (now_ms - lastGPS_FIX_ms > 500) {\n+\t\t\t\t\tlastGPS_FIX_ms = now_ms;\n \t\t\t\t\t/* send T2 */\n \t\t\t\t\tsPort_send_GPS_FIX(uart);\n \t\t\t\t}\n@@ -585,9 +585,9 @@ static int frsky_telemetry_thread_main(int argc, char *argv[])\n \t\t\tbool new_input = frsky_parse_host((uint8_t *)&sbuf[0], nbytes, &host_frame);\n \n \t\t\t/* the RSSI value could be useful */\n-\t\t\tif (false && new_input) {\n-\t\t\t\twarnx(\"host frame: ad1:%u, ad2: %u, rssi: %u\",\n-\t\t\t\t      host_frame.ad1, host_frame.ad2, host_frame.linkq);\n+\t\t\tif (new_input) {\n+\t\t\t\tPX4_DEBUG(\"host frame: ad1:%u, ad2: %u, rssi: %u\",\n+\t\t\t\t\t  host_frame.ad1, host_frame.ad2, host_frame.linkq);\n \t\t\t}\n \n \t\t\tfrsky_update_topics();\n@@ -648,7 +648,7 @@ int frsky_telemetry_main(int argc, char *argv[])\n \t\tthread_should_exit = false;\n \t\tfrsky_task = px4_task_spawn_cmd(\"frsky_telemetry\",\n \t\t\t\t\t\tSCHED_DEFAULT,\n-\t\t\t\t\t\t200,\n+\t\t\t\t\t\tSCHED_PRIORITY_DEFAULT + 4,\n \t\t\t\t\t\t1268,\n \t\t\t\t\t\tfrsky_telemetry_thread_main,\n \t\t\t\t\t\t(char *const *)argv);"}]}