{"sha":"868bc010878adaf5a124fc0c9d6cef4045fa06ac","node_id":"MDY6Q29tbWl0NTI5ODc5MDo4NjhiYzAxMDg3OGFkYWY1YTEyNGZjMGM5ZDZjZWY0MDQ1ZmEwNmFj","commit":{"author":{"name":"Paul Riseborough","email":"p_riseborough@live.com.au","date":"2018-05-05T06:33:01Z"},"committer":{"name":"Paul Riseborough","email":"p_riseborough@live.com.au","date":"2018-05-07T22:43:14Z"},"message":"EKF: Relax minimum required range finder measurement rate","tree":{"sha":"e3a2ac297d481244cb397f792cf44792a0b3f25d","url":"https://api.github.com/repos/PX4/PX4-Autopilot/git/trees/e3a2ac297d481244cb397f792cf44792a0b3f25d"},"url":"https://api.github.com/repos/PX4/PX4-Autopilot/git/commits/868bc010878adaf5a124fc0c9d6cef4045fa06ac","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/868bc010878adaf5a124fc0c9d6cef4045fa06ac","html_url":"https://github.com/PX4/PX4-Autopilot/commit/868bc010878adaf5a124fc0c9d6cef4045fa06ac","comments_url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/868bc010878adaf5a124fc0c9d6cef4045fa06ac/comments","author":{"login":"priseborough","id":3596952,"node_id":"MDQ6VXNlcjM1OTY5NTI=","avatar_url":"https://avatars.githubusercontent.com/u/3596952?v=4","gravatar_id":"","url":"https://api.github.com/users/priseborough","html_url":"https://github.com/priseborough","followers_url":"https://api.github.com/users/priseborough/followers","following_url":"https://api.github.com/users/priseborough/following{/other_user}","gists_url":"https://api.github.com/users/priseborough/gists{/gist_id}","starred_url":"https://api.github.com/users/priseborough/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/priseborough/subscriptions","organizations_url":"https://api.github.com/users/priseborough/orgs","repos_url":"https://api.github.com/users/priseborough/repos","events_url":"https://api.github.com/users/priseborough/events{/privacy}","received_events_url":"https://api.github.com/users/priseborough/received_events","type":"User","site_admin":false},"committer":{"login":"priseborough","id":3596952,"node_id":"MDQ6VXNlcjM1OTY5NTI=","avatar_url":"https://avatars.githubusercontent.com/u/3596952?v=4","gravatar_id":"","url":"https://api.github.com/users/priseborough","html_url":"https://github.com/priseborough","followers_url":"https://api.github.com/users/priseborough/followers","following_url":"https://api.github.com/users/priseborough/following{/other_user}","gists_url":"https://api.github.com/users/priseborough/gists{/gist_id}","starred_url":"https://api.github.com/users/priseborough/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/priseborough/subscriptions","organizations_url":"https://api.github.com/users/priseborough/orgs","repos_url":"https://api.github.com/users/priseborough/repos","events_url":"https://api.github.com/users/priseborough/events{/privacy}","received_events_url":"https://api.github.com/users/priseborough/received_events","type":"User","site_admin":false},"parents":[{"sha":"02963a85c418fcc9df48dc33ded4fbaf65fbcaee","url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/02963a85c418fcc9df48dc33ded4fbaf65fbcaee","html_url":"https://github.com/PX4/PX4-Autopilot/commit/02963a85c418fcc9df48dc33ded4fbaf65fbcaee"}],"stats":{"total":11,"additions":6,"deletions":5},"files":[{"sha":"221088ff77207f488473b6c142f33b13eb8338fc","filename":"EKF/terrain_estimator.cpp","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/868bc010878adaf5a124fc0c9d6cef4045fa06ac/EKF%2Fterrain_estimator.cpp","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/868bc010878adaf5a124fc0c9d6cef4045fa06ac/EKF%2Fterrain_estimator.cpp","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/EKF%2Fterrain_estimator.cpp?ref=868bc010878adaf5a124fc0c9d6cef4045fa06ac","patch":"@@ -207,16 +207,17 @@ void Ekf::get_hagl_innov_var(float *hagl_innov_var)\n // check that the range finder data is continuous\n void Ekf::checkRangeDataContinuity()\n {\n-\t// update range data continuous flag (2Hz ie 500 ms)\n+\t// update range data continuous flag (1Hz ie 1000 ms)\n \t/* Timing in micro seconds */\n \n-\t/* Apply a 1.0 sec low pass filter to the time delta from the last range finder updates */\n-\t_dt_last_range_update_filt_us = _dt_last_range_update_filt_us * (1.0f - _dt_update) + _dt_update *\n+\t/* Apply a 2.0 sec low pass filter to the time delta from the last range finder updates */\n+\tfloat alpha = 0.5f * _dt_update;\n+\t_dt_last_range_update_filt_us = _dt_last_range_update_filt_us * (1.0f - alpha) + alpha *\n \t\t\t\t\t(_time_last_imu - _time_last_range);\n \n-\t_dt_last_range_update_filt_us = fminf(_dt_last_range_update_filt_us, 1e6f);\n+\t_dt_last_range_update_filt_us = fminf(_dt_last_range_update_filt_us, 2e6f);\n \n-\tif (_dt_last_range_update_filt_us < 5e5f) {\n+\tif (_dt_last_range_update_filt_us < 1e6f) {\n \t\t_range_data_continuous = true;\n \n \t} else {"}]}