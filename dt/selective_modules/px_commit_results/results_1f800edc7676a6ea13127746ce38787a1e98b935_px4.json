{"sha":"1f800edc7676a6ea13127746ce38787a1e98b935","node_id":"MDY6Q29tbWl0NTI5ODc5MDoxZjgwMGVkYzc2NzZhNmVhMTMxMjc3NDZjZTM4Nzg3YTFlOThiOTM1","commit":{"author":{"name":"Anton Babushkin","email":"anton.babushkin@me.com","date":"2013-05-05T11:51:16Z"},"committer":{"name":"Anton Babushkin","email":"anton.babushkin@me.com","date":"2013-05-05T11:51:16Z"},"message":"Still threshold increased to 0.1m/s^2, and orientation error threshold to 5m/s^2. Timeout increased to 30s.","tree":{"sha":"5a3fa8eb618cc1d8bf813a3517d60d134c277ab0","url":"https://api.github.com/repos/PX4/PX4-Autopilot/git/trees/5a3fa8eb618cc1d8bf813a3517d60d134c277ab0"},"url":"https://api.github.com/repos/PX4/PX4-Autopilot/git/commits/1f800edc7676a6ea13127746ce38787a1e98b935","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/1f800edc7676a6ea13127746ce38787a1e98b935","html_url":"https://github.com/PX4/PX4-Autopilot/commit/1f800edc7676a6ea13127746ce38787a1e98b935","comments_url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/1f800edc7676a6ea13127746ce38787a1e98b935/comments","author":{"login":"DrTon","id":4341525,"node_id":"MDQ6VXNlcjQzNDE1MjU=","avatar_url":"https://avatars.githubusercontent.com/u/4341525?v=4","gravatar_id":"","url":"https://api.github.com/users/DrTon","html_url":"https://github.com/DrTon","followers_url":"https://api.github.com/users/DrTon/followers","following_url":"https://api.github.com/users/DrTon/following{/other_user}","gists_url":"https://api.github.com/users/DrTon/gists{/gist_id}","starred_url":"https://api.github.com/users/DrTon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DrTon/subscriptions","organizations_url":"https://api.github.com/users/DrTon/orgs","repos_url":"https://api.github.com/users/DrTon/repos","events_url":"https://api.github.com/users/DrTon/events{/privacy}","received_events_url":"https://api.github.com/users/DrTon/received_events","type":"User","site_admin":false},"committer":{"login":"DrTon","id":4341525,"node_id":"MDQ6VXNlcjQzNDE1MjU=","avatar_url":"https://avatars.githubusercontent.com/u/4341525?v=4","gravatar_id":"","url":"https://api.github.com/users/DrTon","html_url":"https://github.com/DrTon","followers_url":"https://api.github.com/users/DrTon/followers","following_url":"https://api.github.com/users/DrTon/following{/other_user}","gists_url":"https://api.github.com/users/DrTon/gists{/gist_id}","starred_url":"https://api.github.com/users/DrTon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DrTon/subscriptions","organizations_url":"https://api.github.com/users/DrTon/orgs","repos_url":"https://api.github.com/users/DrTon/repos","events_url":"https://api.github.com/users/DrTon/events{/privacy}","received_events_url":"https://api.github.com/users/DrTon/received_events","type":"User","site_admin":false},"parents":[{"sha":"4109874fc84339e3ee8a794b17d8bdd131313c51","url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/4109874fc84339e3ee8a794b17d8bdd131313c51","html_url":"https://github.com/PX4/PX4-Autopilot/commit/4109874fc84339e3ee8a794b17d8bdd131313c51"}],"stats":{"total":66,"additions":32,"deletions":34},"files":[{"sha":"991145d73c17f7f4902ce253f38362a5304f1bad","filename":"apps/commander/accelerometer_calibration.c","status":"modified","additions":32,"deletions":34,"changes":66,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/1f800edc7676a6ea13127746ce38787a1e98b935/apps%2Fcommander%2Faccelerometer_calibration.c","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/1f800edc7676a6ea13127746ce38787a1e98b935/apps%2Fcommander%2Faccelerometer_calibration.c","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/apps%2Fcommander%2Faccelerometer_calibration.c?ref=1f800edc7676a6ea13127746ce38787a1e98b935","patch":"@@ -224,7 +224,7 @@ int do_accel_calibration_mesurements(int mavlink_fd, float accel_offs[3], float\n  * Wait for vehicle become still and detect it's orientation.\n  *\n  * @return 0..5 according to orientation when vehicle is still and ready for measurements,\n- * ERROR if vehicle is not still after 10s or orientation error is more than 20%\n+ * ERROR if vehicle is not still after 30s or orientation error is more than 5m/s^2\n  */\n int detect_orientation(int mavlink_fd, int sub_sensor_combined) {\n \tstruct sensor_combined_s sensor;\n@@ -235,17 +235,17 @@ int detect_orientation(int mavlink_fd, int sub_sensor_combined) {\n \tfloat accel_len2 = 0.0f;\n \t/* EMA time constant in seconds*/\n \tfloat ema_len = 0.2f;\n-\t/* set \"still\" threshold to 0.005 m/s^2 */\n-\tfloat still_thr2 = pow(0.05f / CONSTANTS_ONE_G, 2);\n-\t/* set accel error threshold to 30% of accel vector length */\n-\tfloat accel_err_thr = 0.3f;\n+\t/* set \"still\" threshold to 0.1 m/s^2 */\n+\tfloat still_thr2 = pow(0.1f, 2);\n+\t/* set accel error threshold to 5m/s^2 */\n+\tfloat accel_err_thr = 5.0f;\n \t/* still time required in us */\n \tint64_t still_time = 2000000;\n \tstruct pollfd fds[1] = { { .fd = sub_sensor_combined, .events = POLLIN } };\n \n \thrt_abstime t_start = hrt_absolute_time();\n-\t/* set deadline to 20s */\n-\thrt_abstime timeout = 20000000;\n+\t/* set timeout to 30s */\n+\thrt_abstime timeout = 30000000;\n \thrt_abstime t_timeout = t_start + timeout;\n \thrt_abstime t = t_start;\n \thrt_abstime t_prev = t_start;\n@@ -267,11 +267,10 @@ int detect_orientation(int mavlink_fd, int sub_sensor_combined) {\n \t\t\t\tif (d > accel_disp[i])\n \t\t\t\t\taccel_disp[i] = d;\n \t\t\t}\n-\t\t\taccel_len2 = accel_ema[0] * accel_ema[0] + accel_ema[1] * accel_ema[1] + accel_ema[2] * accel_ema[2];\n-\t\t\tfloat still_thr_raw2 = still_thr2 * accel_len2;\n-\t\t\tif (  accel_disp[0] < still_thr_raw2 &&\n-\t\t\t\t  accel_disp[1] < still_thr_raw2 &&\n-\t\t\t\t  accel_disp[2] < still_thr_raw2 ) {\n+\t\t\t/* still detector with hysteresis */\n+\t\t\tif (  accel_disp[0] < still_thr2 &&\n+\t\t\t\t  accel_disp[1] < still_thr2 &&\n+\t\t\t\t  accel_disp[2] < still_thr2 ) {\n \t\t\t\t/* is still now */\n \t\t\t\tif (t_still == 0) {\n \t\t\t\t\t/* first time */\n@@ -285,9 +284,9 @@ int detect_orientation(int mavlink_fd, int sub_sensor_combined) {\n \t\t\t\t\t\tbreak;\n \t\t\t\t\t}\n \t\t\t\t}\n-\t\t\t} else if ( accel_disp[0] > still_thr_raw2 * 2.0f ||\n-\t\t\t\t\t    accel_disp[1] > still_thr_raw2 * 2.0f ||\n-\t\t\t\t\t    accel_disp[2] > still_thr_raw2 * 2.0f) {\n+\t\t\t} else if ( accel_disp[0] > still_thr2 * 2.0f ||\n+\t\t\t\t\t    accel_disp[1] > still_thr2 * 2.0f ||\n+\t\t\t\t\t    accel_disp[2] > still_thr2 * 2.0f) {\n \t\t\t\t/* not still, reset still start time */\n \t\t\t\tif (t_still != 0) {\n \t\t\t\t\tmavlink_log_info(mavlink_fd, \"moving...\");\n@@ -306,30 +305,29 @@ int detect_orientation(int mavlink_fd, int sub_sensor_combined) {\n \t}\n \n \tfloat accel_len = sqrt(accel_len2);\n-\tfloat accel_err_thr_raw = accel_len * accel_err_thr;\n-\tif (  fabs(accel_ema[0] - accel_len) < accel_err_thr_raw &&\n-\t\t  fabs(accel_ema[1]) < accel_err_thr_raw &&\n-\t\t  fabs(accel_ema[2]) < accel_err_thr_raw  )\n+\tif (  fabs(accel_ema[0] - accel_len) < accel_err_thr &&\n+\t\t  fabs(accel_ema[1]) < accel_err_thr &&\n+\t\t  fabs(accel_ema[2]) < accel_err_thr  )\n \t\treturn 0;\t// [ g, 0, 0 ]\n-\tif (  fabs(accel_ema[0] + accel_len) < accel_err_thr_raw &&\n-\t\t  fabs(accel_ema[1]) < accel_err_thr_raw &&\n-\t\t  fabs(accel_ema[2]) < accel_err_thr_raw  )\n+\tif (  fabs(accel_ema[0] + accel_len) < accel_err_thr &&\n+\t\t  fabs(accel_ema[1]) < accel_err_thr &&\n+\t\t  fabs(accel_ema[2]) < accel_err_thr  )\n \t\treturn 1;\t// [ -g, 0, 0 ]\n-\tif (  fabs(accel_ema[0]) < accel_err_thr_raw &&\n-\t\t  fabs(accel_ema[1] - accel_len) < accel_err_thr_raw &&\n-\t\t  fabs(accel_ema[2]) < accel_err_thr_raw  )\n+\tif (  fabs(accel_ema[0]) < accel_err_thr &&\n+\t\t  fabs(accel_ema[1] - accel_len) < accel_err_thr &&\n+\t\t  fabs(accel_ema[2]) < accel_err_thr  )\n \t\treturn 2;\t// [ 0, g, 0 ]\n-\tif (  fabs(accel_ema[0]) < accel_err_thr_raw &&\n-\t\t  fabs(accel_ema[1] + accel_len) < accel_err_thr_raw &&\n-\t\t  fabs(accel_ema[2]) < accel_err_thr_raw  )\n+\tif (  fabs(accel_ema[0]) < accel_err_thr &&\n+\t\t  fabs(accel_ema[1] + accel_len) < accel_err_thr &&\n+\t\t  fabs(accel_ema[2]) < accel_err_thr  )\n \t\treturn 3;\t// [ 0, -g, 0 ]\n-\tif (  fabs(accel_ema[0]) < accel_err_thr_raw &&\n-\t\t  fabs(accel_ema[1]) < accel_err_thr_raw &&\n-\t\t  fabs(accel_ema[2] - accel_len) < accel_err_thr_raw  )\n+\tif (  fabs(accel_ema[0]) < accel_err_thr &&\n+\t\t  fabs(accel_ema[1]) < accel_err_thr &&\n+\t\t  fabs(accel_ema[2] - accel_len) < accel_err_thr  )\n \t\treturn 4;\t// [ 0, 0, g ]\n-\tif (  fabs(accel_ema[0]) < accel_err_thr_raw &&\n-\t\t  fabs(accel_ema[1]) < accel_err_thr_raw &&\n-\t\t  fabs(accel_ema[2] + accel_len) < accel_err_thr_raw  )\n+\tif (  fabs(accel_ema[0]) < accel_err_thr &&\n+\t\t  fabs(accel_ema[1]) < accel_err_thr &&\n+\t\t  fabs(accel_ema[2] + accel_len) < accel_err_thr  )\n \t\treturn 5;\t// [ 0, 0, -g ]\n \n \tmavlink_log_info(mavlink_fd, \"ERROR: invalid orientation\");"}]}