{"sha":"2c5342acd4e77f7aa74f9a3dffd4f482339f8f92","node_id":"MDY6Q29tbWl0NTI5ODc5MDoyYzUzNDJhY2Q0ZTc3ZjdhYTc0ZjlhM2RmZmQ0ZjQ4MjMzOWY4Zjky","commit":{"author":{"name":"bresch","email":"brescianimathieu@gmail.com","date":"2021-03-04T12:03:46Z"},"committer":{"name":"Daniel Agar","email":"daniel@agar.ca","date":"2021-03-25T16:57:36Z"},"message":"commander: increase nav_test_failed hysteresis time\n\nThis is to avoid race condition with the yaw emergency estimator having\nthe same trigger delay of 1 second. Commander will now give more time to\nEKF2 to reset itself before switching to altitude mode.","tree":{"sha":"85c92688d516f138e3bf11a143f947ca419093b8","url":"https://api.github.com/repos/PX4/PX4-Autopilot/git/trees/85c92688d516f138e3bf11a143f947ca419093b8"},"url":"https://api.github.com/repos/PX4/PX4-Autopilot/git/commits/2c5342acd4e77f7aa74f9a3dffd4f482339f8f92","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/2c5342acd4e77f7aa74f9a3dffd4f482339f8f92","html_url":"https://github.com/PX4/PX4-Autopilot/commit/2c5342acd4e77f7aa74f9a3dffd4f482339f8f92","comments_url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/2c5342acd4e77f7aa74f9a3dffd4f482339f8f92/comments","author":{"login":"bresch","id":14822839,"node_id":"MDQ6VXNlcjE0ODIyODM5","avatar_url":"https://avatars.githubusercontent.com/u/14822839?v=4","gravatar_id":"","url":"https://api.github.com/users/bresch","html_url":"https://github.com/bresch","followers_url":"https://api.github.com/users/bresch/followers","following_url":"https://api.github.com/users/bresch/following{/other_user}","gists_url":"https://api.github.com/users/bresch/gists{/gist_id}","starred_url":"https://api.github.com/users/bresch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bresch/subscriptions","organizations_url":"https://api.github.com/users/bresch/orgs","repos_url":"https://api.github.com/users/bresch/repos","events_url":"https://api.github.com/users/bresch/events{/privacy}","received_events_url":"https://api.github.com/users/bresch/received_events","type":"User","site_admin":false},"committer":{"login":"dagar","id":84712,"node_id":"MDQ6VXNlcjg0NzEy","avatar_url":"https://avatars.githubusercontent.com/u/84712?v=4","gravatar_id":"","url":"https://api.github.com/users/dagar","html_url":"https://github.com/dagar","followers_url":"https://api.github.com/users/dagar/followers","following_url":"https://api.github.com/users/dagar/following{/other_user}","gists_url":"https://api.github.com/users/dagar/gists{/gist_id}","starred_url":"https://api.github.com/users/dagar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dagar/subscriptions","organizations_url":"https://api.github.com/users/dagar/orgs","repos_url":"https://api.github.com/users/dagar/repos","events_url":"https://api.github.com/users/dagar/events{/privacy}","received_events_url":"https://api.github.com/users/dagar/received_events","type":"User","site_admin":false},"parents":[{"sha":"beadae6dfc032079bd1d0d4300a8854e45eae39f","url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/beadae6dfc032079bd1d0d4300a8854e45eae39f","html_url":"https://github.com/PX4/PX4-Autopilot/commit/beadae6dfc032079bd1d0d4300a8854e45eae39f"}],"stats":{"total":2,"additions":1,"deletions":1},"files":[{"sha":"190e0829414c5f5ff53f01694bea1e16ccdfeb38","filename":"src/modules/commander/Commander.cpp","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/2c5342acd4e77f7aa74f9a3dffd4f482339f8f92/src%2Fmodules%2Fcommander%2FCommander.cpp","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/2c5342acd4e77f7aa74f9a3dffd4f482339f8f92/src%2Fmodules%2Fcommander%2FCommander.cpp","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/src%2Fmodules%2Fcommander%2FCommander.cpp?ref=2c5342acd4e77f7aa74f9a3dffd4f482339f8f92","patch":"@@ -3849,7 +3849,7 @@ void Commander::estimator_check()\n \t\t\t\t\t} else if (innovation_fail) {\n \t\t\t\t\t\t_time_last_innov_fail = hrt_absolute_time();\n \n-\t\t\t\t\t\tif (!_nav_test_failed && hrt_elapsed_time(&_time_last_innov_pass) > 1_s) {\n+\t\t\t\t\t\tif (!_nav_test_failed && hrt_elapsed_time(&_time_last_innov_pass) > 2_s) {\n \t\t\t\t\t\t\t// if the innovation test has failed continuously, declare the nav as failed\n \t\t\t\t\t\t\t_nav_test_failed = true;\n \t\t\t\t\t\t\tmavlink_log_emergency(&_mavlink_log_pub, \"Navigation failure! Land and recalibrate sensors\");"}]}