{"sha":"85dc422d9804c894009e37c6eaab67a10c5dca28","node_id":"MDY6Q29tbWl0NTI5ODc5MDo4NWRjNDIyZDk4MDRjODk0MDA5ZTM3YzZlYWFiNjdhMTBjNWRjYTI4","commit":{"author":{"name":"Anton Babushkin","email":"anton.babushkin@me.com","date":"2014-02-26T18:47:19Z"},"committer":{"name":"Anton Babushkin","email":"anton.babushkin@me.com","date":"2014-02-26T18:47:19Z"},"message":"mavlink: more streams implemented, stack size returned to 2048","tree":{"sha":"9a2846622200bd4347c95de6ea35fb7b2cc18433","url":"https://api.github.com/repos/PX4/PX4-Autopilot/git/trees/9a2846622200bd4347c95de6ea35fb7b2cc18433"},"url":"https://api.github.com/repos/PX4/PX4-Autopilot/git/commits/85dc422d9804c894009e37c6eaab67a10c5dca28","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/85dc422d9804c894009e37c6eaab67a10c5dca28","html_url":"https://github.com/PX4/PX4-Autopilot/commit/85dc422d9804c894009e37c6eaab67a10c5dca28","comments_url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/85dc422d9804c894009e37c6eaab67a10c5dca28/comments","author":{"login":"DrTon","id":4341525,"node_id":"MDQ6VXNlcjQzNDE1MjU=","avatar_url":"https://avatars.githubusercontent.com/u/4341525?v=4","gravatar_id":"","url":"https://api.github.com/users/DrTon","html_url":"https://github.com/DrTon","followers_url":"https://api.github.com/users/DrTon/followers","following_url":"https://api.github.com/users/DrTon/following{/other_user}","gists_url":"https://api.github.com/users/DrTon/gists{/gist_id}","starred_url":"https://api.github.com/users/DrTon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DrTon/subscriptions","organizations_url":"https://api.github.com/users/DrTon/orgs","repos_url":"https://api.github.com/users/DrTon/repos","events_url":"https://api.github.com/users/DrTon/events{/privacy}","received_events_url":"https://api.github.com/users/DrTon/received_events","type":"User","site_admin":false},"committer":{"login":"DrTon","id":4341525,"node_id":"MDQ6VXNlcjQzNDE1MjU=","avatar_url":"https://avatars.githubusercontent.com/u/4341525?v=4","gravatar_id":"","url":"https://api.github.com/users/DrTon","html_url":"https://github.com/DrTon","followers_url":"https://api.github.com/users/DrTon/followers","following_url":"https://api.github.com/users/DrTon/following{/other_user}","gists_url":"https://api.github.com/users/DrTon/gists{/gist_id}","starred_url":"https://api.github.com/users/DrTon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DrTon/subscriptions","organizations_url":"https://api.github.com/users/DrTon/orgs","repos_url":"https://api.github.com/users/DrTon/repos","events_url":"https://api.github.com/users/DrTon/events{/privacy}","received_events_url":"https://api.github.com/users/DrTon/received_events","type":"User","site_admin":false},"parents":[{"sha":"f9619e39341dbc45683c6ccd7e06397f8a537216","url":"https://api.github.com/repos/PX4/PX4-Autopilot/commits/f9619e39341dbc45683c6ccd7e06397f8a537216","html_url":"https://github.com/PX4/PX4-Autopilot/commit/f9619e39341dbc45683c6ccd7e06397f8a537216"}],"stats":{"total":230,"additions":164,"deletions":66},"files":[{"sha":"5ac76e1cf0e22e169ef38a6f957f958b17d0f2c7","filename":"src/modules/mavlink/mavlink_main.cpp","status":"modified","additions":10,"deletions":16,"changes":26,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/85dc422d9804c894009e37c6eaab67a10c5dca28/src%2Fmodules%2Fmavlink%2Fmavlink_main.cpp","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/85dc422d9804c894009e37c6eaab67a10c5dca28/src%2Fmodules%2Fmavlink%2Fmavlink_main.cpp","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/src%2Fmodules%2Fmavlink%2Fmavlink_main.cpp?ref=85dc422d9804c894009e37c6eaab67a10c5dca28","patch":"@@ -61,14 +61,6 @@\n #include <drivers/device/device.h>\n #include <drivers/drv_hrt.h>\n #include <arch/board/board.h>\n-#include <uORB/uORB.h>\n-#include <uORB/topics/vehicle_global_position.h>\n-#include <uORB/topics/home_position.h>\n-#include <uORB/topics/vehicle_status.h>\n-#include <uORB/topics/position_setpoint_triplet.h>\n-#include <uORB/topics/parameter_update.h>\n-#include <uORB/topics/mission.h>\n-#include <uORB/topics/mission_result.h>\n \n #include <systemlib/param/param.h>\n #include <systemlib/err.h>\n@@ -79,6 +71,10 @@\n #include <mathlib/mathlib.h>\n #include <mavlink/mavlink_log.h>\n \n+#include <uORB/topics/parameter_update.h>\n+#include <uORB/topics/mission.h>\n+#include <uORB/topics/mission_result.h>\n+\n #include \"mavlink_bridge_header.h\"\n #include \"mavlink_main.h\"\n #include \"mavlink_messages.h\"\n@@ -1542,13 +1538,11 @@ Mavlink::task_main(int argc, char *argv[])\n \n \tadd_stream(\"HEARTBEAT\", 1.0f);\n \tadd_stream(\"SYS_STATUS\", 1.0f);\n-\tadd_stream(\"HIGHRES_IMU\", 20.0f);\n-//\tadd_stream(\"RAW_IMU\", 10.0f);\n-\tadd_stream(\"ATTITUDE\", 20.0f);\n-//\tadd_stream(\"NAMED_VALUE_FLOAT\", 5.0f);\n-//\tadd_stream(\"SERVO_OUTPUT_RAW\", 2.0f);\n-//\tadd_stream(\"GPS_RAW_INT\", 2.0f);\n-//\tadd_stream(\"MANUAL_CONTROL\", 2.0f);\n+\tadd_stream(\"HIGHRES_IMU\", 1.0f);\n+\tadd_stream(\"ATTITUDE\", 10.0f);\n+\tadd_stream(\"GPS_RAW_INT\", 1.0f);\n+\tadd_stream(\"GLOBAL_POSITION_INT\", 5.0f);\n+\tadd_stream(\"LOCAL_POSITION_NED\", 5.0f);\n \n \twhile (!_task_should_exit) {\n \t\t/* main loop */\n@@ -1656,7 +1650,7 @@ Mavlink::start(int argc, char *argv[])\n \t/*mavlink->_mavlink_task = */task_spawn_cmd(buf,\n \t\t\t\t\t SCHED_DEFAULT,\n \t\t\t\t\t SCHED_PRIORITY_DEFAULT,\n-\t\t\t\t\t 4096,\n+\t\t\t\t\t 2048,\n \t\t\t\t\t (main_t)&Mavlink::start_helper,\n \t\t\t\t\t (const char **)argv);\n "},{"sha":"27ae197a651b39a48588ecac2ae954977747130e","filename":"src/modules/mavlink/mavlink_messages.cpp","status":"modified","additions":154,"deletions":50,"changes":204,"blob_url":"https://github.com/PX4/PX4-Autopilot/blob/85dc422d9804c894009e37c6eaab67a10c5dca28/src%2Fmodules%2Fmavlink%2Fmavlink_messages.cpp","raw_url":"https://github.com/PX4/PX4-Autopilot/raw/85dc422d9804c894009e37c6eaab67a10c5dca28/src%2Fmodules%2Fmavlink%2Fmavlink_messages.cpp","contents_url":"https://api.github.com/repos/PX4/PX4-Autopilot/contents/src%2Fmodules%2Fmavlink%2Fmavlink_messages.cpp?ref=85dc422d9804c894009e37c6eaab67a10c5dca28","patch":"@@ -6,12 +6,32 @@\n  */\n \n #include <commander/px4_custom_mode.h>\n+#include <lib/geo/geo.h>\n \n+#include <uORB/uORB.h>\n+#include <uORB/topics/vehicle_global_position.h>\n+#include <uORB/topics/home_position.h>\n #include <uORB/topics/vehicle_status.h>\n #include <uORB/topics/position_setpoint_triplet.h>\n+#include <uORB/topics/vehicle_gps_position.h>\n+#include <uORB/topics/sensor_combined.h>\n \n #include \"mavlink_messages.h\"\n \n+\n+uint16_t\n+cm_uint16_from_m_float(float m)\n+{\n+\tif (m < 0.0f) {\n+\t\treturn 0;\n+\n+\t} else if (m > 655.35f) {\n+\t\treturn 65535;\n+\t}\n+\n+\treturn (uint16_t)(m * 100.0f);\n+}\n+\n class MavlinkStreamHeartbeat : public MavlinkStream {\n public:\n \tconst char *get_name()\n@@ -279,11 +299,145 @@ class MavlinkStreamAttitude : public MavlinkStream {\n };\n \n \n+class MavlinkStreamGPSRawInt : public MavlinkStream {\n+public:\n+\tconst char *get_name()\n+\t{\n+\t\treturn \"GPS_RAW_INT\";\n+\t}\n+\n+\tMavlinkStream *new_instance()\n+\t{\n+\t\treturn new MavlinkStreamGPSRawInt();\n+\t}\n+\n+private:\n+\tMavlinkOrbSubscription *gps_sub;\n+\n+\tstruct vehicle_gps_position_s *gps;\n+\n+protected:\n+\n+\tvoid subscribe(Mavlink *mavlink)\n+\t{\n+\t\tgps_sub = mavlink->add_orb_subscription(ORB_ID(vehicle_gps_position), sizeof(struct vehicle_gps_position_s));\n+\t\tgps = (struct vehicle_gps_position_s *)gps_sub->get_data();\n+\t}\n+\n+\tvoid send(const hrt_abstime t) {\n+\t\tgps_sub->update(t);\n+\n+\t\tmavlink_msg_gps_raw_int_send(_channel,\n+\t\t\t\tgps->timestamp_position,\n+\t\t\t\tgps->fix_type,\n+\t\t\t\tgps->lat,\n+\t\t\t\tgps->lon,\n+\t\t\t\tgps->alt,\n+\t\t\t\tcm_uint16_from_m_float(gps->eph_m),\n+\t\t\t\tcm_uint16_from_m_float(gps->epv_m),\n+\t\t\t\tgps->vel_m_s * 100.0f,\n+\t\t\t\t_wrap_2pi(gps->cog_rad) * M_RAD_TO_DEG_F * 1e2f,\n+\t\t\t\tgps->satellites_visible);\n+\t}\n+};\n+\n+\n+class MavlinkStreamGlobalPositionInt : public MavlinkStream {\n+public:\n+\tconst char *get_name()\n+\t{\n+\t\treturn \"GLOBAL_POSITION_INT\";\n+\t}\n+\n+\tMavlinkStream *new_instance()\n+\t{\n+\t\treturn new MavlinkStreamGlobalPositionInt();\n+\t}\n+\n+private:\n+\tMavlinkOrbSubscription *pos_sub;\n+\tMavlinkOrbSubscription *home_sub;\n+\n+\tstruct vehicle_global_position_s *pos;\n+\tstruct home_position_s *home;\n+\n+protected:\n+\n+\tvoid subscribe(Mavlink *mavlink)\n+\t{\n+\t\tpos_sub = mavlink->add_orb_subscription(ORB_ID(vehicle_global_position), sizeof(struct vehicle_global_position_s));\n+\t\tpos = (struct vehicle_global_position_s *)pos_sub->get_data();\n+\n+\t\thome_sub = mavlink->add_orb_subscription(ORB_ID(home_position), sizeof(struct home_position_s));\n+\t\thome = (struct home_position_s *)home_sub->get_data();\n+\t}\n+\n+\tvoid send(const hrt_abstime t) {\n+\t\tpos_sub->update(t);\n+\t\thome_sub->update(t);\n+\n+\t\tmavlink_msg_global_position_int_send(_channel,\n+\t\t\t\tpos->timestamp / 1000,\n+\t\t\t\tpos->lat * 1e7,\n+\t\t\t\tpos->lon * 1e7,\n+\t\t\t\tpos->alt * 1000.0f,\n+\t\t\t\t(pos->alt - home->alt) * 1000.0f,\n+\t\t\t\tpos->vel_n * 100.0f,\n+\t\t\t\tpos->vel_e * 100.0f,\n+\t\t\t\tpos->vel_d * 100.0f,\n+\t\t\t\t_wrap_2pi(pos->yaw) * M_RAD_TO_DEG_F * 100.0f);\n+\t}\n+};\n+\n+\n+class MavlinkStreamLocalPositionNED : public MavlinkStream {\n+public:\n+\tconst char *get_name()\n+\t{\n+\t\treturn \"LOCAL_POSITION_NED\";\n+\t}\n+\n+\tMavlinkStream *new_instance()\n+\t{\n+\t\treturn new MavlinkStreamLocalPositionNED();\n+\t}\n+\n+private:\n+\tMavlinkOrbSubscription *pos_sub;\n+\n+\tstruct vehicle_local_position_s *pos;\n+\n+protected:\n+\n+\tvoid subscribe(Mavlink *mavlink)\n+\t{\n+\t\tpos_sub = mavlink->add_orb_subscription(ORB_ID(vehicle_local_position), sizeof(struct vehicle_local_position_s));\n+\t\tpos = (struct vehicle_local_position_s *)pos_sub->get_data();\n+\t}\n+\n+\tvoid send(const hrt_abstime t) {\n+\t\tpos_sub->update(t);\n+\n+\t\tmavlink_msg_local_position_ned_send(_channel,\n+\t\t\t\tpos->timestamp / 1000,\n+\t\t\t\tpos->x,\n+\t\t\t\tpos->y,\n+\t\t\t\tpos->z,\n+\t\t\t\tpos->vx,\n+\t\t\t\tpos->vy,\n+\t\t\t\tpos->vz);\n+\t}\n+};\n+\n+\n MavlinkStream *streams_list[] = {\n \t\tnew MavlinkStreamHeartbeat(),\n \t\tnew MavlinkStreamSysStatus(),\n \t\tnew MavlinkStreamHighresIMU(),\n \t\tnew MavlinkStreamAttitude(),\n+\t\tnew MavlinkStreamGPSRawInt(),\n+\t\tnew MavlinkStreamGlobalPositionInt(),\n+\t\tnew MavlinkStreamLocalPositionNED(),\n \t\tnullptr\n };\n \n@@ -347,22 +501,6 @@ MavlinkStream *streams_list[] = {\n //\t/* copy gps data into local buffer */\n //\torb_copy(ORB_ID(vehicle_gps_position), l->mavlink->get_subs()->gps_sub, &gps);\n //\n-//\t/* GPS COG is 0..2PI in degrees * 1e2 */\n-//\tfloat cog_deg = _wrap_2pi(gps.cog_rad) * M_RAD_TO_DEG_F;\n-//\n-//\t/* GPS position */\n-//\tmavlink_msg_gps_raw_int_send(l->mavlink->get_chan(),\n-//\t\t\t\t     gps.timestamp_position,\n-//\t\t\t\t     gps.fix_type,\n-//\t\t\t\t     gps.lat,\n-//\t\t\t\t     gps.lon,\n-//\t\t\t\t     gps.alt,\n-//\t\t\t\t     cm_uint16_from_m_float(gps.eph_m),\n-//\t\t\t\t     cm_uint16_from_m_float(gps.epv_m),\n-//\t\t\t\t     gps.vel_m_s * 1e2f, // from m/s to cm/s\n-//\t\t\t\t     cog_deg * 1e2f, // from deg to deg * 100\n-//\t\t\t\t     gps.satellites_visible);\n-//\n //\t/* update SAT info every 10 seconds */\n //\tif (gps.satellite_info_available && (l->listener->gps_counter % 50 == 0)) {\n //\t\tmavlink_msg_gps_status_send(l->mavlink->get_chan(),\n@@ -414,40 +552,6 @@ MavlinkStream *streams_list[] = {\n //\t}\n //}\n //\n-//void\n-//MavlinkOrbListener::l_global_position(const struct listener *l)\n-//{\n-//\t/* copy global position data into local buffer */\n-//\torb_copy(ORB_ID(vehicle_global_position), l->mavlink->get_subs()->global_pos_sub, &l->listener->global_pos);\n-//\n-//\tmavlink_msg_global_position_int_send(l->mavlink->get_chan(),\n-//\t\t\t\t\t\t l->listener->global_pos.timestamp / 1000,\n-//\t\t\t\t\t     l->listener->global_pos.lat * 1e7,\n-//\t\t\t\t\t     l->listener->global_pos.lon * 1e7,\n-//\t\t\t\t\t     l->listener->global_pos.alt * 1000.0f,\n-//\t\t\t\t\t     (l->listener->global_pos.alt - l->listener->home.alt) * 1000.0f,\n-//\t\t\t\t\t     l->listener->global_pos.vel_n * 100.0f,\n-//\t\t\t\t\t     l->listener->global_pos.vel_e * 100.0f,\n-//\t\t\t\t\t     l->listener->global_pos.vel_d * 100.0f,\n-//\t\t\t\t\t     _wrap_2pi(l->listener->global_pos.yaw) * M_RAD_TO_DEG_F * 100.0f);\n-//}\n-//\n-//void\n-//MavlinkOrbListener::l_local_position(const struct listener *l)\n-//{\n-//\t/* copy local position data into local buffer */\n-//\torb_copy(ORB_ID(vehicle_local_position), l->mavlink->get_subs()->local_pos_sub, &l->listener->local_pos);\n-//\n-//\tif (l->mavlink->get_mode() == Mavlink::MODE_OFFBOARD)\n-//\t\tmavlink_msg_local_position_ned_send(l->mavlink->get_chan(),\n-//\t\t\t\t\t\t    l->listener->local_pos.timestamp / 1000,\n-//\t\t\t\t\t\t    l->listener->local_pos.x,\n-//\t\t\t\t\t\t    l->listener->local_pos.y,\n-//\t\t\t\t\t\t    l->listener->local_pos.z,\n-//\t\t\t\t\t\t    l->listener->local_pos.vx,\n-//\t\t\t\t\t\t    l->listener->local_pos.vy,\n-//\t\t\t\t\t\t    l->listener->local_pos.vz);\n-//}\n //\n //void\n //MavlinkOrbListener::l_global_position_setpoint(const struct listener *l)"}]}